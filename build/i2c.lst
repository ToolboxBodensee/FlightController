ARM GAS  /tmp/ccjQLHL9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"i2c.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_I2C1_Init,"ax",%progbits
  21              		.align	2
  22              		.global	MX_I2C1_Init
  23              		.thumb
  24              		.thumb_func
  26              	MX_I2C1_Init:
  27              	.LFB125:
  28              		.file 1 "Src/i2c.c"
   1:Src/i2c.c     **** /**
   2:Src/i2c.c     ****   ******************************************************************************
   3:Src/i2c.c     ****   * File Name          : I2C.c
   4:Src/i2c.c     ****   * Description        : This file provides code for the configuration
   5:Src/i2c.c     ****   *                      of the I2C instances.
   6:Src/i2c.c     ****   ******************************************************************************
   7:Src/i2c.c     ****   ** This notice applies to any and all portions of this file
   8:Src/i2c.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/i2c.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/i2c.c     ****   * inserted by the user or by software development tools
  11:Src/i2c.c     ****   * are owned by their respective copyright owners.
  12:Src/i2c.c     ****   *
  13:Src/i2c.c     ****   * COPYRIGHT(c) 2017 STMicroelectronics
  14:Src/i2c.c     ****   *
  15:Src/i2c.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/i2c.c     ****   * are permitted provided that the following conditions are met:
  17:Src/i2c.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/i2c.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/i2c.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/i2c.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/i2c.c     ****   *      and/or other materials provided with the distribution.
  22:Src/i2c.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/i2c.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/i2c.c     ****   *      without specific prior written permission.
  25:Src/i2c.c     ****   *
  26:Src/i2c.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/i2c.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/i2c.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/i2c.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/i2c.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccjQLHL9.s 			page 2


  31:Src/i2c.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/i2c.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/i2c.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/i2c.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/i2c.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/i2c.c     ****   *
  37:Src/i2c.c     ****   ******************************************************************************
  38:Src/i2c.c     ****   */
  39:Src/i2c.c     **** 
  40:Src/i2c.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/i2c.c     **** #include "i2c.h"
  42:Src/i2c.c     **** 
  43:Src/i2c.c     **** #include "gpio.h"
  44:Src/i2c.c     **** #include "dma.h"
  45:Src/i2c.c     **** 
  46:Src/i2c.c     **** /* USER CODE BEGIN 0 */
  47:Src/i2c.c     **** 
  48:Src/i2c.c     **** /* USER CODE END 0 */
  49:Src/i2c.c     **** 
  50:Src/i2c.c     **** I2C_HandleTypeDef hi2c1;
  51:Src/i2c.c     **** DMA_HandleTypeDef hdma_i2c1_rx;
  52:Src/i2c.c     **** DMA_HandleTypeDef hdma_i2c1_tx;
  53:Src/i2c.c     **** 
  54:Src/i2c.c     **** /* I2C1 init function */
  55:Src/i2c.c     **** void MX_I2C1_Init(void)
  56:Src/i2c.c     **** {
  29              		.loc 1 56 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  57:Src/i2c.c     **** 
  58:Src/i2c.c     ****   hi2c1.Instance = I2C1;
  38              		.loc 1 58 0
  39 0002 1448     		ldr	r0, .L6
  40 0004 144B     		ldr	r3, .L6+4
  41 0006 0360     		str	r3, [r0]
  59:Src/i2c.c     ****   hi2c1.Init.Timing = 0x00707CBB;
  42              		.loc 1 59 0
  43 0008 144B     		ldr	r3, .L6+8
  44 000a 4360     		str	r3, [r0, #4]
  60:Src/i2c.c     ****   hi2c1.Init.OwnAddress1 = 0;
  45              		.loc 1 60 0
  46 000c 0023     		movs	r3, #0
  47 000e 8360     		str	r3, [r0, #8]
  61:Src/i2c.c     ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
  48              		.loc 1 61 0
  49 0010 0122     		movs	r2, #1
  50 0012 C260     		str	r2, [r0, #12]
  62:Src/i2c.c     ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  51              		.loc 1 62 0
  52 0014 0361     		str	r3, [r0, #16]
  63:Src/i2c.c     ****   hi2c1.Init.OwnAddress2 = 0;
ARM GAS  /tmp/ccjQLHL9.s 			page 3


  53              		.loc 1 63 0
  54 0016 4361     		str	r3, [r0, #20]
  64:Src/i2c.c     ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
  55              		.loc 1 64 0
  56 0018 8361     		str	r3, [r0, #24]
  65:Src/i2c.c     ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  57              		.loc 1 65 0
  58 001a C361     		str	r3, [r0, #28]
  66:Src/i2c.c     ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
  59              		.loc 1 66 0
  60 001c 0362     		str	r3, [r0, #32]
  67:Src/i2c.c     ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
  61              		.loc 1 67 0
  62 001e FFF7FEFF 		bl	HAL_I2C_Init
  63              	.LVL0:
  64 0022 18B1     		cbz	r0, .L2
  68:Src/i2c.c     ****   {
  69:Src/i2c.c     ****     _Error_Handler(__FILE__, __LINE__);
  65              		.loc 1 69 0
  66 0024 0E48     		ldr	r0, .L6+12
  67 0026 4521     		movs	r1, #69
  68 0028 FFF7FEFF 		bl	_Error_Handler
  69              	.LVL1:
  70              	.L2:
  70:Src/i2c.c     ****   }
  71:Src/i2c.c     **** 
  72:Src/i2c.c     ****     /**Configure Analogue filter 
  73:Src/i2c.c     ****     */
  74:Src/i2c.c     ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
  71              		.loc 1 74 0
  72 002c 0948     		ldr	r0, .L6
  73 002e 0021     		movs	r1, #0
  74 0030 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
  75              	.LVL2:
  76 0034 18B1     		cbz	r0, .L3
  75:Src/i2c.c     ****   {
  76:Src/i2c.c     ****     _Error_Handler(__FILE__, __LINE__);
  77              		.loc 1 76 0
  78 0036 0A48     		ldr	r0, .L6+12
  79 0038 4C21     		movs	r1, #76
  80 003a FFF7FEFF 		bl	_Error_Handler
  81              	.LVL3:
  82              	.L3:
  77:Src/i2c.c     ****   }
  78:Src/i2c.c     **** 
  79:Src/i2c.c     ****     /**Configure Digital filter 
  80:Src/i2c.c     ****     */
  81:Src/i2c.c     ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
  83              		.loc 1 81 0
  84 003e 0548     		ldr	r0, .L6
  85 0040 0021     		movs	r1, #0
  86 0042 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
  87              	.LVL4:
  88 0046 18B1     		cbz	r0, .L1
  82:Src/i2c.c     ****   {
  83:Src/i2c.c     ****     _Error_Handler(__FILE__, __LINE__);
  89              		.loc 1 83 0
ARM GAS  /tmp/ccjQLHL9.s 			page 4


  90 0048 0548     		ldr	r0, .L6+12
  91 004a 5321     		movs	r1, #83
  92 004c FFF7FEFF 		bl	_Error_Handler
  93              	.LVL5:
  94              	.L1:
  95 0050 08BD     		pop	{r3, pc}
  96              	.L7:
  97 0052 00BF     		.align	2
  98              	.L6:
  99 0054 00000000 		.word	hi2c1
 100 0058 00540040 		.word	1073763328
 101 005c BB7C7000 		.word	7371963
 102 0060 00000000 		.word	.LC0
 103              		.cfi_endproc
 104              	.LFE125:
 106              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 107              		.align	2
 108              		.global	HAL_I2C_MspInit
 109              		.thumb
 110              		.thumb_func
 112              	HAL_I2C_MspInit:
 113              	.LFB126:
  84:Src/i2c.c     ****   }
  85:Src/i2c.c     **** 
  86:Src/i2c.c     **** }
  87:Src/i2c.c     **** 
  88:Src/i2c.c     **** void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
  89:Src/i2c.c     **** {
 114              		.loc 1 89 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 24
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              	.LVL6:
  90:Src/i2c.c     **** 
  91:Src/i2c.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
  92:Src/i2c.c     ****   if(i2cHandle->Instance==I2C1)
 119              		.loc 1 92 0
 120 0000 0268     		ldr	r2, [r0]
 121 0002 334B     		ldr	r3, .L14
 122 0004 9A42     		cmp	r2, r3
 123 0006 62D1     		bne	.L13
  89:Src/i2c.c     **** 
 124              		.loc 1 89 0
 125 0008 10B5     		push	{r4, lr}
 126              	.LCFI1:
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 4, -8
 129              		.cfi_offset 14, -4
 130 000a 86B0     		sub	sp, sp, #24
 131              	.LCFI2:
 132              		.cfi_def_cfa_offset 32
 133 000c 0446     		mov	r4, r0
  93:Src/i2c.c     ****   {
  94:Src/i2c.c     ****   /* USER CODE BEGIN I2C1_MspInit 0 */
  95:Src/i2c.c     **** 
  96:Src/i2c.c     ****   /* USER CODE END I2C1_MspInit 0 */
  97:Src/i2c.c     ****   
ARM GAS  /tmp/ccjQLHL9.s 			page 5


  98:Src/i2c.c     ****     /**I2C1 GPIO Configuration    
  99:Src/i2c.c     ****     PB6     ------> I2C1_SCL
 100:Src/i2c.c     ****     PB7     ------> I2C1_SDA 
 101:Src/i2c.c     ****     */
 102:Src/i2c.c     ****     GPIO_InitStruct.Pin = I2C_SCL_Pin|I2C_SDA_Pin;
 134              		.loc 1 102 0
 135 000e C023     		movs	r3, #192
 136 0010 0193     		str	r3, [sp, #4]
 103:Src/i2c.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 137              		.loc 1 103 0
 138 0012 1223     		movs	r3, #18
 139 0014 0293     		str	r3, [sp, #8]
 104:Src/i2c.c     ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 140              		.loc 1 104 0
 141 0016 0123     		movs	r3, #1
 142 0018 0393     		str	r3, [sp, #12]
 105:Src/i2c.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 143              		.loc 1 105 0
 144 001a 0323     		movs	r3, #3
 145 001c 0493     		str	r3, [sp, #16]
 106:Src/i2c.c     ****     GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 146              		.loc 1 106 0
 147 001e 0423     		movs	r3, #4
 148 0020 0593     		str	r3, [sp, #20]
 107:Src/i2c.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 149              		.loc 1 107 0
 150 0022 2C48     		ldr	r0, .L14+4
 151              	.LVL7:
 152 0024 0DEB0301 		add	r1, sp, r3
 153 0028 FFF7FEFF 		bl	HAL_GPIO_Init
 154              	.LVL8:
 155              	.LBB2:
 108:Src/i2c.c     **** 
 109:Src/i2c.c     ****     /* I2C1 clock enable */
 110:Src/i2c.c     ****     __HAL_RCC_I2C1_CLK_ENABLE();
 156              		.loc 1 110 0
 157 002c 2A4B     		ldr	r3, .L14+8
 158 002e 9A6D     		ldr	r2, [r3, #88]
 159 0030 42F40012 		orr	r2, r2, #2097152
 160 0034 9A65     		str	r2, [r3, #88]
 161 0036 9B6D     		ldr	r3, [r3, #88]
 162 0038 03F40013 		and	r3, r3, #2097152
 163 003c 0093     		str	r3, [sp]
 164 003e 009B     		ldr	r3, [sp]
 165              	.LBE2:
 111:Src/i2c.c     ****   
 112:Src/i2c.c     ****     /* I2C1 DMA Init */
 113:Src/i2c.c     ****     /* I2C1_RX Init */
 114:Src/i2c.c     ****     hdma_i2c1_rx.Instance = DMA2_Channel6;
 166              		.loc 1 114 0
 167 0040 2648     		ldr	r0, .L14+12
 168 0042 274B     		ldr	r3, .L14+16
 169 0044 0360     		str	r3, [r0]
 115:Src/i2c.c     ****     hdma_i2c1_rx.Init.Request = DMA_REQUEST_5;
 170              		.loc 1 115 0
 171 0046 0523     		movs	r3, #5
 172 0048 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccjQLHL9.s 			page 6


 116:Src/i2c.c     ****     hdma_i2c1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 173              		.loc 1 116 0
 174 004a 0023     		movs	r3, #0
 175 004c 8360     		str	r3, [r0, #8]
 117:Src/i2c.c     ****     hdma_i2c1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 176              		.loc 1 117 0
 177 004e C360     		str	r3, [r0, #12]
 118:Src/i2c.c     ****     hdma_i2c1_rx.Init.MemInc = DMA_MINC_ENABLE;
 178              		.loc 1 118 0
 179 0050 8022     		movs	r2, #128
 180 0052 0261     		str	r2, [r0, #16]
 119:Src/i2c.c     ****     hdma_i2c1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 181              		.loc 1 119 0
 182 0054 4361     		str	r3, [r0, #20]
 120:Src/i2c.c     ****     hdma_i2c1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 183              		.loc 1 120 0
 184 0056 8361     		str	r3, [r0, #24]
 121:Src/i2c.c     ****     hdma_i2c1_rx.Init.Mode = DMA_NORMAL;
 185              		.loc 1 121 0
 186 0058 C361     		str	r3, [r0, #28]
 122:Src/i2c.c     ****     hdma_i2c1_rx.Init.Priority = DMA_PRIORITY_HIGH;
 187              		.loc 1 122 0
 188 005a 4FF40053 		mov	r3, #8192
 189 005e 0362     		str	r3, [r0, #32]
 123:Src/i2c.c     ****     if (HAL_DMA_Init(&hdma_i2c1_rx) != HAL_OK)
 190              		.loc 1 123 0
 191 0060 FFF7FEFF 		bl	HAL_DMA_Init
 192              	.LVL9:
 193 0064 18B1     		cbz	r0, .L10
 124:Src/i2c.c     ****     {
 125:Src/i2c.c     ****       _Error_Handler(__FILE__, __LINE__);
 194              		.loc 1 125 0
 195 0066 1F48     		ldr	r0, .L14+20
 196 0068 7D21     		movs	r1, #125
 197 006a FFF7FEFF 		bl	_Error_Handler
 198              	.LVL10:
 199              	.L10:
 126:Src/i2c.c     ****     }
 127:Src/i2c.c     **** 
 128:Src/i2c.c     ****     __HAL_LINKDMA(i2cHandle,hdmarx,hdma_i2c1_rx);
 200              		.loc 1 128 0
 201 006e 1B4B     		ldr	r3, .L14+12
 202 0070 E363     		str	r3, [r4, #60]
 203 0072 9C62     		str	r4, [r3, #40]
 129:Src/i2c.c     **** 
 130:Src/i2c.c     ****     /* I2C1_TX Init */
 131:Src/i2c.c     ****     hdma_i2c1_tx.Instance = DMA2_Channel7;
 204              		.loc 1 131 0
 205 0074 1C48     		ldr	r0, .L14+24
 206 0076 1D4B     		ldr	r3, .L14+28
 207 0078 0360     		str	r3, [r0]
 132:Src/i2c.c     ****     hdma_i2c1_tx.Init.Request = DMA_REQUEST_5;
 208              		.loc 1 132 0
 209 007a 0523     		movs	r3, #5
 210 007c 4360     		str	r3, [r0, #4]
 133:Src/i2c.c     ****     hdma_i2c1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 211              		.loc 1 133 0
ARM GAS  /tmp/ccjQLHL9.s 			page 7


 212 007e 1023     		movs	r3, #16
 213 0080 8360     		str	r3, [r0, #8]
 134:Src/i2c.c     ****     hdma_i2c1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 214              		.loc 1 134 0
 215 0082 0023     		movs	r3, #0
 216 0084 C360     		str	r3, [r0, #12]
 135:Src/i2c.c     ****     hdma_i2c1_tx.Init.MemInc = DMA_MINC_ENABLE;
 217              		.loc 1 135 0
 218 0086 8022     		movs	r2, #128
 219 0088 0261     		str	r2, [r0, #16]
 136:Src/i2c.c     ****     hdma_i2c1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 220              		.loc 1 136 0
 221 008a 4361     		str	r3, [r0, #20]
 137:Src/i2c.c     ****     hdma_i2c1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 222              		.loc 1 137 0
 223 008c 8361     		str	r3, [r0, #24]
 138:Src/i2c.c     ****     hdma_i2c1_tx.Init.Mode = DMA_NORMAL;
 224              		.loc 1 138 0
 225 008e C361     		str	r3, [r0, #28]
 139:Src/i2c.c     ****     hdma_i2c1_tx.Init.Priority = DMA_PRIORITY_HIGH;
 226              		.loc 1 139 0
 227 0090 4FF40053 		mov	r3, #8192
 228 0094 0362     		str	r3, [r0, #32]
 140:Src/i2c.c     ****     if (HAL_DMA_Init(&hdma_i2c1_tx) != HAL_OK)
 229              		.loc 1 140 0
 230 0096 FFF7FEFF 		bl	HAL_DMA_Init
 231              	.LVL11:
 232 009a 18B1     		cbz	r0, .L11
 141:Src/i2c.c     ****     {
 142:Src/i2c.c     ****       _Error_Handler(__FILE__, __LINE__);
 233              		.loc 1 142 0
 234 009c 1148     		ldr	r0, .L14+20
 235 009e 8E21     		movs	r1, #142
 236 00a0 FFF7FEFF 		bl	_Error_Handler
 237              	.LVL12:
 238              	.L11:
 143:Src/i2c.c     ****     }
 144:Src/i2c.c     **** 
 145:Src/i2c.c     ****     __HAL_LINKDMA(i2cHandle,hdmatx,hdma_i2c1_tx);
 239              		.loc 1 145 0
 240 00a4 104B     		ldr	r3, .L14+24
 241 00a6 A363     		str	r3, [r4, #56]
 242 00a8 9C62     		str	r4, [r3, #40]
 146:Src/i2c.c     **** 
 147:Src/i2c.c     ****     /* I2C1 interrupt Init */
 148:Src/i2c.c     ****     HAL_NVIC_SetPriority(I2C1_EV_IRQn, 0, 0);
 243              		.loc 1 148 0
 244 00aa 1F20     		movs	r0, #31
 245 00ac 0021     		movs	r1, #0
 246 00ae 0A46     		mov	r2, r1
 247 00b0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 248              	.LVL13:
 149:Src/i2c.c     ****     HAL_NVIC_EnableIRQ(I2C1_EV_IRQn);
 249              		.loc 1 149 0
 250 00b4 1F20     		movs	r0, #31
 251 00b6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 252              	.LVL14:
ARM GAS  /tmp/ccjQLHL9.s 			page 8


 150:Src/i2c.c     ****     HAL_NVIC_SetPriority(I2C1_ER_IRQn, 0, 0);
 253              		.loc 1 150 0
 254 00ba 2020     		movs	r0, #32
 255 00bc 0021     		movs	r1, #0
 256 00be 0A46     		mov	r2, r1
 257 00c0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 258              	.LVL15:
 151:Src/i2c.c     ****     HAL_NVIC_EnableIRQ(I2C1_ER_IRQn);
 259              		.loc 1 151 0
 260 00c4 2020     		movs	r0, #32
 261 00c6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 262              	.LVL16:
 152:Src/i2c.c     ****   /* USER CODE BEGIN I2C1_MspInit 1 */
 153:Src/i2c.c     **** 
 154:Src/i2c.c     ****   /* USER CODE END I2C1_MspInit 1 */
 155:Src/i2c.c     ****   }
 156:Src/i2c.c     **** }
 263              		.loc 1 156 0
 264 00ca 06B0     		add	sp, sp, #24
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 8
 267              		@ sp needed
 268 00cc 10BD     		pop	{r4, pc}
 269              	.LVL17:
 270              	.L13:
 271              	.LCFI4:
 272              		.cfi_def_cfa_offset 0
 273              		.cfi_restore 4
 274              		.cfi_restore 14
 275 00ce 7047     		bx	lr
 276              	.L15:
 277              		.align	2
 278              	.L14:
 279 00d0 00540040 		.word	1073763328
 280 00d4 00040048 		.word	1207960576
 281 00d8 00100240 		.word	1073876992
 282 00dc 00000000 		.word	hdma_i2c1_rx
 283 00e0 6C040240 		.word	1073874028
 284 00e4 00000000 		.word	.LC0
 285 00e8 00000000 		.word	hdma_i2c1_tx
 286 00ec 80040240 		.word	1073874048
 287              		.cfi_endproc
 288              	.LFE126:
 290              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 291              		.align	2
 292              		.global	HAL_I2C_MspDeInit
 293              		.thumb
 294              		.thumb_func
 296              	HAL_I2C_MspDeInit:
 297              	.LFB127:
 157:Src/i2c.c     **** 
 158:Src/i2c.c     **** void HAL_I2C_MspDeInit(I2C_HandleTypeDef* i2cHandle)
 159:Src/i2c.c     **** {
 298              		.loc 1 159 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccjQLHL9.s 			page 9


 302              	.LVL18:
 160:Src/i2c.c     **** 
 161:Src/i2c.c     ****   if(i2cHandle->Instance==I2C1)
 303              		.loc 1 161 0
 304 0000 0268     		ldr	r2, [r0]
 305 0002 0E4B     		ldr	r3, .L20
 306 0004 9A42     		cmp	r2, r3
 307 0006 17D1     		bne	.L19
 159:Src/i2c.c     **** 
 308              		.loc 1 159 0
 309 0008 10B5     		push	{r4, lr}
 310              	.LCFI5:
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 4, -8
 313              		.cfi_offset 14, -4
 314 000a 0446     		mov	r4, r0
 162:Src/i2c.c     ****   {
 163:Src/i2c.c     ****   /* USER CODE BEGIN I2C1_MspDeInit 0 */
 164:Src/i2c.c     **** 
 165:Src/i2c.c     ****   /* USER CODE END I2C1_MspDeInit 0 */
 166:Src/i2c.c     ****     /* Peripheral clock disable */
 167:Src/i2c.c     ****     __HAL_RCC_I2C1_CLK_DISABLE();
 315              		.loc 1 167 0
 316 000c 0C4A     		ldr	r2, .L20+4
 317 000e 936D     		ldr	r3, [r2, #88]
 318 0010 23F40013 		bic	r3, r3, #2097152
 319 0014 9365     		str	r3, [r2, #88]
 168:Src/i2c.c     ****   
 169:Src/i2c.c     ****     /**I2C1 GPIO Configuration    
 170:Src/i2c.c     ****     PB6     ------> I2C1_SCL
 171:Src/i2c.c     ****     PB7     ------> I2C1_SDA 
 172:Src/i2c.c     ****     */
 173:Src/i2c.c     ****     HAL_GPIO_DeInit(GPIOB, I2C_SCL_Pin|I2C_SDA_Pin);
 320              		.loc 1 173 0
 321 0016 0B48     		ldr	r0, .L20+8
 322              	.LVL19:
 323 0018 C021     		movs	r1, #192
 324 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 325              	.LVL20:
 174:Src/i2c.c     **** 
 175:Src/i2c.c     ****     /* I2C1 DMA DeInit */
 176:Src/i2c.c     ****     HAL_DMA_DeInit(i2cHandle->hdmarx);
 326              		.loc 1 176 0
 327 001e E06B     		ldr	r0, [r4, #60]
 328 0020 FFF7FEFF 		bl	HAL_DMA_DeInit
 329              	.LVL21:
 177:Src/i2c.c     ****     HAL_DMA_DeInit(i2cHandle->hdmatx);
 330              		.loc 1 177 0
 331 0024 A06B     		ldr	r0, [r4, #56]
 332 0026 FFF7FEFF 		bl	HAL_DMA_DeInit
 333              	.LVL22:
 178:Src/i2c.c     **** 
 179:Src/i2c.c     ****     /* I2C1 interrupt Deinit */
 180:Src/i2c.c     ****     HAL_NVIC_DisableIRQ(I2C1_EV_IRQn);
 334              		.loc 1 180 0
 335 002a 1F20     		movs	r0, #31
 336 002c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
ARM GAS  /tmp/ccjQLHL9.s 			page 10


 337              	.LVL23:
 181:Src/i2c.c     ****     HAL_NVIC_DisableIRQ(I2C1_ER_IRQn);
 338              		.loc 1 181 0
 339 0030 2020     		movs	r0, #32
 340 0032 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 341              	.LVL24:
 342 0036 10BD     		pop	{r4, pc}
 343              	.LVL25:
 344              	.L19:
 345              	.LCFI6:
 346              		.cfi_def_cfa_offset 0
 347              		.cfi_restore 4
 348              		.cfi_restore 14
 349 0038 7047     		bx	lr
 350              	.L21:
 351 003a 00BF     		.align	2
 352              	.L20:
 353 003c 00540040 		.word	1073763328
 354 0040 00100240 		.word	1073876992
 355 0044 00040048 		.word	1207960576
 356              		.cfi_endproc
 357              	.LFE127:
 359              		.comm	hdma_i2c1_tx,72,4
 360              		.comm	hdma_i2c1_rx,72,4
 361              		.comm	hi2c1,76,4
 362              		.section	.rodata.str1.4,"aMS",%progbits,1
 363              		.align	2
 364              	.LC0:
 365 0000 5372632F 		.ascii	"Src/i2c.c\000"
 365      6932632E 
 365      6300
 366              		.text
 367              	.Letext0:
 368              		.file 2 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 369              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 370              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 371              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 372              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 373              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 374              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 375              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 376              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c_ex.h"
 377              		.file 11 "Inc/dma.h"
 378              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
ARM GAS  /tmp/ccjQLHL9.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 i2c.c
     /tmp/ccjQLHL9.s:21     .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccjQLHL9.s:26     .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccjQLHL9.s:99     .text.MX_I2C1_Init:0000000000000054 $d
                            *COM*:000000000000004c hi2c1
     /tmp/ccjQLHL9.s:107    .text.HAL_I2C_MspInit:0000000000000000 $t
     /tmp/ccjQLHL9.s:112    .text.HAL_I2C_MspInit:0000000000000000 HAL_I2C_MspInit
     /tmp/ccjQLHL9.s:279    .text.HAL_I2C_MspInit:00000000000000d0 $d
                            *COM*:0000000000000048 hdma_i2c1_rx
                            *COM*:0000000000000048 hdma_i2c1_tx
     /tmp/ccjQLHL9.s:291    .text.HAL_I2C_MspDeInit:0000000000000000 $t
     /tmp/ccjQLHL9.s:296    .text.HAL_I2C_MspDeInit:0000000000000000 HAL_I2C_MspDeInit
     /tmp/ccjQLHL9.s:353    .text.HAL_I2C_MspDeInit:000000000000003c $d
     /tmp/ccjQLHL9.s:363    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_I2C_Init
_Error_Handler
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
