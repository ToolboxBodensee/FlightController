ARM GAS  /tmp/ccwgKUSV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32l4xx_hal_uart.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	UART_EndTxTransfer:
  26              	.LFB168:
  27              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @file    stm32l4xx_hal_uart.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   [..]
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
ARM GAS  /tmp/ccwgKUSV.s 			page 2


  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @endverbatim
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @attention
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      without specific prior written permission.
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  /tmp/ccwgKUSV.s 			page 3


  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #include "stm32l4xx_hal.h"
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup STM32L4xx_HAL_Driver
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART UART
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief HAL UART module driver
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccwgKUSV.s 			page 4


 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** ===============================================================================
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in asynchronous mode.
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Baud Rate
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Word Length
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Stop Bit
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
ARM GAS  /tmp/ccwgKUSV.s 			page 5


 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Hardware flow control
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Over Sampling Method
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) data logical level inversion
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX and TX pins swap
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX overrun detection disabling
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA disabling on RX error
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) MSB first on communication line
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) auto Baud rate detection
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     are available in reference manual).
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit, 
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the 
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   following table.
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Table 1. UART frame format.
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and initialize the associated handle.
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart == NULL)
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccwgKUSV.s 			page 6


 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccwgKUSV.s 			page 7


 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart == NULL)
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART instance */
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart             UART handle.
ARM GAS  /tmp/ccwgKUSV.s 			page 8


 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart == NULL)
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the LIN UART instance */
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->Init.WordLength != UART_WORDLENGTH_8B)
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
ARM GAS  /tmp/ccwgKUSV.s 			page 9


 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and initialize the associated handle.
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart        UART handle.
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart == NULL)
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the wake up method parameter */
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/ccwgKUSV.s 			page 10


 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart == NULL)
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
ARM GAS  /tmp/ccwgKUSV.s 			page 11


 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlock */
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
ARM GAS  /tmp/ccwgKUSV.s 			page 12


 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### IO operation functions #####
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and Half duplex data transfers.
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) There are two mode of transfer:
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            after finishing transfer.
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            using DMA mode.
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Blocking mode API's are :
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort()
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Errors are handled as follows :
ARM GAS  /tmp/ccwgKUSV.s 			page 13


 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one 
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and 
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data to be sent.
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t* tmp;
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
ARM GAS  /tmp/ccwgKUSV.s 			page 14


 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO 
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when 
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and 
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data to be received.
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t* tmp;
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0;
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccwgKUSV.s 			page 15


 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* as long as data have to be received */
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData +=2U;
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount--;
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
ARM GAS  /tmp/ccwgKUSV.s 			page 16


 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {      
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       } 
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }  
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
ARM GAS  /tmp/ccwgKUSV.s 			page 17


 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);  
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);  
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be received.
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccwgKUSV.s 			page 18


 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        /* Process Unlocked */
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
ARM GAS  /tmp/ccwgKUSV.s 			page 19


1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be received.
ARM GAS  /tmp/ccwgKUSV.s 			page 20


1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the parity bit (MSB position).
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA channel */
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccwgKUSV.s 			page 21


1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  /tmp/ccwgKUSV.s 			page 22


1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback() /
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   the stream and the corresponding call back is executed. */
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/ccwgKUSV.s 			page 23


1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
ARM GAS  /tmp/ccwgKUSV.s 			page 24


1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
ARM GAS  /tmp/ccwgKUSV.s 			page 25


1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccwgKUSV.s 			page 26


1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      before any call to DMA Abort functions */
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccwgKUSV.s 			page 27


1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
ARM GAS  /tmp/ccwgKUSV.s 			page 28


1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (abortcplt == 1U)
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear ISR function pointers */
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = NULL;
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset errorCode */
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Discard the received data */
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
ARM GAS  /tmp/ccwgKUSV.s 			page 29


1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount = 0U; 
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear TxISR function pointers */
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = NULL;
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear TxISR function pointers */
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
ARM GAS  /tmp/ccwgKUSV.s 			page 30


1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
ARM GAS  /tmp/ccwgKUSV.s 			page 31


1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount = 0U;
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Discard the received data */
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U; 
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RxISR function pointer */
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
ARM GAS  /tmp/ccwgKUSV.s 			page 32


1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If no error occurs */
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (errorflags == RESET)
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE_RXFNE) != RESET) 
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        && (   ((cr1its & USART_CR1_RXNEIE_RXFNEIE) != RESET)
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            || ((cr3its & USART_CR3_RXFTIE) != RESET)) )
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET)
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        && ((cr1its & USART_CR1_RXNEIE) != RESET))
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->RxISR != NULL) {huart->RxISR(huart);}
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }  
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If some errors occur */
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(   (errorflags != RESET)
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      && (   (((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != RESET)
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          ||  ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE)) != RESET))) )
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(   (errorflags != RESET)
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
ARM GAS  /tmp/ccwgKUSV.s 			page 33


1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(   ((isrflags & USART_ISR_ORE) != RESET)
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        &&(  ((cr1its & USART_CR1_RXNEIE_RXFNEIE) != RESET) ||
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != RESET)))
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(   ((isrflags & USART_ISR_ORE) != RESET)
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        &&(  ((cr1its & USART_CR1_RXNEIE) != RESET) ||
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              ((cr3its & USART_CR3_EIE) != RESET)))
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE_RXFNE) != RESET) 
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          && (   ((cr1its & USART_CR1_RXNEIE_RXFNEIE) != RESET)
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              || ((cr3its & USART_CR3_RXFTIE) != RESET)) )
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET)
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          && ((cr1its & USART_CR1_RXNEIE) != RESET))
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (huart->RxISR != NULL) {huart->RxISR(huart);}
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       consider error as blocking */
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Set the UART state ready to be able to start again the process,
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Abort DMA RX */
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
ARM GAS  /tmp/ccwgKUSV.s 			page 34


1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           else
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Call user error callback */
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Call user error callback */
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Error is notified to user through user error callback */
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   } /* End if some error occurs */
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE_TXFNF) != RESET) 
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      && (   ((cr1its & USART_CR1_TXEIE_TXFNFIE) != RESET)
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          || ((cr3its & USART_CR3_TXFTIE) != RESET)) )
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET)
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      && ((cr1its & USART_CR1_TXEIE) != RESET))
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxISR != NULL) {huart->TxISR(huart);}
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
ARM GAS  /tmp/ccwgKUSV.s 			page 35


1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXFE) != RESET) && ((cr1its & USART_CR1_TXFEIE) != RESET))
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(((isrflags & USART_ISR_RXFF) != RESET) && ((cr1its & USART_CR1_RXFFIE) != RESET))
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccwgKUSV.s 			page 36


1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART error callback.
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccwgKUSV.s 			page 37


2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART control functions
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_Wakeup_AddressConfig() API configures the wake-up from stop mode parameters
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/ccwgKUSV.s 			page 38


2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Disable UART mute mode (does not mean the UART actually exits mute mode
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * as it may not have been in mute mode at this very moment).
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
ARM GAS  /tmp/ccwgKUSV.s 			page 39


2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status.
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Transmit break characters.
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/ccwgKUSV.s 			page 40


2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Send break characters */
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->RQR, UART_SENDBREAK_REQUEST);
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  *
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides functions allowing to :
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle state.
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle error code
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Return the UART handle state.
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *              the configuration information for the specified UART.
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL state
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** * @brief  Return the UART handle error code.
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *              the configuration information for the specified UART.
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** * @retval UART Error Code
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/ccwgKUSV.s 			page 41


2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(UART_INSTANCE_LOWPOWER(huart))
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));  
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
ARM GAS  /tmp/ccwgKUSV.s 			page 42


2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to huart->Init.StopBits value */
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART)
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - set TXFTCFG bit according to huart->Init.TxFifoThreshold value
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - set RXFTCFG bit according to huart->Init.RxFifoThreshold value */
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check LPUART instance */
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(UART_INSTANCE_LOWPOWER(huart))
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Retrieve frequency clock */
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       lpuart_ker_ck_pres = (HAL_RCC_GetPCLK1Freq()/UARTPrescTable[huart->Init.ClockPrescaler]);
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       lpuart_ker_ck_pres = ((uint32_t)HSI_VALUE/UARTPrescTable[huart->Init.ClockPrescaler]);
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       lpuart_ker_ck_pres = (HAL_RCC_GetSysClockFreq()/UARTPrescTable[huart->Init.ClockPrescaler]);
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
ARM GAS  /tmp/ccwgKUSV.s 			page 43


2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE/UARTPrescTable[huart->Init.ClockPrescaler]);
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     default:
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* if proper clock source reported */
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (lpuart_ker_ck_pres != 0U)
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) ))
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         switch (clocksource)
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_PCLK1:
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, huart
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           break;
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_HSI:
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockP
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate));
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           break;
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_SYSCLK:
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, hu
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           break;
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_LSE:
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockP
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           break;
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_UNDEFINED:
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         default:
ARM GAS  /tmp/ccwgKUSV.s 			page 44


2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           break;
2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }  /*   if ( (tmpreg < (3 * huart->Init.BaudRate) ) || (tmpreg > (4096 * huart->Init.BaudRate
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     } /* if (tmpreg != 0) */
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, huart-
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, huart-
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPr
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, hua
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPr
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
ARM GAS  /tmp/ccwgKUSV.s 			page 45


2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     default:
2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp = usartdiv & 0xFFF0U;
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, huart
2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, huart
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockP
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, hu
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockP
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
ARM GAS  /tmp/ccwgKUSV.s 			page 46


2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     default:
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear ISR function pointers */
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return ret;
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure data inversion */
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
ARM GAS  /tmp/ccwgKUSV.s 			page 47


2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Check the UART Idle State.
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccwgKUSV.s 			page 48


2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tickstart = HAL_GetTick();
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until REACK flag is set */
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART State */
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart     UART handle.
2692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
2693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
2694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Tickstart Tick start value
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout   Timeout duration
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check for the Timeout */
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
ARM GAS  /tmp/ccwgKUSV.s 			page 49


2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
2719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Process Unlocked */
2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  28              		.loc 1 2736 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  34              		.loc 1 2741 0
  35 0000 0268     		ldr	r2, [r0]
  36 0002 1368     		ldr	r3, [r2]
  37 0004 23F0C003 		bic	r3, r3, #192
  38 0008 1360     		str	r3, [r2]
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  39              		.loc 1 2745 0
  40 000a 2023     		movs	r3, #32
  41 000c 80F87130 		strb	r3, [r0, #113]
  42 0010 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE168:
  46 0012 00BF     		.section	.text.UART_EndRxTransfer,"ax",%progbits
  47              		.align	2
  48              		.thumb
  49              		.thumb_func
  51              	UART_EndRxTransfer:
ARM GAS  /tmp/ccwgKUSV.s 			page 50


  52              	.LFB169:
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  53              		.loc 1 2755 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.LVL1:
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
2759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  59              		.loc 1 2760 0
  60 0000 0268     		ldr	r2, [r0]
  61 0002 1368     		ldr	r3, [r2]
  62 0004 23F49073 		bic	r3, r3, #288
  63 0008 1360     		str	r3, [r2]
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  64              		.loc 1 2762 0
  65 000a 0268     		ldr	r2, [r0]
  66 000c 9368     		ldr	r3, [r2, #8]
  67 000e 23F00103 		bic	r3, r3, #1
  68 0012 9360     		str	r3, [r2, #8]
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  69              		.loc 1 2765 0
  70 0014 2023     		movs	r3, #32
  71 0016 80F87230 		strb	r3, [r0, #114]
2766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
  72              		.loc 1 2768 0
  73 001a 0023     		movs	r3, #0
  74 001c 0366     		str	r3, [r0, #96]
  75 001e 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE169:
  79              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  80              		.align	2
  81              		.thumb
  82              		.thumb_func
  84              	UART_TxISR_8BIT:
  85              	.LFB180:
2769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccwgKUSV.s 			page 51


2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
2775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
2783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {  
2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
2788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
2790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Circular mode */
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
2826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  /tmp/ccwgKUSV.s 			page 52


2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
2830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
2844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
2851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
2856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
ARM GAS  /tmp/ccwgKUSV.s 			page 53


2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
2886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
2893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
2917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
2922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
ARM GAS  /tmp/ccwgKUSV.s 			page 54


2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
2973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccwgKUSV.s 			page 55


2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
3032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccwgKUSV.s 			page 56


3056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  86              		.loc 1 3056 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.LVL2:
3057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  92              		.loc 1 3058 0
  93 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
  94 0004 DBB2     		uxtb	r3, r3
  95 0006 212B     		cmp	r3, #33
  96 0008 1AD1     		bne	.L3
3059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->TxXferCount == 0)
  97              		.loc 1 3060 0
  98 000a B0F85230 		ldrh	r3, [r0, #82]
  99 000e 9BB2     		uxth	r3, r3
 100 0010 53B9     		cbnz	r3, .L5
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 101              		.loc 1 3066 0
 102 0012 0268     		ldr	r2, [r0]
 103 0014 1368     		ldr	r3, [r2]
 104 0016 23F08003 		bic	r3, r3, #128
 105 001a 1360     		str	r3, [r2]
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
3069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 106              		.loc 1 3070 0
 107 001c 0268     		ldr	r2, [r0]
 108 001e 1368     		ldr	r3, [r2]
 109 0020 43F04003 		orr	r3, r3, #64
 110 0024 1360     		str	r3, [r2]
 111 0026 7047     		bx	lr
 112              	.L5:
3071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFF);
 113              		.loc 1 3074 0
 114 0028 0268     		ldr	r2, [r0]
 115 002a C36C     		ldr	r3, [r0, #76]
 116 002c 591C     		adds	r1, r3, #1
 117 002e C164     		str	r1, [r0, #76]
 118 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 119 0032 1385     		strh	r3, [r2, #40]	@ movhi
3075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 120              		.loc 1 3075 0
 121 0034 B0F85230 		ldrh	r3, [r0, #82]
 122 0038 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccwgKUSV.s 			page 57


 123 003a 9BB2     		uxth	r3, r3
 124 003c A0F85230 		strh	r3, [r0, #82]	@ movhi
 125              	.L3:
 126 0040 7047     		bx	lr
 127              		.cfi_endproc
 128              	.LFE180:
 130 0042 00BF     		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 131              		.align	2
 132              		.thumb
 133              		.thumb_func
 135              	UART_TxISR_16BIT:
 136              	.LFB181:
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 137              		.loc 1 3088 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 142              	.LVL3:
3089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t* tmp;
3090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 143              		.loc 1 3092 0
 144 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 145 0004 DBB2     		uxtb	r3, r3
 146 0006 212B     		cmp	r3, #33
 147 0008 1DD1     		bne	.L6
3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->TxXferCount == 0)
 148              		.loc 1 3094 0
 149 000a B0F85230 		ldrh	r3, [r0, #82]
 150 000e 9BB2     		uxth	r3, r3
 151 0010 53B9     		cbnz	r3, .L8
3095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 152              		.loc 1 3100 0
 153 0012 0268     		ldr	r2, [r0]
 154 0014 1368     		ldr	r3, [r2]
 155 0016 23F08003 		bic	r3, r3, #128
 156 001a 1360     		str	r3, [r2]
ARM GAS  /tmp/ccwgKUSV.s 			page 58


3101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 157              		.loc 1 3104 0
 158 001c 0268     		ldr	r2, [r0]
 159 001e 1368     		ldr	r3, [r2]
 160 0020 43F04003 		orr	r3, r3, #64
 161 0024 1360     		str	r3, [r2]
 162 0026 7047     		bx	lr
 163              	.L8:
3105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
 164              		.loc 1 3108 0
 165 0028 C36C     		ldr	r3, [r0, #76]
 166              	.LVL4:
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
 167              		.loc 1 3109 0
 168 002a 0268     		ldr	r2, [r0]
 169 002c 1B88     		ldrh	r3, [r3]
 170              	.LVL5:
 171 002e C3F30803 		ubfx	r3, r3, #0, #9
 172 0032 1385     		strh	r3, [r2, #40]	@ movhi
 173              	.LVL6:
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2;
 174              		.loc 1 3110 0
 175 0034 C36C     		ldr	r3, [r0, #76]
 176 0036 0233     		adds	r3, r3, #2
 177 0038 C364     		str	r3, [r0, #76]
3111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 178              		.loc 1 3111 0
 179 003a B0F85230 		ldrh	r3, [r0, #82]
 180 003e 013B     		subs	r3, r3, #1
 181 0040 9BB2     		uxth	r3, r3
 182 0042 A0F85230 		strh	r3, [r0, #82]	@ movhi
 183              	.L6:
 184 0046 7047     		bx	lr
 185              		.cfi_endproc
 186              	.LFE181:
 188              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 189              		.align	2
 190              		.weak	HAL_UART_MspInit
 191              		.thumb
 192              		.thumb_func
 194              	HAL_UART_MspInit:
 195              	.LFB130:
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 196              		.loc 1 570 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL7:
 202 0000 7047     		bx	lr
 203              		.cfi_endproc
ARM GAS  /tmp/ccwgKUSV.s 			page 59


 204              	.LFE130:
 206 0002 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 207              		.align	2
 208              		.weak	HAL_UART_MspDeInit
 209              		.thumb
 210              		.thumb_func
 212              	HAL_UART_MspDeInit:
 213              	.LFB131:
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 214              		.loc 1 585 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 219              	.LVL8:
 220 0000 7047     		bx	lr
 221              		.cfi_endproc
 222              	.LFE131:
 224 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 225              		.align	2
 226              		.global	HAL_UART_DeInit
 227              		.thumb
 228              		.thumb_func
 230              	HAL_UART_DeInit:
 231              	.LFB129:
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 232              		.loc 1 532 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL9:
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 237              		.loc 1 534 0
 238 0000 D8B1     		cbz	r0, .L13
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 239              		.loc 1 532 0
 240 0002 38B5     		push	{r3, r4, r5, lr}
 241              	.LCFI0:
 242              		.cfi_def_cfa_offset 16
 243              		.cfi_offset 3, -16
 244              		.cfi_offset 4, -12
 245              		.cfi_offset 5, -8
 246              		.cfi_offset 14, -4
 247 0004 0446     		mov	r4, r0
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 248              		.loc 1 542 0
 249 0006 2423     		movs	r3, #36
 250 0008 80F87130 		strb	r3, [r0, #113]
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 251              		.loc 1 545 0
 252 000c 0268     		ldr	r2, [r0]
 253 000e 1368     		ldr	r3, [r2]
 254 0010 23F00103 		bic	r3, r3, #1
 255 0014 1360     		str	r3, [r2]
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 256              		.loc 1 547 0
 257 0016 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccwgKUSV.s 			page 60


 258 0018 0025     		movs	r5, #0
 259 001a 1D60     		str	r5, [r3]
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 260              		.loc 1 548 0
 261 001c 0368     		ldr	r3, [r0]
 262 001e 5D60     		str	r5, [r3, #4]
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 263              		.loc 1 549 0
 264 0020 0368     		ldr	r3, [r0]
 265 0022 9D60     		str	r5, [r3, #8]
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 266              		.loc 1 552 0
 267 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 268              	.LVL10:
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 269              		.loc 1 554 0
 270 0028 6567     		str	r5, [r4, #116]
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 271              		.loc 1 555 0
 272 002a 84F87150 		strb	r5, [r4, #113]
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 273              		.loc 1 556 0
 274 002e 84F87250 		strb	r5, [r4, #114]
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 275              		.loc 1 559 0
 276 0032 84F87050 		strb	r5, [r4, #112]
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 277              		.loc 1 561 0
 278 0036 2846     		mov	r0, r5
 279 0038 38BD     		pop	{r3, r4, r5, pc}
 280              	.LVL11:
 281              	.L13:
 282              	.LCFI1:
 283              		.cfi_def_cfa_offset 0
 284              		.cfi_restore 3
 285              		.cfi_restore 4
 286              		.cfi_restore 5
 287              		.cfi_restore 14
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 288              		.loc 1 536 0
 289 003a 0120     		movs	r0, #1
 290              	.LVL12:
 291 003c 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE129:
 295 003e 00BF     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 296              		.align	2
 297              		.global	HAL_UART_Transmit_IT
 298              		.thumb
 299              		.thumb_func
 301              	HAL_UART_Transmit_IT:
 302              	.LFB134:
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 303              		.loc 1 834 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwgKUSV.s 			page 61


 307              		@ link register save eliminated.
 308              	.LVL13:
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 309              		.loc 1 836 0
 310 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 311 0004 DBB2     		uxtb	r3, r3
 312 0006 202B     		cmp	r3, #32
 313 0008 28D1     		bne	.L20
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 314              		.loc 1 838 0
 315 000a 49B3     		cbz	r1, .L21
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 316              		.loc 1 838 0 is_stmt 0 discriminator 1
 317 000c 52B3     		cbz	r2, .L22
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 318              		.loc 1 844 0 is_stmt 1
 319 000e 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 320 0012 012B     		cmp	r3, #1
 321 0014 28D0     		beq	.L23
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 322              		.loc 1 844 0 is_stmt 0 discriminator 2
 323 0016 0123     		movs	r3, #1
 324 0018 80F87030 		strb	r3, [r0, #112]
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 325              		.loc 1 846 0 is_stmt 1 discriminator 2
 326 001c C164     		str	r1, [r0, #76]
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 327              		.loc 1 847 0 discriminator 2
 328 001e A0F85020 		strh	r2, [r0, #80]	@ movhi
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 329              		.loc 1 848 0 discriminator 2
 330 0022 A0F85220 		strh	r2, [r0, #82]	@ movhi
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 331              		.loc 1 849 0 discriminator 2
 332 0026 0023     		movs	r3, #0
 333 0028 4366     		str	r3, [r0, #100]
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 334              		.loc 1 851 0 discriminator 2
 335 002a 4367     		str	r3, [r0, #116]
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 336              		.loc 1 852 0 discriminator 2
 337 002c 2123     		movs	r3, #33
 338 002e 80F87130 		strb	r3, [r0, #113]
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 339              		.loc 1 878 0 discriminator 2
 340 0032 8368     		ldr	r3, [r0, #8]
 341 0034 B3F5805F 		cmp	r3, #4096
 342 0038 04D1     		bne	.L18
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 343              		.loc 1 878 0 is_stmt 0 discriminator 1
 344 003a 0369     		ldr	r3, [r0, #16]
 345 003c 13B9     		cbnz	r3, .L18
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 346              		.loc 1 880 0 is_stmt 1
 347 003e 0B4B     		ldr	r3, .L24
 348 0040 4366     		str	r3, [r0, #100]
 349 0042 01E0     		b	.L19
ARM GAS  /tmp/ccwgKUSV.s 			page 62


 350              	.L18:
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }  
 351              		.loc 1 884 0
 352 0044 0A4B     		ldr	r3, .L24+4
 353 0046 4366     		str	r3, [r0, #100]
 354              	.L19:
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 355              		.loc 1 888 0
 356 0048 0023     		movs	r3, #0
 357 004a 80F87030 		strb	r3, [r0, #112]
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 358              		.loc 1 894 0
 359 004e 0168     		ldr	r1, [r0]
 360              	.LVL14:
 361 0050 0A68     		ldr	r2, [r1]
 362              	.LVL15:
 363 0052 42F08002 		orr	r2, r2, #128
 364 0056 0A60     		str	r2, [r1]
 365              	.LVL16:
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 366              		.loc 1 898 0
 367 0058 1846     		mov	r0, r3
 368              	.LVL17:
 369 005a 7047     		bx	lr
 370              	.LVL18:
 371              	.L20:
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 372              		.loc 1 902 0
 373 005c 0220     		movs	r0, #2
 374              	.LVL19:
 375 005e 7047     		bx	lr
 376              	.LVL20:
 377              	.L21:
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 378              		.loc 1 840 0
 379 0060 0120     		movs	r0, #1
 380              	.LVL21:
 381 0062 7047     		bx	lr
 382              	.LVL22:
 383              	.L22:
 384 0064 0120     		movs	r0, #1
 385              	.LVL23:
 386 0066 7047     		bx	lr
 387              	.LVL24:
 388              	.L23:
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 389              		.loc 1 844 0
 390 0068 0220     		movs	r0, #2
 391              	.LVL25:
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 392              		.loc 1 904 0
 393 006a 7047     		bx	lr
 394              	.L25:
 395              		.align	2
 396              	.L24:
 397 006c 00000000 		.word	UART_TxISR_16BIT
 398 0070 00000000 		.word	UART_TxISR_8BIT
ARM GAS  /tmp/ccwgKUSV.s 			page 63


 399              		.cfi_endproc
 400              	.LFE134:
 402              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 403              		.align	2
 404              		.global	HAL_UART_Receive_IT
 405              		.thumb
 406              		.thumb_func
 408              	HAL_UART_Receive_IT:
 409              	.LFB135:
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 410              		.loc 1 914 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415              	.LVL26:
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 416              		.loc 1 916 0
 417 0000 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 418 0004 DBB2     		uxtb	r3, r3
 419 0006 202B     		cmp	r3, #32
 420 0008 56D1     		bne	.L36
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 421              		.loc 1 918 0
 422 000a 0029     		cmp	r1, #0
 423 000c 56D0     		beq	.L37
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 424              		.loc 1 918 0 is_stmt 0 discriminator 1
 425 000e 002A     		cmp	r2, #0
 426 0010 56D0     		beq	.L38
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 427              		.loc 1 924 0 is_stmt 1
 428 0012 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 429 0016 012B     		cmp	r3, #1
 430 0018 54D0     		beq	.L39
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 431              		.loc 1 924 0 is_stmt 0 discriminator 2
 432 001a 0123     		movs	r3, #1
 433 001c 80F87030 		strb	r3, [r0, #112]
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 434              		.loc 1 926 0 is_stmt 1 discriminator 2
 435 0020 4165     		str	r1, [r0, #84]
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 436              		.loc 1 927 0 discriminator 2
 437 0022 A0F85820 		strh	r2, [r0, #88]	@ movhi
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
 438              		.loc 1 928 0 discriminator 2
 439 0026 A0F85A20 		strh	r2, [r0, #90]	@ movhi
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 440              		.loc 1 929 0 discriminator 2
 441 002a 0023     		movs	r3, #0
 442 002c 0366     		str	r3, [r0, #96]
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 443              		.loc 1 932 0 discriminator 2
 444 002e 8368     		ldr	r3, [r0, #8]
 445 0030 B3F5805F 		cmp	r3, #4096
 446 0034 0AD1     		bne	.L28
ARM GAS  /tmp/ccwgKUSV.s 			page 64


 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 447              		.loc 1 932 0 is_stmt 0 discriminator 1
 448 0036 0369     		ldr	r3, [r0, #16]
 449 0038 23B9     		cbnz	r3, .L29
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 450              		.loc 1 932 0 discriminator 3
 451 003a 40F2FF13 		movw	r3, #511
 452 003e A0F85C30 		strh	r3, [r0, #92]	@ movhi
 453 0042 1AE0     		b	.L30
 454              	.L29:
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 455              		.loc 1 932 0 discriminator 4
 456 0044 FF23     		movs	r3, #255
 457 0046 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 458 004a 16E0     		b	.L30
 459              	.L28:
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 460              		.loc 1 932 0 discriminator 2
 461 004c 4BB9     		cbnz	r3, .L31
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 462              		.loc 1 932 0 discriminator 5
 463 004e 0369     		ldr	r3, [r0, #16]
 464 0050 1BB9     		cbnz	r3, .L32
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 465              		.loc 1 932 0 discriminator 7
 466 0052 FF23     		movs	r3, #255
 467 0054 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 468 0058 0FE0     		b	.L30
 469              	.L32:
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 470              		.loc 1 932 0 discriminator 8
 471 005a 7F23     		movs	r3, #127
 472 005c A0F85C30 		strh	r3, [r0, #92]	@ movhi
 473 0060 0BE0     		b	.L30
 474              	.L31:
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 475              		.loc 1 932 0 discriminator 6
 476 0062 B3F1805F 		cmp	r3, #268435456
 477 0066 08D1     		bne	.L30
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 478              		.loc 1 932 0 discriminator 9
 479 0068 0369     		ldr	r3, [r0, #16]
 480 006a 1BB9     		cbnz	r3, .L33
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 481              		.loc 1 932 0 discriminator 10
 482 006c 7F23     		movs	r3, #127
 483 006e A0F85C30 		strh	r3, [r0, #92]	@ movhi
 484 0072 02E0     		b	.L30
 485              	.L33:
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 486              		.loc 1 932 0 discriminator 11
 487 0074 3F23     		movs	r3, #63
 488 0076 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 489              	.L30:
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 490              		.loc 1 934 0 is_stmt 1
 491 007a 0023     		movs	r3, #0
ARM GAS  /tmp/ccwgKUSV.s 			page 65


 492 007c 4367     		str	r3, [r0, #116]
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 493              		.loc 1 935 0
 494 007e 2223     		movs	r3, #34
 495 0080 80F87230 		strb	r3, [r0, #114]
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 496              		.loc 1 938 0
 497 0084 0268     		ldr	r2, [r0]
 498              	.LVL27:
 499 0086 9368     		ldr	r3, [r2, #8]
 500 0088 43F00103 		orr	r3, r3, #1
 501 008c 9360     		str	r3, [r2, #8]
 502              	.LVL28:
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 503              		.loc 1 965 0
 504 008e 8368     		ldr	r3, [r0, #8]
 505 0090 B3F5805F 		cmp	r3, #4096
 506 0094 04D1     		bne	.L34
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 507              		.loc 1 965 0 is_stmt 0 discriminator 1
 508 0096 0369     		ldr	r3, [r0, #16]
 509 0098 13B9     		cbnz	r3, .L34
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 510              		.loc 1 967 0 is_stmt 1
 511 009a 0B4B     		ldr	r3, .L40
 512 009c 0366     		str	r3, [r0, #96]
 513 009e 01E0     		b	.L35
 514              	.L34:
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 515              		.loc 1 971 0
 516 00a0 0A4B     		ldr	r3, .L40+4
 517 00a2 0366     		str	r3, [r0, #96]
 518              	.L35:
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 519              		.loc 1 975 0
 520 00a4 0023     		movs	r3, #0
 521 00a6 80F87030 		strb	r3, [r0, #112]
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 522              		.loc 1 981 0
 523 00aa 0168     		ldr	r1, [r0]
 524              	.LVL29:
 525 00ac 0A68     		ldr	r2, [r1]
 526 00ae 42F49072 		orr	r2, r2, #288
 527 00b2 0A60     		str	r2, [r1]
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 528              		.loc 1 985 0
 529 00b4 1846     		mov	r0, r3
 530              	.LVL30:
 531 00b6 7047     		bx	lr
 532              	.LVL31:
 533              	.L36:
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 534              		.loc 1 989 0
 535 00b8 0220     		movs	r0, #2
 536              	.LVL32:
 537 00ba 7047     		bx	lr
 538              	.LVL33:
ARM GAS  /tmp/ccwgKUSV.s 			page 66


 539              	.L37:
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 540              		.loc 1 920 0
 541 00bc 0120     		movs	r0, #1
 542              	.LVL34:
 543 00be 7047     		bx	lr
 544              	.LVL35:
 545              	.L38:
 546 00c0 0120     		movs	r0, #1
 547              	.LVL36:
 548 00c2 7047     		bx	lr
 549              	.LVL37:
 550              	.L39:
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 551              		.loc 1 924 0
 552 00c4 0220     		movs	r0, #2
 553              	.LVL38:
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 554              		.loc 1 991 0
 555 00c6 7047     		bx	lr
 556              	.L41:
 557              		.align	2
 558              	.L40:
 559 00c8 00000000 		.word	UART_RxISR_16BIT
 560 00cc 00000000 		.word	UART_RxISR_8BIT
 561              		.cfi_endproc
 562              	.LFE135:
 564              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 565              		.align	2
 566              		.global	HAL_UART_Transmit_DMA
 567              		.thumb
 568              		.thumb_func
 570              	HAL_UART_Transmit_DMA:
 571              	.LFB136:
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 572              		.loc 1 1001 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              	.LVL39:
 577 0000 38B5     		push	{r3, r4, r5, lr}
 578              	.LCFI2:
 579              		.cfi_def_cfa_offset 16
 580              		.cfi_offset 3, -16
 581              		.cfi_offset 4, -12
 582              		.cfi_offset 5, -8
 583              		.cfi_offset 14, -4
 584 0002 0446     		mov	r4, r0
 585 0004 1346     		mov	r3, r2
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 586              		.loc 1 1003 0
 587 0006 90F87120 		ldrb	r2, [r0, #113]	@ zero_extendqisi2
 588              	.LVL40:
 589 000a D2B2     		uxtb	r2, r2
 590 000c 202A     		cmp	r2, #32
 591 000e 31D1     		bne	.L44
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccwgKUSV.s 			page 67


 592              		.loc 1 1005 0
 593 0010 0029     		cmp	r1, #0
 594 0012 31D0     		beq	.L45
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 595              		.loc 1 1005 0 is_stmt 0 discriminator 1
 596 0014 002B     		cmp	r3, #0
 597 0016 31D0     		beq	.L46
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 598              		.loc 1 1011 0 is_stmt 1
 599 0018 90F87020 		ldrb	r2, [r0, #112]	@ zero_extendqisi2
 600 001c 012A     		cmp	r2, #1
 601 001e 2FD0     		beq	.L47
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 602              		.loc 1 1011 0 is_stmt 0 discriminator 2
 603 0020 0122     		movs	r2, #1
 604 0022 80F87020 		strb	r2, [r0, #112]
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 605              		.loc 1 1013 0 is_stmt 1 discriminator 2
 606 0026 C164     		str	r1, [r0, #76]
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 607              		.loc 1 1014 0 discriminator 2
 608 0028 A0F85030 		strh	r3, [r0, #80]	@ movhi
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 609              		.loc 1 1015 0 discriminator 2
 610 002c A0F85230 		strh	r3, [r0, #82]	@ movhi
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 611              		.loc 1 1017 0 discriminator 2
 612 0030 0025     		movs	r5, #0
 613 0032 4567     		str	r5, [r0, #116]
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 614              		.loc 1 1018 0 discriminator 2
 615 0034 2122     		movs	r2, #33
 616 0036 80F87120 		strb	r2, [r0, #113]
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 617              		.loc 1 1021 0 discriminator 2
 618 003a 826E     		ldr	r2, [r0, #104]
 619 003c 1149     		ldr	r1, .L49
 620              	.LVL41:
 621 003e D162     		str	r1, [r2, #44]
 622              	.LVL42:
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 623              		.loc 1 1024 0 discriminator 2
 624 0040 826E     		ldr	r2, [r0, #104]
 625 0042 1149     		ldr	r1, .L49+4
 626 0044 1163     		str	r1, [r2, #48]
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 627              		.loc 1 1027 0 discriminator 2
 628 0046 826E     		ldr	r2, [r0, #104]
 629 0048 1049     		ldr	r1, .L49+8
 630 004a 5163     		str	r1, [r2, #52]
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 631              		.loc 1 1030 0 discriminator 2
 632 004c 826E     		ldr	r2, [r0, #104]
 633 004e 9563     		str	r5, [r2, #56]
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 634              		.loc 1 1033 0 discriminator 2
 635 0050 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccwgKUSV.s 			page 68


 636 0052 806E     		ldr	r0, [r0, #104]
 637              	.LVL43:
 638 0054 E16C     		ldr	r1, [r4, #76]
 639 0056 2832     		adds	r2, r2, #40
 640 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 641              	.LVL44:
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 642              		.loc 1 1036 0 discriminator 2
 643 005c 2368     		ldr	r3, [r4]
 644 005e 4022     		movs	r2, #64
 645 0060 1A62     		str	r2, [r3, #32]
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 646              		.loc 1 1039 0 discriminator 2
 647 0062 84F87050 		strb	r5, [r4, #112]
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 648              		.loc 1 1043 0 discriminator 2
 649 0066 2268     		ldr	r2, [r4]
 650 0068 9368     		ldr	r3, [r2, #8]
 651 006a 43F08003 		orr	r3, r3, #128
 652 006e 9360     		str	r3, [r2, #8]
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 653              		.loc 1 1045 0 discriminator 2
 654 0070 2846     		mov	r0, r5
 655 0072 38BD     		pop	{r3, r4, r5, pc}
 656              	.LVL45:
 657              	.L44:
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 658              		.loc 1 1049 0
 659 0074 0220     		movs	r0, #2
 660              	.LVL46:
 661 0076 38BD     		pop	{r3, r4, r5, pc}
 662              	.LVL47:
 663              	.L45:
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 664              		.loc 1 1007 0
 665 0078 0120     		movs	r0, #1
 666              	.LVL48:
 667 007a 38BD     		pop	{r3, r4, r5, pc}
 668              	.LVL49:
 669              	.L46:
 670 007c 0120     		movs	r0, #1
 671              	.LVL50:
 672 007e 38BD     		pop	{r3, r4, r5, pc}
 673              	.LVL51:
 674              	.L47:
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 675              		.loc 1 1011 0
 676 0080 0220     		movs	r0, #2
 677              	.LVL52:
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 678              		.loc 1 1051 0
 679 0082 38BD     		pop	{r3, r4, r5, pc}
 680              	.LVL53:
 681              	.L50:
 682              		.align	2
 683              	.L49:
 684 0084 00000000 		.word	UART_DMATransmitCplt
ARM GAS  /tmp/ccwgKUSV.s 			page 69


 685 0088 00000000 		.word	UART_DMATxHalfCplt
 686 008c 00000000 		.word	UART_DMAError
 687              		.cfi_endproc
 688              	.LFE136:
 690              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 691              		.align	2
 692              		.global	HAL_UART_Receive_DMA
 693              		.thumb
 694              		.thumb_func
 696              	HAL_UART_Receive_DMA:
 697              	.LFB137:
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 698              		.loc 1 1063 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              	.LVL54:
 703 0000 38B5     		push	{r3, r4, r5, lr}
 704              	.LCFI3:
 705              		.cfi_def_cfa_offset 16
 706              		.cfi_offset 3, -16
 707              		.cfi_offset 4, -12
 708              		.cfi_offset 5, -8
 709              		.cfi_offset 14, -4
 710 0002 0446     		mov	r4, r0
 711 0004 1346     		mov	r3, r2
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 712              		.loc 1 1065 0
 713 0006 90F87220 		ldrb	r2, [r0, #114]	@ zero_extendqisi2
 714              	.LVL55:
 715 000a D2B2     		uxtb	r2, r2
 716 000c 202A     		cmp	r2, #32
 717 000e 36D1     		bne	.L53
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 718              		.loc 1 1067 0
 719 0010 0029     		cmp	r1, #0
 720 0012 36D0     		beq	.L54
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 721              		.loc 1 1067 0 is_stmt 0 discriminator 1
 722 0014 002B     		cmp	r3, #0
 723 0016 36D0     		beq	.L55
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 724              		.loc 1 1073 0 is_stmt 1
 725 0018 90F87020 		ldrb	r2, [r0, #112]	@ zero_extendqisi2
 726 001c 012A     		cmp	r2, #1
 727 001e 34D0     		beq	.L56
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 728              		.loc 1 1073 0 is_stmt 0 discriminator 2
 729 0020 0122     		movs	r2, #1
 730 0022 80F87020 		strb	r2, [r0, #112]
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
 731              		.loc 1 1075 0 is_stmt 1 discriminator 2
 732 0026 4165     		str	r1, [r0, #84]
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 733              		.loc 1 1076 0 discriminator 2
 734 0028 A0F85830 		strh	r3, [r0, #88]	@ movhi
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
ARM GAS  /tmp/ccwgKUSV.s 			page 70


 735              		.loc 1 1078 0 discriminator 2
 736 002c 0025     		movs	r5, #0
 737 002e 4567     		str	r5, [r0, #116]
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 738              		.loc 1 1079 0 discriminator 2
 739 0030 2222     		movs	r2, #34
 740 0032 80F87220 		strb	r2, [r0, #114]
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 741              		.loc 1 1082 0 discriminator 2
 742 0036 C26E     		ldr	r2, [r0, #108]
 743 0038 1549     		ldr	r1, .L58
 744              	.LVL56:
 745 003a D162     		str	r1, [r2, #44]
 746              	.LVL57:
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 747              		.loc 1 1085 0 discriminator 2
 748 003c C26E     		ldr	r2, [r0, #108]
 749 003e 1549     		ldr	r1, .L58+4
 750 0040 1163     		str	r1, [r2, #48]
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 751              		.loc 1 1088 0 discriminator 2
 752 0042 C26E     		ldr	r2, [r0, #108]
 753 0044 1449     		ldr	r1, .L58+8
 754 0046 5163     		str	r1, [r2, #52]
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 755              		.loc 1 1091 0 discriminator 2
 756 0048 C26E     		ldr	r2, [r0, #108]
 757 004a 9563     		str	r5, [r2, #56]
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 758              		.loc 1 1094 0 discriminator 2
 759 004c 0168     		ldr	r1, [r0]
 760 004e C06E     		ldr	r0, [r0, #108]
 761              	.LVL58:
 762 0050 2431     		adds	r1, r1, #36
 763 0052 626D     		ldr	r2, [r4, #84]
 764 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 765              	.LVL59:
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 766              		.loc 1 1097 0 discriminator 2
 767 0058 84F87050 		strb	r5, [r4, #112]
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 768              		.loc 1 1100 0 discriminator 2
 769 005c 2268     		ldr	r2, [r4]
 770 005e 1368     		ldr	r3, [r2]
 771 0060 43F48073 		orr	r3, r3, #256
 772 0064 1360     		str	r3, [r2]
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 773              		.loc 1 1103 0 discriminator 2
 774 0066 2268     		ldr	r2, [r4]
 775 0068 9368     		ldr	r3, [r2, #8]
 776 006a 43F00103 		orr	r3, r3, #1
 777 006e 9360     		str	r3, [r2, #8]
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 778              		.loc 1 1107 0 discriminator 2
 779 0070 2268     		ldr	r2, [r4]
 780 0072 9368     		ldr	r3, [r2, #8]
 781 0074 43F04003 		orr	r3, r3, #64
ARM GAS  /tmp/ccwgKUSV.s 			page 71


 782 0078 9360     		str	r3, [r2, #8]
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 783              		.loc 1 1109 0 discriminator 2
 784 007a 2846     		mov	r0, r5
 785 007c 38BD     		pop	{r3, r4, r5, pc}
 786              	.LVL60:
 787              	.L53:
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 788              		.loc 1 1113 0
 789 007e 0220     		movs	r0, #2
 790              	.LVL61:
 791 0080 38BD     		pop	{r3, r4, r5, pc}
 792              	.LVL62:
 793              	.L54:
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 794              		.loc 1 1069 0
 795 0082 0120     		movs	r0, #1
 796              	.LVL63:
 797 0084 38BD     		pop	{r3, r4, r5, pc}
 798              	.LVL64:
 799              	.L55:
 800 0086 0120     		movs	r0, #1
 801              	.LVL65:
 802 0088 38BD     		pop	{r3, r4, r5, pc}
 803              	.LVL66:
 804              	.L56:
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 805              		.loc 1 1073 0
 806 008a 0220     		movs	r0, #2
 807              	.LVL67:
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 808              		.loc 1 1115 0
 809 008c 38BD     		pop	{r3, r4, r5, pc}
 810              	.LVL68:
 811              	.L59:
 812 008e 00BF     		.align	2
 813              	.L58:
 814 0090 00000000 		.word	UART_DMAReceiveCplt
 815 0094 00000000 		.word	UART_DMARxHalfCplt
 816 0098 00000000 		.word	UART_DMAError
 817              		.cfi_endproc
 818              	.LFE137:
 820              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 821              		.align	2
 822              		.global	HAL_UART_DMAPause
 823              		.thumb
 824              		.thumb_func
 826              	HAL_UART_DMAPause:
 827              	.LFB138:
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 828              		.loc 1 1123 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833              	.LVL69:
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
ARM GAS  /tmp/ccwgKUSV.s 			page 72


 834              		.loc 1 1125 0
 835 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 836 0004 012B     		cmp	r3, #1
 837 0006 2DD0     		beq	.L64
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 838              		.loc 1 1125 0 is_stmt 0 discriminator 2
 839 0008 0123     		movs	r3, #1
 840 000a 80F87030 		strb	r3, [r0, #112]
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 841              		.loc 1 1127 0 is_stmt 1 discriminator 2
 842 000e 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 843 0012 DBB2     		uxtb	r3, r3
 844 0014 212B     		cmp	r3, #33
 845 0016 08D1     		bne	.L62
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 846              		.loc 1 1128 0 discriminator 1
 847 0018 0368     		ldr	r3, [r0]
 848 001a 9A68     		ldr	r2, [r3, #8]
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 849              		.loc 1 1127 0 discriminator 1
 850 001c 12F0800F 		tst	r2, #128
 851 0020 03D0     		beq	.L62
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 852              		.loc 1 1131 0
 853 0022 9A68     		ldr	r2, [r3, #8]
 854 0024 22F08002 		bic	r2, r2, #128
 855 0028 9A60     		str	r2, [r3, #8]
 856              	.L62:
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 857              		.loc 1 1133 0
 858 002a 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 859 002e DBB2     		uxtb	r3, r3
 860 0030 222B     		cmp	r3, #34
 861 0032 12D1     		bne	.L63
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 862              		.loc 1 1134 0 discriminator 1
 863 0034 0368     		ldr	r3, [r0]
 864 0036 9A68     		ldr	r2, [r3, #8]
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 865              		.loc 1 1133 0 discriminator 1
 866 0038 12F0400F 		tst	r2, #64
 867 003c 0DD0     		beq	.L63
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 868              		.loc 1 1137 0
 869 003e 1A68     		ldr	r2, [r3]
 870 0040 22F48072 		bic	r2, r2, #256
 871 0044 1A60     		str	r2, [r3]
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 872              		.loc 1 1138 0
 873 0046 0268     		ldr	r2, [r0]
 874 0048 9368     		ldr	r3, [r2, #8]
 875 004a 23F00103 		bic	r3, r3, #1
 876 004e 9360     		str	r3, [r2, #8]
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 877              		.loc 1 1141 0
 878 0050 0268     		ldr	r2, [r0]
 879 0052 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccwgKUSV.s 			page 73


 880 0054 23F04003 		bic	r3, r3, #64
 881 0058 9360     		str	r3, [r2, #8]
 882              	.L63:
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 883              		.loc 1 1145 0
 884 005a 0023     		movs	r3, #0
 885 005c 80F87030 		strb	r3, [r0, #112]
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 886              		.loc 1 1147 0
 887 0060 1846     		mov	r0, r3
 888              	.LVL70:
 889 0062 7047     		bx	lr
 890              	.LVL71:
 891              	.L64:
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 892              		.loc 1 1125 0
 893 0064 0220     		movs	r0, #2
 894              	.LVL72:
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 895              		.loc 1 1148 0
 896 0066 7047     		bx	lr
 897              		.cfi_endproc
 898              	.LFE138:
 900              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 901              		.align	2
 902              		.global	HAL_UART_DMAResume
 903              		.thumb
 904              		.thumb_func
 906              	HAL_UART_DMAResume:
 907              	.LFB139:
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 908              		.loc 1 1156 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              		@ link register save eliminated.
 913              	.LVL73:
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 914              		.loc 1 1158 0
 915 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 916 0004 012B     		cmp	r3, #1
 917 0006 28D0     		beq	.L69
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 918              		.loc 1 1158 0 is_stmt 0 discriminator 2
 919 0008 0123     		movs	r3, #1
 920 000a 80F87030 		strb	r3, [r0, #112]
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 921              		.loc 1 1160 0 is_stmt 1 discriminator 2
 922 000e 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 923 0012 DBB2     		uxtb	r3, r3
 924 0014 212B     		cmp	r3, #33
 925 0016 04D1     		bne	.L67
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 926              		.loc 1 1163 0
 927 0018 0268     		ldr	r2, [r0]
 928 001a 9368     		ldr	r3, [r2, #8]
 929 001c 43F08003 		orr	r3, r3, #128
ARM GAS  /tmp/ccwgKUSV.s 			page 74


 930 0020 9360     		str	r3, [r2, #8]
 931              	.L67:
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 932              		.loc 1 1165 0
 933 0022 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 934 0026 DBB2     		uxtb	r3, r3
 935 0028 222B     		cmp	r3, #34
 936 002a 11D1     		bne	.L68
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 937              		.loc 1 1168 0
 938 002c 0368     		ldr	r3, [r0]
 939 002e 0822     		movs	r2, #8
 940 0030 1A62     		str	r2, [r3, #32]
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 941              		.loc 1 1171 0
 942 0032 0268     		ldr	r2, [r0]
 943 0034 1368     		ldr	r3, [r2]
 944 0036 43F48073 		orr	r3, r3, #256
 945 003a 1360     		str	r3, [r2]
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 946              		.loc 1 1172 0
 947 003c 0268     		ldr	r2, [r0]
 948 003e 9368     		ldr	r3, [r2, #8]
 949 0040 43F00103 		orr	r3, r3, #1
 950 0044 9360     		str	r3, [r2, #8]
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 951              		.loc 1 1175 0
 952 0046 0268     		ldr	r2, [r0]
 953 0048 9368     		ldr	r3, [r2, #8]
 954 004a 43F04003 		orr	r3, r3, #64
 955 004e 9360     		str	r3, [r2, #8]
 956              	.L68:
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 957              		.loc 1 1179 0
 958 0050 0023     		movs	r3, #0
 959 0052 80F87030 		strb	r3, [r0, #112]
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 960              		.loc 1 1181 0
 961 0056 1846     		mov	r0, r3
 962              	.LVL74:
 963 0058 7047     		bx	lr
 964              	.LVL75:
 965              	.L69:
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 966              		.loc 1 1158 0
 967 005a 0220     		movs	r0, #2
 968              	.LVL76:
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 969              		.loc 1 1182 0
 970 005c 7047     		bx	lr
 971              		.cfi_endproc
 972              	.LFE139:
 974 005e 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 975              		.align	2
 976              		.global	HAL_UART_DMAStop
 977              		.thumb
 978              		.thumb_func
ARM GAS  /tmp/ccwgKUSV.s 			page 75


 980              	HAL_UART_DMAStop:
 981              	.LFB140:
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 982              		.loc 1 1190 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986              	.LVL77:
 987 0000 10B5     		push	{r4, lr}
 988              	.LCFI4:
 989              		.cfi_def_cfa_offset 8
 990              		.cfi_offset 4, -8
 991              		.cfi_offset 14, -4
 992 0002 0446     		mov	r4, r0
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 993              		.loc 1 1199 0
 994 0004 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 995 0008 DBB2     		uxtb	r3, r3
 996 000a 212B     		cmp	r3, #33
 997 000c 0FD1     		bne	.L71
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 998              		.loc 1 1200 0 discriminator 1
 999 000e 0368     		ldr	r3, [r0]
 1000 0010 9A68     		ldr	r2, [r3, #8]
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1001              		.loc 1 1199 0 discriminator 1
 1002 0012 12F0800F 		tst	r2, #128
 1003 0016 0AD0     		beq	.L71
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 1004              		.loc 1 1202 0
 1005 0018 9A68     		ldr	r2, [r3, #8]
 1006 001a 22F08002 		bic	r2, r2, #128
 1007 001e 9A60     		str	r2, [r3, #8]
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1008              		.loc 1 1205 0
 1009 0020 806E     		ldr	r0, [r0, #104]
 1010              	.LVL78:
 1011 0022 08B1     		cbz	r0, .L72
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1012              		.loc 1 1207 0
 1013 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 1014              	.LVL79:
 1015              	.L72:
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1016              		.loc 1 1210 0
 1017 0028 2046     		mov	r0, r4
 1018 002a FFF7FEFF 		bl	UART_EndTxTransfer
 1019              	.LVL80:
 1020              	.L71:
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1021              		.loc 1 1214 0
 1022 002e 94F87230 		ldrb	r3, [r4, #114]	@ zero_extendqisi2
 1023 0032 DBB2     		uxtb	r3, r3
 1024 0034 222B     		cmp	r3, #34
 1025 0036 0FD1     		bne	.L73
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1026              		.loc 1 1215 0 discriminator 1
ARM GAS  /tmp/ccwgKUSV.s 			page 76


 1027 0038 2368     		ldr	r3, [r4]
 1028 003a 9A68     		ldr	r2, [r3, #8]
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1029              		.loc 1 1214 0 discriminator 1
 1030 003c 12F0400F 		tst	r2, #64
 1031 0040 0AD0     		beq	.L73
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 1032              		.loc 1 1217 0
 1033 0042 9A68     		ldr	r2, [r3, #8]
 1034 0044 22F04002 		bic	r2, r2, #64
 1035 0048 9A60     		str	r2, [r3, #8]
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1036              		.loc 1 1220 0
 1037 004a E06E     		ldr	r0, [r4, #108]
 1038 004c 08B1     		cbz	r0, .L74
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1039              		.loc 1 1222 0
 1040 004e FFF7FEFF 		bl	HAL_DMA_Abort
 1041              	.LVL81:
 1042              	.L74:
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1043              		.loc 1 1225 0
 1044 0052 2046     		mov	r0, r4
 1045 0054 FFF7FEFF 		bl	UART_EndRxTransfer
 1046              	.LVL82:
 1047              	.L73:
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1048              		.loc 1 1229 0
 1049 0058 0020     		movs	r0, #0
 1050 005a 10BD     		pop	{r4, pc}
 1051              		.cfi_endproc
 1052              	.LFE140:
 1054              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1055              		.align	2
 1056              		.global	HAL_UART_Abort
 1057              		.thumb
 1058              		.thumb_func
 1060              	HAL_UART_Abort:
 1061              	.LFB141:
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1062              		.loc 1 1244 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              	.LVL83:
 1067 0000 10B5     		push	{r4, lr}
 1068              	.LCFI5:
 1069              		.cfi_def_cfa_offset 8
 1070              		.cfi_offset 4, -8
 1071              		.cfi_offset 14, -4
 1072 0002 0446     		mov	r4, r0
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1073              		.loc 1 1249 0
 1074 0004 0268     		ldr	r2, [r0]
 1075 0006 1368     		ldr	r3, [r2]
 1076 0008 23F4F073 		bic	r3, r3, #480
 1077 000c 1360     		str	r3, [r2]
ARM GAS  /tmp/ccwgKUSV.s 			page 77


1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1078              		.loc 1 1251 0
 1079 000e 0268     		ldr	r2, [r0]
 1080 0010 9368     		ldr	r3, [r2, #8]
 1081 0012 23F00103 		bic	r3, r3, #1
 1082 0016 9360     		str	r3, [r2, #8]
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1083              		.loc 1 1254 0
 1084 0018 0368     		ldr	r3, [r0]
 1085 001a 9A68     		ldr	r2, [r3, #8]
 1086 001c 12F0800F 		tst	r2, #128
 1087 0020 0AD0     		beq	.L77
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 1088              		.loc 1 1256 0
 1089 0022 9A68     		ldr	r2, [r3, #8]
 1090 0024 22F08002 		bic	r2, r2, #128
 1091 0028 9A60     		str	r2, [r3, #8]
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1092              		.loc 1 1259 0
 1093 002a 836E     		ldr	r3, [r0, #104]
 1094 002c 23B1     		cbz	r3, .L77
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 1095              		.loc 1 1263 0
 1096 002e 0022     		movs	r2, #0
 1097 0030 9A63     		str	r2, [r3, #56]
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1098              		.loc 1 1265 0
 1099 0032 806E     		ldr	r0, [r0, #104]
 1100              	.LVL84:
 1101 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1102              	.LVL85:
 1103              	.L77:
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1104              		.loc 1 1270 0
 1105 0038 2368     		ldr	r3, [r4]
 1106 003a 9A68     		ldr	r2, [r3, #8]
 1107 003c 12F0400F 		tst	r2, #64
 1108 0040 0AD0     		beq	.L78
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 1109              		.loc 1 1272 0
 1110 0042 9A68     		ldr	r2, [r3, #8]
 1111 0044 22F04002 		bic	r2, r2, #64
 1112 0048 9A60     		str	r2, [r3, #8]
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1113              		.loc 1 1275 0
 1114 004a E36E     		ldr	r3, [r4, #108]
 1115 004c 23B1     		cbz	r3, .L78
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 1116              		.loc 1 1279 0
 1117 004e 0022     		movs	r2, #0
 1118 0050 9A63     		str	r2, [r3, #56]
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1119              		.loc 1 1281 0
 1120 0052 E06E     		ldr	r0, [r4, #108]
 1121 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 1122              	.LVL86:
 1123              	.L78:
ARM GAS  /tmp/ccwgKUSV.s 			page 78


1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 1124              		.loc 1 1286 0
 1125 0058 0020     		movs	r0, #0
 1126 005a A4F85200 		strh	r0, [r4, #82]	@ movhi
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1127              		.loc 1 1287 0
 1128 005e A4F85A00 		strh	r0, [r4, #90]	@ movhi
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1129              		.loc 1 1290 0
 1130 0062 2368     		ldr	r3, [r4]
 1131 0064 0F22     		movs	r2, #15
 1132 0066 1A62     		str	r2, [r3, #32]
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1133              		.loc 1 1301 0
 1134 0068 2268     		ldr	r2, [r4]
 1135 006a 138B     		ldrh	r3, [r2, #24]
 1136 006c 9BB2     		uxth	r3, r3
 1137 006e 43F00803 		orr	r3, r3, #8
 1138 0072 1383     		strh	r3, [r2, #24]	@ movhi
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1139              		.loc 1 1304 0
 1140 0074 2023     		movs	r3, #32
 1141 0076 84F87130 		strb	r3, [r4, #113]
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1142              		.loc 1 1305 0
 1143 007a 84F87230 		strb	r3, [r4, #114]
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1144              		.loc 1 1308 0
 1145 007e 6067     		str	r0, [r4, #116]
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1146              		.loc 1 1311 0
 1147 0080 10BD     		pop	{r4, pc}
 1148              		.cfi_endproc
 1149              	.LFE141:
 1151 0082 00BF     		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1152              		.align	2
 1153              		.global	HAL_UART_AbortTransmit
 1154              		.thumb
 1155              		.thumb_func
 1157              	HAL_UART_AbortTransmit:
 1158              	.LFB142:
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1159              		.loc 1 1326 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 0
 1162              		@ frame_needed = 0, uses_anonymous_args = 0
 1163              	.LVL87:
 1164 0000 10B5     		push	{r4, lr}
 1165              	.LCFI6:
 1166              		.cfi_def_cfa_offset 8
 1167              		.cfi_offset 4, -8
 1168              		.cfi_offset 14, -4
 1169 0002 0446     		mov	r4, r0
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1170              		.loc 1 1331 0
 1171 0004 0268     		ldr	r2, [r0]
 1172 0006 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccwgKUSV.s 			page 79


 1173 0008 23F0C003 		bic	r3, r3, #192
 1174 000c 1360     		str	r3, [r2]
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1175              		.loc 1 1335 0
 1176 000e 0368     		ldr	r3, [r0]
 1177 0010 9A68     		ldr	r2, [r3, #8]
 1178 0012 12F0800F 		tst	r2, #128
 1179 0016 0AD0     		beq	.L81
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 1180              		.loc 1 1337 0
 1181 0018 9A68     		ldr	r2, [r3, #8]
 1182 001a 22F08002 		bic	r2, r2, #128
 1183 001e 9A60     		str	r2, [r3, #8]
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1184              		.loc 1 1340 0
 1185 0020 836E     		ldr	r3, [r0, #104]
 1186 0022 23B1     		cbz	r3, .L81
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 1187              		.loc 1 1344 0
 1188 0024 0022     		movs	r2, #0
 1189 0026 9A63     		str	r2, [r3, #56]
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1190              		.loc 1 1346 0
 1191 0028 806E     		ldr	r0, [r0, #104]
 1192              	.LVL88:
 1193 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1194              	.LVL89:
 1195              	.L81:
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1196              		.loc 1 1351 0
 1197 002e 0020     		movs	r0, #0
 1198 0030 A4F85200 		strh	r0, [r4, #82]	@ movhi
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1199              		.loc 1 1362 0
 1200 0034 2023     		movs	r3, #32
 1201 0036 84F87130 		strb	r3, [r4, #113]
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1202              		.loc 1 1365 0
 1203 003a 10BD     		pop	{r4, pc}
 1204              		.cfi_endproc
 1205              	.LFE142:
 1207              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1208              		.align	2
 1209              		.global	HAL_UART_AbortReceive
 1210              		.thumb
 1211              		.thumb_func
 1213              	HAL_UART_AbortReceive:
 1214              	.LFB143:
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1215              		.loc 1 1380 0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 0
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
 1219              	.LVL90:
 1220 0000 10B5     		push	{r4, lr}
 1221              	.LCFI7:
 1222              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccwgKUSV.s 			page 80


 1223              		.cfi_offset 4, -8
 1224              		.cfi_offset 14, -4
 1225 0002 0446     		mov	r4, r0
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1226              		.loc 1 1385 0
 1227 0004 0268     		ldr	r2, [r0]
 1228 0006 1368     		ldr	r3, [r2]
 1229 0008 23F49073 		bic	r3, r3, #288
 1230 000c 1360     		str	r3, [r2]
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1231              		.loc 1 1387 0
 1232 000e 0268     		ldr	r2, [r0]
 1233 0010 9368     		ldr	r3, [r2, #8]
 1234 0012 23F00103 		bic	r3, r3, #1
 1235 0016 9360     		str	r3, [r2, #8]
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1236              		.loc 1 1390 0
 1237 0018 0368     		ldr	r3, [r0]
 1238 001a 9A68     		ldr	r2, [r3, #8]
 1239 001c 12F0400F 		tst	r2, #64
 1240 0020 0AD0     		beq	.L84
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 1241              		.loc 1 1392 0
 1242 0022 9A68     		ldr	r2, [r3, #8]
 1243 0024 22F04002 		bic	r2, r2, #64
 1244 0028 9A60     		str	r2, [r3, #8]
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1245              		.loc 1 1395 0
 1246 002a C36E     		ldr	r3, [r0, #108]
 1247 002c 23B1     		cbz	r3, .L84
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 1248              		.loc 1 1399 0
 1249 002e 0022     		movs	r2, #0
 1250 0030 9A63     		str	r2, [r3, #56]
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1251              		.loc 1 1401 0
 1252 0032 C06E     		ldr	r0, [r0, #108]
 1253              	.LVL91:
 1254 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1255              	.LVL92:
 1256              	.L84:
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1257              		.loc 1 1406 0
 1258 0038 0020     		movs	r0, #0
 1259 003a A4F85A00 		strh	r0, [r4, #90]	@ movhi
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1260              		.loc 1 1409 0
 1261 003e 2368     		ldr	r3, [r4]
 1262 0040 0F22     		movs	r2, #15
 1263 0042 1A62     		str	r2, [r3, #32]
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1264              		.loc 1 1412 0
 1265 0044 2268     		ldr	r2, [r4]
 1266 0046 138B     		ldrh	r3, [r2, #24]
 1267 0048 9BB2     		uxth	r3, r3
 1268 004a 43F00803 		orr	r3, r3, #8
 1269 004e 1383     		strh	r3, [r2, #24]	@ movhi
ARM GAS  /tmp/ccwgKUSV.s 			page 81


1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1270              		.loc 1 1415 0
 1271 0050 2023     		movs	r3, #32
 1272 0052 84F87230 		strb	r3, [r4, #114]
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1273              		.loc 1 1418 0
 1274 0056 10BD     		pop	{r4, pc}
 1275              		.cfi_endproc
 1276              	.LFE143:
 1278              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1279              		.align	2
 1280              		.weak	HAL_UART_TxCpltCallback
 1281              		.thumb
 1282              		.thumb_func
 1284              	HAL_UART_TxCpltCallback:
 1285              	.LFB148:
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1286              		.loc 1 1938 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 0
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290              		@ link register save eliminated.
 1291              	.LVL93:
 1292 0000 7047     		bx	lr
 1293              		.cfi_endproc
 1294              	.LFE148:
 1296 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1297              		.align	2
 1298              		.thumb
 1299              		.thumb_func
 1301              	UART_DMATransmitCplt:
 1302              	.LFB170:
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1303              		.loc 1 2778 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 1307              	.LVL94:
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1308              		.loc 1 2778 0
 1309 0000 08B5     		push	{r3, lr}
 1310              	.LCFI8:
 1311              		.cfi_def_cfa_offset 8
 1312              		.cfi_offset 3, -8
 1313              		.cfi_offset 14, -4
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1314              		.loc 1 2779 0
 1315 0002 836A     		ldr	r3, [r0, #40]
 1316              	.LVL95:
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {  
 1317              		.loc 1 2782 0
 1318 0004 0268     		ldr	r2, [r0]
 1319 0006 1268     		ldr	r2, [r2]
 1320 0008 12F0200F 		tst	r2, #32
 1321 000c 0DD1     		bne	.L88
2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 1322              		.loc 1 2784 0
ARM GAS  /tmp/ccwgKUSV.s 			page 82


 1323 000e 0022     		movs	r2, #0
 1324 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
2788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 1325              		.loc 1 2788 0
 1326 0014 1968     		ldr	r1, [r3]
 1327 0016 8A68     		ldr	r2, [r1, #8]
 1328 0018 22F08002 		bic	r2, r2, #128
 1329 001c 8A60     		str	r2, [r1, #8]
2791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1330              		.loc 1 2791 0
 1331 001e 1A68     		ldr	r2, [r3]
 1332 0020 1368     		ldr	r3, [r2]
 1333              	.LVL96:
 1334 0022 43F04003 		orr	r3, r3, #64
 1335 0026 1360     		str	r3, [r2]
 1336 0028 08BD     		pop	{r3, pc}
 1337              	.LVL97:
 1338              	.L88:
2796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1339              		.loc 1 2796 0
 1340 002a 1846     		mov	r0, r3
 1341              	.LVL98:
 1342 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1343              	.LVL99:
 1344 0030 08BD     		pop	{r3, pc}
 1345              		.cfi_endproc
 1346              	.LFE170:
 1348 0032 00BF     		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1349              		.align	2
 1350              		.thumb
 1351              		.thumb_func
 1353              	UART_EndTransmit_IT:
 1354              	.LFB182:
3112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t   nb_tx_data;
3127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for(nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0 ; nb_tx_data--)
3132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {    
3133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(huart->TxXferCount == 0U)
3134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
ARM GAS  /tmp/ccwgKUSV.s 			page 83


3136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
3138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
3141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != RESET)
3144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFF);
3146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t* tmp;
3162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t   nb_tx_data;
3163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for(nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0 ; nb_tx_data--)
3168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {    
3169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(huart->TxXferCount == 0U)
3170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
3174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
3177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != RESET)
3180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
3182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
3183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
3184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;        
3185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
ARM GAS  /tmp/ccwgKUSV.s 			page 84


3193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart pointer to a UART_HandleTypeDef structure that contains
3194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1355              		.loc 1 3198 0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 0
 1358              		@ frame_needed = 0, uses_anonymous_args = 0
 1359              	.LVL100:
 1360 0000 08B5     		push	{r3, lr}
 1361              	.LCFI9:
 1362              		.cfi_def_cfa_offset 8
 1363              		.cfi_offset 3, -8
 1364              		.cfi_offset 14, -4
3199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1365              		.loc 1 3200 0
 1366 0002 0168     		ldr	r1, [r0]
 1367 0004 0A68     		ldr	r2, [r1]
 1368 0006 22F04002 		bic	r2, r2, #64
 1369 000a 0A60     		str	r2, [r1]
3201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1370              		.loc 1 3203 0
 1371 000c 2022     		movs	r2, #32
 1372 000e 80F87120 		strb	r2, [r0, #113]
3204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 1373              		.loc 1 3206 0
 1374 0012 0022     		movs	r2, #0
 1375 0014 4266     		str	r2, [r0, #100]
3207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1376              		.loc 1 3208 0
 1377 0016 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1378              	.LVL101:
 1379 001a 08BD     		pop	{r3, pc}
 1380              		.cfi_endproc
 1381              	.LFE182:
 1383              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1384              		.align	2
 1385              		.weak	HAL_UART_TxHalfCpltCallback
 1386              		.thumb
 1387              		.thumb_func
 1389              	HAL_UART_TxHalfCpltCallback:
 1390              	.LFB149:
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1391              		.loc 1 1953 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 0, uses_anonymous_args = 0
 1395              		@ link register save eliminated.
 1396              	.LVL102:
ARM GAS  /tmp/ccwgKUSV.s 			page 85


 1397 0000 7047     		bx	lr
 1398              		.cfi_endproc
 1399              	.LFE149:
 1401 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1402              		.align	2
 1403              		.thumb
 1404              		.thumb_func
 1406              	UART_DMATxHalfCplt:
 1407              	.LFB171:
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1408              		.loc 1 2806 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              	.LVL103:
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1413              		.loc 1 2806 0
 1414 0000 08B5     		push	{r3, lr}
 1415              	.LCFI10:
 1416              		.cfi_def_cfa_offset 8
 1417              		.cfi_offset 3, -8
 1418              		.cfi_offset 14, -4
 1419              	.LVL104:
2809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1420              		.loc 1 2809 0
 1421 0002 806A     		ldr	r0, [r0, #40]
 1422              	.LVL105:
 1423 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1424              	.LVL106:
 1425 0008 08BD     		pop	{r3, pc}
 1426              		.cfi_endproc
 1427              	.LFE171:
 1429 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1430              		.align	2
 1431              		.weak	HAL_UART_RxCpltCallback
 1432              		.thumb
 1433              		.thumb_func
 1435              	HAL_UART_RxCpltCallback:
 1436              	.LFB150:
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1437              		.loc 1 1968 0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441              		@ link register save eliminated.
 1442              	.LVL107:
 1443 0000 7047     		bx	lr
 1444              		.cfi_endproc
 1445              	.LFE150:
 1447 0002 00BF     		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 1448              		.align	2
 1449              		.thumb
 1450              		.thumb_func
 1452              	UART_RxISR_8BIT:
 1453              	.LFB183:
3209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccwgKUSV.s 			page 86


3211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1454              		.loc 1 3217 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 0
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 1458              	.LVL108:
3218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1459              		.loc 1 3218 0
 1460 0000 B0F85C20 		ldrh	r2, [r0, #92]
 1461              	.LVL109:
3219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
3220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 1462              		.loc 1 3222 0
 1463 0004 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 1464 0008 DBB2     		uxtb	r3, r3
 1465 000a 222B     		cmp	r3, #34
 1466 000c 20D1     		bne	.L98
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1467              		.loc 1 3217 0
 1468 000e 10B5     		push	{r4, lr}
 1469              	.LCFI11:
 1470              		.cfi_def_cfa_offset 8
 1471              		.cfi_offset 4, -8
 1472              		.cfi_offset 14, -4
3223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 1473              		.loc 1 3224 0
 1474 0010 0368     		ldr	r3, [r0]
 1475 0012 9B8C     		ldrh	r3, [r3, #36]
 1476              	.LVL110:
3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 1477              		.loc 1 3225 0
 1478 0014 416D     		ldr	r1, [r0, #84]
 1479 0016 4C1C     		adds	r4, r1, #1
 1480 0018 4465     		str	r4, [r0, #84]
 1481 001a 1A40     		ands	r2, r2, r3
 1482              	.LVL111:
 1483 001c 0A70     		strb	r2, [r1]
 1484              	.LVL112:
3226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
3227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
 1485              		.loc 1 3227 0
 1486 001e B0F85A30 		ldrh	r3, [r0, #90]
 1487              	.LVL113:
 1488 0022 013B     		subs	r3, r3, #1
 1489 0024 9BB2     		uxth	r3, r3
 1490 0026 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 1491 002a C3B9     		cbnz	r3, .L97
3228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccwgKUSV.s 			page 87


3229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 1492              		.loc 1 3233 0
 1493 002c 0268     		ldr	r2, [r0]
 1494 002e 1368     		ldr	r3, [r2]
 1495 0030 23F49073 		bic	r3, r3, #288
 1496 0034 1360     		str	r3, [r2]
3234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
3236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1497              		.loc 1 3237 0
 1498 0036 0268     		ldr	r2, [r0]
 1499 0038 9368     		ldr	r3, [r2, #8]
 1500 003a 23F00103 		bic	r3, r3, #1
 1501 003e 9360     		str	r3, [r2, #8]
3238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      
3239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 1502              		.loc 1 3240 0
 1503 0040 2023     		movs	r3, #32
 1504 0042 80F87230 		strb	r3, [r0, #114]
3241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
3242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 1505              		.loc 1 3243 0
 1506 0046 0023     		movs	r3, #0
 1507 0048 0366     		str	r3, [r0, #96]
3244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
3245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 1508              		.loc 1 3245 0
 1509 004a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1510              	.LVL114:
 1511 004e 10BD     		pop	{r4, pc}
 1512              	.LVL115:
 1513              	.L98:
 1514              	.LCFI12:
 1515              		.cfi_def_cfa_offset 0
 1516              		.cfi_restore 4
 1517              		.cfi_restore 14
3246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1518              		.loc 1 3251 0
 1519 0050 0268     		ldr	r2, [r0]
 1520              	.LVL116:
 1521 0052 138B     		ldrh	r3, [r2, #24]
 1522 0054 9BB2     		uxth	r3, r3
 1523 0056 43F00803 		orr	r3, r3, #8
 1524 005a 1383     		strh	r3, [r2, #24]	@ movhi
 1525              	.LVL117:
ARM GAS  /tmp/ccwgKUSV.s 			page 88


 1526 005c 7047     		bx	lr
 1527              	.L97:
 1528              	.LCFI13:
 1529              		.cfi_def_cfa_offset 8
 1530              		.cfi_offset 4, -8
 1531              		.cfi_offset 14, -4
 1532 005e 10BD     		pop	{r4, pc}
 1533              		.cfi_endproc
 1534              	.LFE183:
 1536              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 1537              		.align	2
 1538              		.thumb
 1539              		.thumb_func
 1541              	UART_RxISR_16BIT:
 1542              	.LFB184:
3252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1543              		.loc 1 3263 0
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 0
 1546              		@ frame_needed = 0, uses_anonymous_args = 0
 1547              	.LVL118:
 1548 0000 08B5     		push	{r3, lr}
 1549              	.LCFI14:
 1550              		.cfi_def_cfa_offset 8
 1551              		.cfi_offset 3, -8
 1552              		.cfi_offset 14, -4
3264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t* tmp;
3265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1553              		.loc 1 3265 0
 1554 0002 B0F85C20 		ldrh	r2, [r0, #92]
 1555              	.LVL119:
3266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
3267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
3268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 1556              		.loc 1 3269 0
 1557 0006 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 1558 000a DBB2     		uxtb	r3, r3
 1559 000c 222B     		cmp	r3, #34
 1560 000e 20D1     		bne	.L103
3270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 1561              		.loc 1 3271 0
 1562 0010 0368     		ldr	r3, [r0]
 1563 0012 9B8C     		ldrh	r3, [r3, #36]
 1564              	.LVL120:
ARM GAS  /tmp/ccwgKUSV.s 			page 89


3272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t*) huart->pRxBuffPtr ;
 1565              		.loc 1 3272 0
 1566 0014 416D     		ldr	r1, [r0, #84]
 1567              	.LVL121:
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 1568              		.loc 1 3273 0
 1569 0016 1A40     		ands	r2, r2, r3
 1570              	.LVL122:
 1571 0018 0A80     		strh	r2, [r1]	@ movhi
 1572              	.LVL123:
3274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr +=2;
 1573              		.loc 1 3274 0
 1574 001a 436D     		ldr	r3, [r0, #84]
 1575              	.LVL124:
 1576 001c 0233     		adds	r3, r3, #2
 1577 001e 4365     		str	r3, [r0, #84]
3275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
3276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
 1578              		.loc 1 3276 0
 1579 0020 B0F85A30 		ldrh	r3, [r0, #90]
 1580 0024 013B     		subs	r3, r3, #1
 1581 0026 9BB2     		uxth	r3, r3
 1582 0028 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 1583 002c BBB9     		cbnz	r3, .L102
3277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 1584              		.loc 1 3282 0
 1585 002e 0268     		ldr	r2, [r0]
 1586 0030 1368     		ldr	r3, [r2]
 1587 0032 23F49073 		bic	r3, r3, #288
 1588 0036 1360     		str	r3, [r2]
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
3285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1589              		.loc 1 3286 0
 1590 0038 0268     		ldr	r2, [r0]
 1591 003a 9368     		ldr	r3, [r2, #8]
 1592 003c 23F00103 		bic	r3, r3, #1
 1593 0040 9360     		str	r3, [r2, #8]
3287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
3288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 1594              		.loc 1 3289 0
 1595 0042 2023     		movs	r3, #32
 1596 0044 80F87230 		strb	r3, [r0, #114]
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
3291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 1597              		.loc 1 3292 0
 1598 0048 0023     		movs	r3, #0
 1599 004a 0366     		str	r3, [r0, #96]
3293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccwgKUSV.s 			page 90


3294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 1600              		.loc 1 3294 0
 1601 004c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1602              	.LVL125:
 1603 0050 08BD     		pop	{r3, pc}
 1604              	.LVL126:
 1605              	.L103:
3295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1606              		.loc 1 3300 0
 1607 0052 0268     		ldr	r2, [r0]
 1608              	.LVL127:
 1609 0054 138B     		ldrh	r3, [r2, #24]
 1610 0056 9BB2     		uxth	r3, r3
 1611 0058 43F00803 		orr	r3, r3, #8
 1612 005c 1383     		strh	r3, [r2, #24]	@ movhi
 1613              	.LVL128:
 1614              	.L102:
 1615 005e 08BD     		pop	{r3, pc}
 1616              		.cfi_endproc
 1617              	.LFE184:
 1619              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1620              		.align	2
 1621              		.thumb
 1622              		.thumb_func
 1624              	UART_DMAReceiveCplt:
 1625              	.LFB172:
2818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1626              		.loc 1 2818 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 0, uses_anonymous_args = 0
 1630              	.LVL129:
 1631 0000 08B5     		push	{r3, lr}
 1632              	.LCFI15:
 1633              		.cfi_def_cfa_offset 8
 1634              		.cfi_offset 3, -8
 1635              		.cfi_offset 14, -4
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 1636              		.loc 1 2819 0
 1637 0002 836A     		ldr	r3, [r0, #40]
 1638              	.LVL130:
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1639              		.loc 1 2822 0
 1640 0004 0268     		ldr	r2, [r0]
 1641 0006 1268     		ldr	r2, [r2]
 1642 0008 12F0200F 		tst	r2, #32
 1643 000c 14D1     		bne	.L107
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 1644              		.loc 1 2824 0
 1645 000e 0022     		movs	r2, #0
 1646 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/ccwgKUSV.s 			page 91


 1647              		.loc 1 2827 0
 1648 0014 1968     		ldr	r1, [r3]
 1649 0016 0A68     		ldr	r2, [r1]
 1650 0018 22F48072 		bic	r2, r2, #256
 1651 001c 0A60     		str	r2, [r1]
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 1652              		.loc 1 2828 0
 1653 001e 1968     		ldr	r1, [r3]
 1654 0020 8A68     		ldr	r2, [r1, #8]
 1655 0022 22F00102 		bic	r2, r2, #1
 1656 0026 8A60     		str	r2, [r1, #8]
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 1657              		.loc 1 2832 0
 1658 0028 1968     		ldr	r1, [r3]
 1659 002a 8A68     		ldr	r2, [r1, #8]
 1660 002c 22F04002 		bic	r2, r2, #64
 1661 0030 8A60     		str	r2, [r1, #8]
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1662              		.loc 1 2835 0
 1663 0032 2022     		movs	r2, #32
 1664 0034 83F87220 		strb	r2, [r3, #114]
 1665              	.L107:
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1666              		.loc 1 2838 0
 1667 0038 1846     		mov	r0, r3
 1668              	.LVL131:
 1669 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1670              	.LVL132:
 1671 003e 08BD     		pop	{r3, pc}
 1672              		.cfi_endproc
 1673              	.LFE172:
 1675              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1676              		.align	2
 1677              		.weak	HAL_UART_RxHalfCpltCallback
 1678              		.thumb
 1679              		.thumb_func
 1681              	HAL_UART_RxHalfCpltCallback:
 1682              	.LFB151:
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1683              		.loc 1 1983 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 0
 1686              		@ frame_needed = 0, uses_anonymous_args = 0
 1687              		@ link register save eliminated.
 1688              	.LVL133:
 1689 0000 7047     		bx	lr
 1690              		.cfi_endproc
 1691              	.LFE151:
 1693 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1694              		.align	2
 1695              		.thumb
 1696              		.thumb_func
 1698              	UART_DMARxHalfCplt:
 1699              	.LFB173:
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1700              		.loc 1 2847 0
 1701              		.cfi_startproc
ARM GAS  /tmp/ccwgKUSV.s 			page 92


 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704              	.LVL134:
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1705              		.loc 1 2847 0
 1706 0000 08B5     		push	{r3, lr}
 1707              	.LCFI16:
 1708              		.cfi_def_cfa_offset 8
 1709              		.cfi_offset 3, -8
 1710              		.cfi_offset 14, -4
 1711              	.LVL135:
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1712              		.loc 1 2850 0
 1713 0002 806A     		ldr	r0, [r0, #40]
 1714              	.LVL136:
 1715 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1716              	.LVL137:
 1717 0008 08BD     		pop	{r3, pc}
 1718              		.cfi_endproc
 1719              	.LFE173:
 1721 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1722              		.align	2
 1723              		.weak	HAL_UART_ErrorCallback
 1724              		.thumb
 1725              		.thumb_func
 1727              	HAL_UART_ErrorCallback:
 1728              	.LFB152:
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1729              		.loc 1 1998 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 0
 1732              		@ frame_needed = 0, uses_anonymous_args = 0
 1733              		@ link register save eliminated.
 1734              	.LVL138:
 1735 0000 7047     		bx	lr
 1736              		.cfi_endproc
 1737              	.LFE152:
 1739 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 1740              		.align	2
 1741              		.thumb
 1742              		.thumb_func
 1744              	UART_DMAError:
 1745              	.LFB174:
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1746              		.loc 1 2859 0
 1747              		.cfi_startproc
 1748              		@ args = 0, pretend = 0, frame = 0
 1749              		@ frame_needed = 0, uses_anonymous_args = 0
 1750              	.LVL139:
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1751              		.loc 1 2859 0
 1752 0000 10B5     		push	{r4, lr}
 1753              	.LCFI17:
 1754              		.cfi_def_cfa_offset 8
 1755              		.cfi_offset 4, -8
 1756              		.cfi_offset 14, -4
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
ARM GAS  /tmp/ccwgKUSV.s 			page 93


 1757              		.loc 1 2860 0
 1758 0002 846A     		ldr	r4, [r0, #40]
 1759              	.LVL140:
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 1760              		.loc 1 2863 0
 1761 0004 94F87130 		ldrb	r3, [r4, #113]	@ zero_extendqisi2
 1762 0008 DBB2     		uxtb	r3, r3
 1763 000a 212B     		cmp	r3, #33
 1764 000c 0AD1     		bne	.L114
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1765              		.loc 1 2864 0
 1766 000e 2368     		ldr	r3, [r4]
 1767 0010 9B68     		ldr	r3, [r3, #8]
 1768 0012 13F0800F 		tst	r3, #128
 1769 0016 05D0     		beq	.L114
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1770              		.loc 1 2866 0
 1771 0018 0023     		movs	r3, #0
 1772 001a A4F85230 		strh	r3, [r4, #82]	@ movhi
2867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1773              		.loc 1 2867 0
 1774 001e 2046     		mov	r0, r4
 1775              	.LVL141:
 1776 0020 FFF7FEFF 		bl	UART_EndTxTransfer
 1777              	.LVL142:
 1778              	.L114:
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 1779              		.loc 1 2871 0
 1780 0024 94F87230 		ldrb	r3, [r4, #114]	@ zero_extendqisi2
 1781 0028 DBB2     		uxtb	r3, r3
 1782 002a 222B     		cmp	r3, #34
 1783 002c 0AD1     		bne	.L115
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1784              		.loc 1 2872 0
 1785 002e 2368     		ldr	r3, [r4]
 1786 0030 9B68     		ldr	r3, [r3, #8]
 1787 0032 13F0400F 		tst	r3, #64
 1788 0036 05D0     		beq	.L115
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1789              		.loc 1 2874 0
 1790 0038 0023     		movs	r3, #0
 1791 003a A4F85A30 		strh	r3, [r4, #90]	@ movhi
2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1792              		.loc 1 2875 0
 1793 003e 2046     		mov	r0, r4
 1794 0040 FFF7FEFF 		bl	UART_EndRxTransfer
 1795              	.LVL143:
 1796              	.L115:
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1797              		.loc 1 2878 0
 1798 0044 636F     		ldr	r3, [r4, #116]
 1799 0046 43F01003 		orr	r3, r3, #16
 1800 004a 6367     		str	r3, [r4, #116]
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1801              		.loc 1 2879 0
 1802 004c 2046     		mov	r0, r4
 1803 004e FFF7FEFF 		bl	HAL_UART_ErrorCallback
ARM GAS  /tmp/ccwgKUSV.s 			page 94


 1804              	.LVL144:
 1805 0052 10BD     		pop	{r4, pc}
 1806              		.cfi_endproc
 1807              	.LFE174:
 1809              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 1810              		.align	2
 1811              		.global	HAL_UART_IRQHandler
 1812              		.thumb
 1813              		.thumb_func
 1815              	HAL_UART_IRQHandler:
 1816              	.LFB147:
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 1817              		.loc 1 1738 0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 0
 1820              		@ frame_needed = 0, uses_anonymous_args = 0
 1821              	.LVL145:
 1822 0000 38B5     		push	{r3, r4, r5, lr}
 1823              	.LCFI18:
 1824              		.cfi_def_cfa_offset 16
 1825              		.cfi_offset 3, -16
 1826              		.cfi_offset 4, -12
 1827              		.cfi_offset 5, -8
 1828              		.cfi_offset 14, -4
 1829 0002 0446     		mov	r4, r0
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 1830              		.loc 1 1739 0
 1831 0004 0268     		ldr	r2, [r0]
 1832 0006 D369     		ldr	r3, [r2, #28]
 1833              	.LVL146:
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 1834              		.loc 1 1740 0
 1835 0008 1168     		ldr	r1, [r2]
 1836              	.LVL147:
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
 1837              		.loc 1 1741 0
 1838 000a 9068     		ldr	r0, [r2, #8]
 1839              	.LVL148:
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1840              		.loc 1 1746 0
 1841 000c 13F00F05 		ands	r5, r3, #15
 1842              	.LVL149:
 1843 0010 0CD1     		bne	.L118
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        && ((cr1its & USART_CR1_RXNEIE) != RESET))
 1844              		.loc 1 1754 0
 1845 0012 13F0200F 		tst	r3, #32
 1846 0016 09D0     		beq	.L118
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1847              		.loc 1 1755 0
 1848 0018 11F0200F 		tst	r1, #32
 1849 001c 06D0     		beq	.L118
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
 1850              		.loc 1 1758 0
 1851 001e 236E     		ldr	r3, [r4, #96]
 1852              	.LVL150:
 1853 0020 002B     		cmp	r3, #0
 1854 0022 00F09C80 		beq	.L117
ARM GAS  /tmp/ccwgKUSV.s 			page 95


1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
 1855              		.loc 1 1758 0 is_stmt 0 discriminator 1
 1856 0026 2046     		mov	r0, r4
 1857              	.LVL151:
 1858 0028 9847     		blx	r3
 1859              	.LVL152:
 1860 002a 38BD     		pop	{r3, r4, r5, pc}
 1861              	.LVL153:
 1862              	.L118:
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 1863              		.loc 1 1769 0 is_stmt 1
 1864 002c 002D     		cmp	r5, #0
 1865 002e 70D0     		beq	.L120
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 1866              		.loc 1 1770 0
 1867 0030 10F00105 		ands	r5, r0, #1
 1868              	.LVL154:
 1869 0034 02D1     		bne	.L121
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1870              		.loc 1 1771 0
 1871 0036 11F4907F 		tst	r1, #288
 1872 003a 6AD0     		beq	.L120
 1873              	.L121:
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1874              		.loc 1 1775 0
 1875 003c 13F0010F 		tst	r3, #1
 1876 0040 07D0     		beq	.L122
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1877              		.loc 1 1775 0 is_stmt 0 discriminator 1
 1878 0042 11F4807F 		tst	r1, #256
 1879 0046 04D0     		beq	.L122
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 1880              		.loc 1 1777 0 is_stmt 1
 1881 0048 0120     		movs	r0, #1
 1882              	.LVL155:
 1883 004a 1062     		str	r0, [r2, #32]
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1884              		.loc 1 1779 0
 1885 004c 626F     		ldr	r2, [r4, #116]
 1886 004e 0243     		orrs	r2, r2, r0
 1887 0050 6267     		str	r2, [r4, #116]
 1888              	.L122:
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1889              		.loc 1 1783 0
 1890 0052 13F0020F 		tst	r3, #2
 1891 0056 07D0     		beq	.L123
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1892              		.loc 1 1783 0 is_stmt 0 discriminator 1
 1893 0058 35B1     		cbz	r5, .L123
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 1894              		.loc 1 1785 0 is_stmt 1
 1895 005a 2268     		ldr	r2, [r4]
 1896 005c 0220     		movs	r0, #2
 1897 005e 1062     		str	r0, [r2, #32]
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1898              		.loc 1 1787 0
 1899 0060 626F     		ldr	r2, [r4, #116]
ARM GAS  /tmp/ccwgKUSV.s 			page 96


 1900 0062 42F00402 		orr	r2, r2, #4
 1901 0066 6267     		str	r2, [r4, #116]
 1902              	.L123:
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1903              		.loc 1 1791 0
 1904 0068 13F0040F 		tst	r3, #4
 1905 006c 07D0     		beq	.L124
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1906              		.loc 1 1791 0 is_stmt 0 discriminator 1
 1907 006e 35B1     		cbz	r5, .L124
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 1908              		.loc 1 1793 0 is_stmt 1
 1909 0070 2268     		ldr	r2, [r4]
 1910 0072 0420     		movs	r0, #4
 1911 0074 1062     		str	r0, [r2, #32]
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1912              		.loc 1 1795 0
 1913 0076 626F     		ldr	r2, [r4, #116]
 1914 0078 42F00202 		orr	r2, r2, #2
 1915 007c 6267     		str	r2, [r4, #116]
 1916              	.L124:
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        &&(  ((cr1its & USART_CR1_RXNEIE) != RESET) ||
 1917              		.loc 1 1804 0
 1918 007e 13F0080F 		tst	r3, #8
 1919 0082 09D0     		beq	.L125
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              ((cr3its & USART_CR3_EIE) != RESET)))
 1920              		.loc 1 1805 0
 1921 0084 11F0200F 		tst	r1, #32
 1922 0088 00D1     		bne	.L126
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              ((cr3its & USART_CR3_EIE) != RESET)))
 1923              		.loc 1 1805 0 is_stmt 0 discriminator 1
 1924 008a 2DB1     		cbz	r5, .L125
 1925              	.L126:
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 1926              		.loc 1 1809 0 is_stmt 1
 1927 008c 2268     		ldr	r2, [r4]
 1928 008e 0820     		movs	r0, #8
 1929 0090 1062     		str	r0, [r2, #32]
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1930              		.loc 1 1811 0
 1931 0092 626F     		ldr	r2, [r4, #116]
 1932 0094 0243     		orrs	r2, r2, r0
 1933 0096 6267     		str	r2, [r4, #116]
 1934              	.L125:
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1935              		.loc 1 1815 0
 1936 0098 626F     		ldr	r2, [r4, #116]
 1937 009a 002A     		cmp	r2, #0
 1938 009c 5FD0     		beq	.L117
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          && ((cr1its & USART_CR1_RXNEIE) != RESET))
 1939              		.loc 1 1823 0
 1940 009e 13F0200F 		tst	r3, #32
 1941 00a2 06D0     		beq	.L127
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1942              		.loc 1 1824 0
 1943 00a4 11F0200F 		tst	r1, #32
 1944 00a8 03D0     		beq	.L127
ARM GAS  /tmp/ccwgKUSV.s 			page 97


1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 1945              		.loc 1 1827 0
 1946 00aa 236E     		ldr	r3, [r4, #96]
 1947              	.LVL156:
 1948 00ac 0BB1     		cbz	r3, .L127
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 1949              		.loc 1 1827 0 is_stmt 0 discriminator 1
 1950 00ae 2046     		mov	r0, r4
 1951 00b0 9847     		blx	r3
 1952              	.LVL157:
 1953              	.L127:
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1954              		.loc 1 1832 0 is_stmt 1
 1955 00b2 636F     		ldr	r3, [r4, #116]
 1956 00b4 13F0080F 		tst	r3, #8
 1957 00b8 04D1     		bne	.L128
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1958              		.loc 1 1833 0 discriminator 1
 1959 00ba 2368     		ldr	r3, [r4]
 1960 00bc 9B68     		ldr	r3, [r3, #8]
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1961              		.loc 1 1832 0 discriminator 1
 1962 00be 13F0400F 		tst	r3, #64
 1963 00c2 20D0     		beq	.L129
 1964              	.L128:
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
 1965              		.loc 1 1838 0
 1966 00c4 2046     		mov	r0, r4
 1967 00c6 FFF7FEFF 		bl	UART_EndRxTransfer
 1968              	.LVL158:
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 1969              		.loc 1 1841 0
 1970 00ca 2368     		ldr	r3, [r4]
 1971 00cc 9A68     		ldr	r2, [r3, #8]
 1972 00ce 12F0400F 		tst	r2, #64
 1973 00d2 14D0     		beq	.L130
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           
 1974              		.loc 1 1843 0
 1975 00d4 9A68     		ldr	r2, [r3, #8]
 1976 00d6 22F04002 		bic	r2, r2, #64
 1977 00da 9A60     		str	r2, [r3, #8]
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
 1978              		.loc 1 1846 0
 1979 00dc E36E     		ldr	r3, [r4, #108]
 1980 00de 53B1     		cbz	r3, .L131
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             
 1981              		.loc 1 1850 0
 1982 00e0 1F4A     		ldr	r2, .L135
 1983 00e2 9A63     		str	r2, [r3, #56]
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
 1984              		.loc 1 1853 0
 1985 00e4 E06E     		ldr	r0, [r4, #108]
 1986 00e6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1987              	.LVL159:
 1988 00ea 0028     		cmp	r0, #0
 1989 00ec 37D0     		beq	.L117
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
ARM GAS  /tmp/ccwgKUSV.s 			page 98


 1990              		.loc 1 1856 0
 1991 00ee E06E     		ldr	r0, [r4, #108]
 1992 00f0 836B     		ldr	r3, [r0, #56]
 1993 00f2 9847     		blx	r3
 1994              	.LVL160:
 1995 00f4 38BD     		pop	{r3, r4, r5, pc}
 1996              	.LVL161:
 1997              	.L131:
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
 1998              		.loc 1 1862 0
 1999 00f6 2046     		mov	r0, r4
 2000 00f8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2001              	.LVL162:
 2002 00fc 38BD     		pop	{r3, r4, r5, pc}
 2003              	.LVL163:
 2004              	.L130:
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 2005              		.loc 1 1868 0
 2006 00fe 2046     		mov	r0, r4
 2007 0100 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2008              	.LVL164:
 2009 0104 38BD     		pop	{r3, r4, r5, pc}
 2010              	.LVL165:
 2011              	.L129:
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2012              		.loc 1 1875 0
 2013 0106 2046     		mov	r0, r4
 2014 0108 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2015              	.LVL166:
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2016              		.loc 1 1876 0
 2017 010c 0023     		movs	r3, #0
 2018 010e 6367     		str	r3, [r4, #116]
 2019 0110 38BD     		pop	{r3, r4, r5, pc}
 2020              	.LVL167:
 2021              	.L120:
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2022              		.loc 1 1884 0
 2023 0112 13F4801F 		tst	r3, #1048576
 2024 0116 0ED0     		beq	.L132
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2025              		.loc 1 1884 0 is_stmt 0 discriminator 1
 2026 0118 10F4800F 		tst	r0, #4194304
 2027 011c 0BD0     		beq	.L132
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 2028              		.loc 1 1886 0 is_stmt 1
 2029 011e 4FF48013 		mov	r3, #1048576
 2030              	.LVL168:
 2031 0122 1362     		str	r3, [r2, #32]
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2032              		.loc 1 1888 0
 2033 0124 2023     		movs	r3, #32
 2034 0126 84F87130 		strb	r3, [r4, #113]
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 2035              		.loc 1 1889 0
 2036 012a 84F87230 		strb	r3, [r4, #114]
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
ARM GAS  /tmp/ccwgKUSV.s 			page 99


 2037              		.loc 1 1890 0
 2038 012e 2046     		mov	r0, r4
 2039              	.LVL169:
 2040 0130 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2041              	.LVL170:
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2042              		.loc 1 1891 0
 2043 0134 38BD     		pop	{r3, r4, r5, pc}
 2044              	.LVL171:
 2045              	.L132:
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      && ((cr1its & USART_CR1_TXEIE) != RESET))
 2046              		.loc 1 1900 0
 2047 0136 13F0800F 		tst	r3, #128
 2048 013a 07D0     		beq	.L133
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2049              		.loc 1 1901 0
 2050 013c 11F0800F 		tst	r1, #128
 2051 0140 04D0     		beq	.L133
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 2052              		.loc 1 1904 0
 2053 0142 636E     		ldr	r3, [r4, #100]
 2054              	.LVL172:
 2055 0144 5BB1     		cbz	r3, .L117
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 2056              		.loc 1 1904 0 is_stmt 0 discriminator 1
 2057 0146 2046     		mov	r0, r4
 2058              	.LVL173:
 2059 0148 9847     		blx	r3
 2060              	.LVL174:
 2061 014a 38BD     		pop	{r3, r4, r5, pc}
 2062              	.LVL175:
 2063              	.L133:
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2064              		.loc 1 1909 0 is_stmt 1
 2065 014c 13F0400F 		tst	r3, #64
 2066 0150 05D0     		beq	.L117
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2067              		.loc 1 1909 0 is_stmt 0 discriminator 1
 2068 0152 11F0400F 		tst	r1, #64
 2069 0156 02D0     		beq	.L117
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 2070              		.loc 1 1911 0 is_stmt 1
 2071 0158 2046     		mov	r0, r4
 2072              	.LVL176:
 2073 015a FFF7FEFF 		bl	UART_EndTransmit_IT
 2074              	.LVL177:
 2075              	.L117:
 2076 015e 38BD     		pop	{r3, r4, r5, pc}
 2077              	.LVL178:
 2078              	.L136:
 2079              		.align	2
 2080              	.L135:
 2081 0160 00000000 		.word	UART_DMAAbortOnError
 2082              		.cfi_endproc
 2083              	.LFE147:
 2085              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2086              		.align	2
ARM GAS  /tmp/ccwgKUSV.s 			page 100


 2087              		.thumb
 2088              		.thumb_func
 2090              	UART_DMAAbortOnError:
 2091              	.LFB175:
2889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2092              		.loc 1 2889 0
 2093              		.cfi_startproc
 2094              		@ args = 0, pretend = 0, frame = 0
 2095              		@ frame_needed = 0, uses_anonymous_args = 0
 2096              	.LVL179:
 2097 0000 08B5     		push	{r3, lr}
 2098              	.LCFI19:
 2099              		.cfi_def_cfa_offset 8
 2100              		.cfi_offset 3, -8
 2101              		.cfi_offset 14, -4
2890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2102              		.loc 1 2890 0
 2103 0002 806A     		ldr	r0, [r0, #40]
 2104              	.LVL180:
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2105              		.loc 1 2891 0
 2106 0004 0023     		movs	r3, #0
 2107 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2108              		.loc 1 2892 0
 2109 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2110              		.loc 1 2894 0
 2111 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2112              	.LVL181:
 2113 0012 08BD     		pop	{r3, pc}
 2114              		.cfi_endproc
 2115              	.LFE175:
 2117              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2118              		.align	2
 2119              		.weak	HAL_UART_AbortCpltCallback
 2120              		.thumb
 2121              		.thumb_func
 2123              	HAL_UART_AbortCpltCallback:
 2124              	.LFB153:
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2125              		.loc 1 2013 0
 2126              		.cfi_startproc
 2127              		@ args = 0, pretend = 0, frame = 0
 2128              		@ frame_needed = 0, uses_anonymous_args = 0
 2129              		@ link register save eliminated.
 2130              	.LVL182:
 2131 0000 7047     		bx	lr
 2132              		.cfi_endproc
 2133              	.LFE153:
 2135 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2136              		.align	2
 2137              		.global	HAL_UART_Abort_IT
 2138              		.thumb
 2139              		.thumb_func
 2141              	HAL_UART_Abort_IT:
 2142              	.LFB144:
ARM GAS  /tmp/ccwgKUSV.s 			page 101


1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2143              		.loc 1 1435 0
 2144              		.cfi_startproc
 2145              		@ args = 0, pretend = 0, frame = 0
 2146              		@ frame_needed = 0, uses_anonymous_args = 0
 2147              	.LVL183:
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2148              		.loc 1 1435 0
 2149 0000 10B5     		push	{r4, lr}
 2150              	.LCFI20:
 2151              		.cfi_def_cfa_offset 8
 2152              		.cfi_offset 4, -8
 2153              		.cfi_offset 14, -4
 2154 0002 0446     		mov	r4, r0
 2155              	.LVL184:
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2156              		.loc 1 1442 0
 2157 0004 0268     		ldr	r2, [r0]
 2158 0006 1368     		ldr	r3, [r2]
 2159 0008 23F4F073 		bic	r3, r3, #480
 2160 000c 1360     		str	r3, [r2]
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2161              		.loc 1 1444 0
 2162 000e 0268     		ldr	r2, [r0]
 2163 0010 9368     		ldr	r3, [r2, #8]
 2164 0012 23F00103 		bic	r3, r3, #1
 2165 0016 9360     		str	r3, [r2, #8]
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2166              		.loc 1 1449 0
 2167 0018 836E     		ldr	r3, [r0, #104]
 2168 001a 4BB1     		cbz	r3, .L141
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2169              		.loc 1 1453 0
 2170 001c 0268     		ldr	r2, [r0]
 2171 001e 9268     		ldr	r2, [r2, #8]
 2172 0020 12F0800F 		tst	r2, #128
 2173 0024 02D0     		beq	.L142
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2174              		.loc 1 1455 0
 2175 0026 2C4A     		ldr	r2, .L153
 2176 0028 9A63     		str	r2, [r3, #56]
 2177 002a 01E0     		b	.L141
 2178              	.L142:
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2179              		.loc 1 1459 0
 2180 002c 0022     		movs	r2, #0
 2181 002e 9A63     		str	r2, [r3, #56]
 2182              	.L141:
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2183              		.loc 1 1463 0
 2184 0030 E36E     		ldr	r3, [r4, #108]
 2185 0032 4BB1     		cbz	r3, .L143
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2186              		.loc 1 1467 0
 2187 0034 2268     		ldr	r2, [r4]
 2188 0036 9268     		ldr	r2, [r2, #8]
 2189 0038 12F0400F 		tst	r2, #64
ARM GAS  /tmp/ccwgKUSV.s 			page 102


 2190 003c 02D0     		beq	.L144
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2191              		.loc 1 1469 0
 2192 003e 274A     		ldr	r2, .L153+4
 2193 0040 9A63     		str	r2, [r3, #56]
 2194 0042 01E0     		b	.L143
 2195              	.L144:
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2196              		.loc 1 1473 0
 2197 0044 0022     		movs	r2, #0
 2198 0046 9A63     		str	r2, [r3, #56]
 2199              	.L143:
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2200              		.loc 1 1478 0
 2201 0048 2368     		ldr	r3, [r4]
 2202 004a 9A68     		ldr	r2, [r3, #8]
 2203 004c 12F0800F 		tst	r2, #128
 2204 0050 0DD0     		beq	.L148
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2205              		.loc 1 1481 0
 2206 0052 9A68     		ldr	r2, [r3, #8]
 2207 0054 22F08002 		bic	r2, r2, #128
 2208 0058 9A60     		str	r2, [r3, #8]
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2209              		.loc 1 1484 0
 2210 005a A06E     		ldr	r0, [r4, #104]
 2211              	.LVL185:
 2212 005c 48B1     		cbz	r0, .L149
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2213              		.loc 1 1490 0
 2214 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2215              	.LVL186:
 2216 0062 40B1     		cbz	r0, .L150
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2217              		.loc 1 1492 0
 2218 0064 A36E     		ldr	r3, [r4, #104]
 2219 0066 0022     		movs	r2, #0
 2220 0068 9A63     		str	r2, [r3, #56]
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2221              		.loc 1 1436 0
 2222 006a 0122     		movs	r2, #1
 2223 006c 04E0     		b	.L145
 2224              	.LVL187:
 2225              	.L148:
 2226 006e 0122     		movs	r2, #1
 2227 0070 02E0     		b	.L145
 2228              	.LVL188:
 2229              	.L149:
 2230 0072 0122     		movs	r2, #1
 2231 0074 00E0     		b	.L145
 2232              	.L150:
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2233              		.loc 1 1496 0
 2234 0076 0022     		movs	r2, #0
 2235              	.L145:
 2236              	.LVL189:
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccwgKUSV.s 			page 103


 2237              		.loc 1 1502 0
 2238 0078 2368     		ldr	r3, [r4]
 2239 007a 9968     		ldr	r1, [r3, #8]
 2240 007c 11F0400F 		tst	r1, #64
 2241 0080 0ED0     		beq	.L146
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2242              		.loc 1 1504 0
 2243 0082 9968     		ldr	r1, [r3, #8]
 2244 0084 21F04001 		bic	r1, r1, #64
 2245 0088 9960     		str	r1, [r3, #8]
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2246              		.loc 1 1507 0
 2247 008a E06E     		ldr	r0, [r4, #108]
 2248 008c 40B1     		cbz	r0, .L146
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2249              		.loc 1 1513 0
 2250 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2251              	.LVL190:
 2252 0092 20B1     		cbz	r0, .L151
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
 2253              		.loc 1 1515 0
 2254 0094 E36E     		ldr	r3, [r4, #108]
 2255 0096 0022     		movs	r2, #0
 2256 0098 9A63     		str	r2, [r3, #56]
 2257              	.LVL191:
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2258              		.loc 1 1516 0
 2259 009a 0122     		movs	r2, #1
 2260 009c 00E0     		b	.L146
 2261              	.LVL192:
 2262              	.L151:
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2263              		.loc 1 1520 0
 2264 009e 0022     		movs	r2, #0
 2265              	.L146:
 2266              	.LVL193:
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2267              		.loc 1 1526 0
 2268 00a0 C2B1     		cbz	r2, .L147
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2269              		.loc 1 1529 0
 2270 00a2 0023     		movs	r3, #0
 2271 00a4 A4F85230 		strh	r3, [r4, #82]	@ movhi
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2272              		.loc 1 1530 0
 2273 00a8 A4F85A30 		strh	r3, [r4, #90]	@ movhi
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 2274              		.loc 1 1533 0
 2275 00ac 2366     		str	r3, [r4, #96]
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2276              		.loc 1 1534 0
 2277 00ae 6366     		str	r3, [r4, #100]
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2278              		.loc 1 1537 0
 2279 00b0 6367     		str	r3, [r4, #116]
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2280              		.loc 1 1540 0
ARM GAS  /tmp/ccwgKUSV.s 			page 104


 2281 00b2 2368     		ldr	r3, [r4]
 2282 00b4 0F22     		movs	r2, #15
 2283              	.LVL194:
 2284 00b6 1A62     		str	r2, [r3, #32]
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2285              		.loc 1 1551 0
 2286 00b8 2268     		ldr	r2, [r4]
 2287 00ba 138B     		ldrh	r3, [r2, #24]
 2288 00bc 9BB2     		uxth	r3, r3
 2289 00be 43F00803 		orr	r3, r3, #8
 2290 00c2 1383     		strh	r3, [r2, #24]	@ movhi
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2291              		.loc 1 1554 0
 2292 00c4 2023     		movs	r3, #32
 2293 00c6 84F87130 		strb	r3, [r4, #113]
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2294              		.loc 1 1555 0
 2295 00ca 84F87230 		strb	r3, [r4, #114]
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2296              		.loc 1 1558 0
 2297 00ce 2046     		mov	r0, r4
 2298 00d0 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2299              	.LVL195:
 2300              	.L147:
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2301              		.loc 1 1562 0
 2302 00d4 0020     		movs	r0, #0
 2303 00d6 10BD     		pop	{r4, pc}
 2304              	.LVL196:
 2305              	.L154:
 2306              		.align	2
 2307              	.L153:
 2308 00d8 00000000 		.word	UART_DMATxAbortCallback
 2309 00dc 00000000 		.word	UART_DMARxAbortCallback
 2310              		.cfi_endproc
 2311              	.LFE144:
 2313              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2314              		.align	2
 2315              		.thumb
 2316              		.thumb_func
 2318              	UART_DMARxAbortCallback:
 2319              	.LFB177:
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2320              		.loc 1 2956 0
 2321              		.cfi_startproc
 2322              		@ args = 0, pretend = 0, frame = 0
 2323              		@ frame_needed = 0, uses_anonymous_args = 0
 2324              	.LVL197:
 2325 0000 08B5     		push	{r3, lr}
 2326              	.LCFI21:
 2327              		.cfi_def_cfa_offset 8
 2328              		.cfi_offset 3, -8
 2329              		.cfi_offset 14, -4
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2330              		.loc 1 2957 0
 2331 0002 806A     		ldr	r0, [r0, #40]
 2332              	.LVL198:
ARM GAS  /tmp/ccwgKUSV.s 			page 105


2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2333              		.loc 1 2959 0
 2334 0004 C36E     		ldr	r3, [r0, #108]
 2335 0006 0022     		movs	r2, #0
 2336 0008 9A63     		str	r2, [r3, #56]
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2337              		.loc 1 2962 0
 2338 000a 836E     		ldr	r3, [r0, #104]
 2339 000c 0BB1     		cbz	r3, .L156
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2340              		.loc 1 2964 0
 2341 000e 9B6B     		ldr	r3, [r3, #56]
 2342 0010 ABB9     		cbnz	r3, .L155
 2343              	.L156:
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2344              		.loc 1 2971 0
 2345 0012 0023     		movs	r3, #0
 2346 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2347              		.loc 1 2972 0
 2348 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2349              		.loc 1 2975 0
 2350 001c 4367     		str	r3, [r0, #116]
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2351              		.loc 1 2978 0
 2352 001e 0368     		ldr	r3, [r0]
 2353 0020 0F22     		movs	r2, #15
 2354 0022 1A62     		str	r2, [r3, #32]
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2355              		.loc 1 2981 0
 2356 0024 0268     		ldr	r2, [r0]
 2357 0026 138B     		ldrh	r3, [r2, #24]
 2358 0028 9BB2     		uxth	r3, r3
 2359 002a 43F00803 		orr	r3, r3, #8
 2360 002e 1383     		strh	r3, [r2, #24]	@ movhi
2984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2361              		.loc 1 2984 0
 2362 0030 2023     		movs	r3, #32
 2363 0032 80F87130 		strb	r3, [r0, #113]
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2364              		.loc 1 2985 0
 2365 0036 80F87230 		strb	r3, [r0, #114]
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2366              		.loc 1 2988 0
 2367 003a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2368              	.LVL199:
 2369              	.L155:
 2370 003e 08BD     		pop	{r3, pc}
 2371              		.cfi_endproc
 2372              	.LFE177:
 2374              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2375              		.align	2
 2376              		.thumb
 2377              		.thumb_func
 2379              	UART_DMATxAbortCallback:
 2380              	.LFB176:
ARM GAS  /tmp/ccwgKUSV.s 			page 106


2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2381              		.loc 1 2906 0
 2382              		.cfi_startproc
 2383              		@ args = 0, pretend = 0, frame = 0
 2384              		@ frame_needed = 0, uses_anonymous_args = 0
 2385              	.LVL200:
 2386 0000 08B5     		push	{r3, lr}
 2387              	.LCFI22:
 2388              		.cfi_def_cfa_offset 8
 2389              		.cfi_offset 3, -8
 2390              		.cfi_offset 14, -4
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2391              		.loc 1 2907 0
 2392 0002 806A     		ldr	r0, [r0, #40]
 2393              	.LVL201:
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2394              		.loc 1 2909 0
 2395 0004 836E     		ldr	r3, [r0, #104]
 2396 0006 0022     		movs	r2, #0
 2397 0008 9A63     		str	r2, [r3, #56]
2912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2398              		.loc 1 2912 0
 2399 000a C36E     		ldr	r3, [r0, #108]
 2400 000c 0BB1     		cbz	r3, .L160
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2401              		.loc 1 2914 0
 2402 000e 9B6B     		ldr	r3, [r3, #56]
 2403 0010 7BB9     		cbnz	r3, .L159
 2404              	.L160:
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2405              		.loc 1 2921 0
 2406 0012 0023     		movs	r3, #0
 2407 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
2922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2408              		.loc 1 2922 0
 2409 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2410              		.loc 1 2925 0
 2411 001c 4367     		str	r3, [r0, #116]
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2412              		.loc 1 2928 0
 2413 001e 0368     		ldr	r3, [r0]
 2414 0020 0F22     		movs	r2, #15
 2415 0022 1A62     		str	r2, [r3, #32]
2939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2416              		.loc 1 2939 0
 2417 0024 2023     		movs	r3, #32
 2418 0026 80F87130 		strb	r3, [r0, #113]
2940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2419              		.loc 1 2940 0
 2420 002a 80F87230 		strb	r3, [r0, #114]
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2421              		.loc 1 2943 0
 2422 002e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2423              	.LVL202:
 2424              	.L159:
 2425 0032 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccwgKUSV.s 			page 107


 2426              		.cfi_endproc
 2427              	.LFE176:
 2429              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2430              		.align	2
 2431              		.weak	HAL_UART_AbortTransmitCpltCallback
 2432              		.thumb
 2433              		.thumb_func
 2435              	HAL_UART_AbortTransmitCpltCallback:
 2436              	.LFB154:
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2437              		.loc 1 2028 0
 2438              		.cfi_startproc
 2439              		@ args = 0, pretend = 0, frame = 0
 2440              		@ frame_needed = 0, uses_anonymous_args = 0
 2441              		@ link register save eliminated.
 2442              	.LVL203:
 2443 0000 7047     		bx	lr
 2444              		.cfi_endproc
 2445              	.LFE154:
 2447 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2448              		.align	2
 2449              		.global	HAL_UART_AbortTransmit_IT
 2450              		.thumb
 2451              		.thumb_func
 2453              	HAL_UART_AbortTransmit_IT:
 2454              	.LFB145:
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2455              		.loc 1 1579 0
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 0
 2458              		@ frame_needed = 0, uses_anonymous_args = 0
 2459              	.LVL204:
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2460              		.loc 1 1579 0
 2461 0000 10B5     		push	{r4, lr}
 2462              	.LCFI23:
 2463              		.cfi_def_cfa_offset 8
 2464              		.cfi_offset 4, -8
 2465              		.cfi_offset 14, -4
 2466 0002 0446     		mov	r4, r0
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2467              		.loc 1 1584 0
 2468 0004 0268     		ldr	r2, [r0]
 2469 0006 1368     		ldr	r3, [r2]
 2470 0008 23F0C003 		bic	r3, r3, #192
 2471 000c 1360     		str	r3, [r2]
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2472              		.loc 1 1588 0
 2473 000e 0368     		ldr	r3, [r0]
 2474 0010 9A68     		ldr	r2, [r3, #8]
 2475 0012 12F0800F 		tst	r2, #128
 2476 0016 19D0     		beq	.L165
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2477              		.loc 1 1590 0
 2478 0018 9A68     		ldr	r2, [r3, #8]
 2479 001a 22F08002 		bic	r2, r2, #128
 2480 001e 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccwgKUSV.s 			page 108


1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2481              		.loc 1 1593 0
 2482 0020 836E     		ldr	r3, [r0, #104]
 2483 0022 4BB1     		cbz	r3, .L166
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 2484              		.loc 1 1597 0
 2485 0024 0F4A     		ldr	r2, .L169
 2486 0026 9A63     		str	r2, [r3, #56]
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2487              		.loc 1 1600 0
 2488 0028 806E     		ldr	r0, [r0, #104]
 2489              	.LVL205:
 2490 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2491              	.LVL206:
 2492 002e B0B1     		cbz	r0, .L167
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2493              		.loc 1 1603 0
 2494 0030 A06E     		ldr	r0, [r4, #104]
 2495 0032 836B     		ldr	r3, [r0, #56]
 2496 0034 9847     		blx	r3
 2497              	.LVL207:
 2498 0036 12E0     		b	.L167
 2499              	.LVL208:
 2500              	.L166:
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 2501              		.loc 1 1609 0
 2502 0038 0023     		movs	r3, #0
 2503 003a A0F85230 		strh	r3, [r0, #82]	@ movhi
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 2504              		.loc 1 1612 0
 2505 003e 4366     		str	r3, [r0, #100]
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 2506              		.loc 1 1615 0
 2507 0040 2023     		movs	r3, #32
 2508 0042 80F87130 		strb	r3, [r0, #113]
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2509              		.loc 1 1618 0
 2510 0046 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2511              	.LVL209:
 2512 004a 08E0     		b	.L167
 2513              	.LVL210:
 2514              	.L165:
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2515              		.loc 1 1624 0
 2516 004c 0023     		movs	r3, #0
 2517 004e A0F85230 		strh	r3, [r0, #82]	@ movhi
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2518              		.loc 1 1627 0
 2519 0052 4366     		str	r3, [r0, #100]
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2520              		.loc 1 1638 0
 2521 0054 2023     		movs	r3, #32
 2522 0056 80F87130 		strb	r3, [r0, #113]
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2523              		.loc 1 1641 0
 2524 005a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2525              	.LVL211:
ARM GAS  /tmp/ccwgKUSV.s 			page 109


 2526              	.L167:
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2527              		.loc 1 1645 0
 2528 005e 0020     		movs	r0, #0
 2529 0060 10BD     		pop	{r4, pc}
 2530              	.LVL212:
 2531              	.L170:
 2532 0062 00BF     		.align	2
 2533              	.L169:
 2534 0064 00000000 		.word	UART_DMATxOnlyAbortCallback
 2535              		.cfi_endproc
 2536              	.LFE145:
 2538              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2539              		.align	2
 2540              		.thumb
 2541              		.thumb_func
 2543              	UART_DMATxOnlyAbortCallback:
 2544              	.LFB178:
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2545              		.loc 1 3001 0
 2546              		.cfi_startproc
 2547              		@ args = 0, pretend = 0, frame = 0
 2548              		@ frame_needed = 0, uses_anonymous_args = 0
 2549              	.LVL213:
 2550 0000 08B5     		push	{r3, lr}
 2551              	.LCFI24:
 2552              		.cfi_def_cfa_offset 8
 2553              		.cfi_offset 3, -8
 2554              		.cfi_offset 14, -4
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2555              		.loc 1 3002 0
 2556 0002 806A     		ldr	r0, [r0, #40]
 2557              	.LVL214:
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2558              		.loc 1 3004 0
 2559 0004 0023     		movs	r3, #0
 2560 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2561              		.loc 1 3015 0
 2562 000a 2023     		movs	r3, #32
 2563 000c 80F87130 		strb	r3, [r0, #113]
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2564              		.loc 1 3018 0
 2565 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2566              	.LVL215:
 2567 0014 08BD     		pop	{r3, pc}
 2568              		.cfi_endproc
 2569              	.LFE178:
 2571 0016 00BF     		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2572              		.align	2
 2573              		.weak	HAL_UART_AbortReceiveCpltCallback
 2574              		.thumb
 2575              		.thumb_func
 2577              	HAL_UART_AbortReceiveCpltCallback:
 2578              	.LFB155:
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2579              		.loc 1 2043 0
ARM GAS  /tmp/ccwgKUSV.s 			page 110


 2580              		.cfi_startproc
 2581              		@ args = 0, pretend = 0, frame = 0
 2582              		@ frame_needed = 0, uses_anonymous_args = 0
 2583              		@ link register save eliminated.
 2584              	.LVL216:
 2585 0000 7047     		bx	lr
 2586              		.cfi_endproc
 2587              	.LFE155:
 2589 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2590              		.align	2
 2591              		.global	HAL_UART_AbortReceive_IT
 2592              		.thumb
 2593              		.thumb_func
 2595              	HAL_UART_AbortReceive_IT:
 2596              	.LFB146:
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2597              		.loc 1 1662 0
 2598              		.cfi_startproc
 2599              		@ args = 0, pretend = 0, frame = 0
 2600              		@ frame_needed = 0, uses_anonymous_args = 0
 2601              	.LVL217:
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2602              		.loc 1 1662 0
 2603 0000 10B5     		push	{r4, lr}
 2604              	.LCFI25:
 2605              		.cfi_def_cfa_offset 8
 2606              		.cfi_offset 4, -8
 2607              		.cfi_offset 14, -4
 2608 0002 0446     		mov	r4, r0
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2609              		.loc 1 1667 0
 2610 0004 0268     		ldr	r2, [r0]
 2611 0006 1368     		ldr	r3, [r2]
 2612 0008 23F49073 		bic	r3, r3, #288
 2613 000c 1360     		str	r3, [r2]
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2614              		.loc 1 1669 0
 2615 000e 0268     		ldr	r2, [r0]
 2616 0010 9368     		ldr	r3, [r2, #8]
 2617 0012 23F00103 		bic	r3, r3, #1
 2618 0016 9360     		str	r3, [r2, #8]
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2619              		.loc 1 1672 0
 2620 0018 0368     		ldr	r3, [r0]
 2621 001a 9A68     		ldr	r2, [r3, #8]
 2622 001c 12F0400F 		tst	r2, #64
 2623 0020 22D0     		beq	.L175
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2624              		.loc 1 1674 0
 2625 0022 9A68     		ldr	r2, [r3, #8]
 2626 0024 22F04002 		bic	r2, r2, #64
 2627 0028 9A60     		str	r2, [r3, #8]
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2628              		.loc 1 1677 0
 2629 002a C36E     		ldr	r3, [r0, #108]
 2630 002c 4BB1     		cbz	r3, .L176
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
ARM GAS  /tmp/ccwgKUSV.s 			page 111


 2631              		.loc 1 1681 0
 2632 002e 154A     		ldr	r2, .L179
 2633 0030 9A63     		str	r2, [r3, #56]
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2634              		.loc 1 1684 0
 2635 0032 C06E     		ldr	r0, [r0, #108]
 2636              	.LVL218:
 2637 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2638              	.LVL219:
 2639 0038 08B3     		cbz	r0, .L177
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2640              		.loc 1 1687 0
 2641 003a E06E     		ldr	r0, [r4, #108]
 2642 003c 836B     		ldr	r3, [r0, #56]
 2643 003e 9847     		blx	r3
 2644              	.LVL220:
 2645 0040 1DE0     		b	.L177
 2646              	.LVL221:
 2647              	.L176:
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 2648              		.loc 1 1693 0
 2649 0042 0023     		movs	r3, #0
 2650 0044 A0F85A30 		strh	r3, [r0, #90]	@ movhi
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 2651              		.loc 1 1696 0
 2652 0048 4365     		str	r3, [r0, #84]
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 2653              		.loc 1 1699 0
 2654 004a 0368     		ldr	r3, [r0]
 2655 004c 0F22     		movs	r2, #15
 2656 004e 1A62     		str	r2, [r3, #32]
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 2657              		.loc 1 1702 0
 2658 0050 0268     		ldr	r2, [r0]
 2659 0052 138B     		ldrh	r3, [r2, #24]
 2660 0054 9BB2     		uxth	r3, r3
 2661 0056 43F00803 		orr	r3, r3, #8
 2662 005a 1383     		strh	r3, [r2, #24]	@ movhi
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       
 2663              		.loc 1 1705 0
 2664 005c 2023     		movs	r3, #32
 2665 005e 80F87230 		strb	r3, [r0, #114]
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2666              		.loc 1 1708 0
 2667 0062 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2668              	.LVL222:
 2669 0066 0AE0     		b	.L177
 2670              	.LVL223:
 2671              	.L175:
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2672              		.loc 1 1714 0
 2673 0068 0022     		movs	r2, #0
 2674 006a A0F85A20 		strh	r2, [r0, #90]	@ movhi
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2675              		.loc 1 1717 0
 2676 006e 4265     		str	r2, [r0, #84]
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
ARM GAS  /tmp/ccwgKUSV.s 			page 112


 2677              		.loc 1 1720 0
 2678 0070 0F22     		movs	r2, #15
 2679 0072 1A62     		str	r2, [r3, #32]
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 2680              		.loc 1 1723 0
 2681 0074 2023     		movs	r3, #32
 2682 0076 80F87230 		strb	r3, [r0, #114]
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2683              		.loc 1 1726 0
 2684 007a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2685              	.LVL224:
 2686              	.L177:
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2687              		.loc 1 1730 0
 2688 007e 0020     		movs	r0, #0
 2689 0080 10BD     		pop	{r4, pc}
 2690              	.LVL225:
 2691              	.L180:
 2692 0082 00BF     		.align	2
 2693              	.L179:
 2694 0084 00000000 		.word	UART_DMARxOnlyAbortCallback
 2695              		.cfi_endproc
 2696              	.LFE146:
 2698              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2699              		.align	2
 2700              		.thumb
 2701              		.thumb_func
 2703              	UART_DMARxOnlyAbortCallback:
 2704              	.LFB179:
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2705              		.loc 1 3030 0
 2706              		.cfi_startproc
 2707              		@ args = 0, pretend = 0, frame = 0
 2708              		@ frame_needed = 0, uses_anonymous_args = 0
 2709              	.LVL226:
 2710 0000 08B5     		push	{r3, lr}
 2711              	.LCFI26:
 2712              		.cfi_def_cfa_offset 8
 2713              		.cfi_offset 3, -8
 2714              		.cfi_offset 14, -4
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2715              		.loc 1 3031 0
 2716 0002 806A     		ldr	r0, [r0, #40]
 2717              	.LVL227:
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2718              		.loc 1 3033 0
 2719 0004 0023     		movs	r3, #0
 2720 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2721              		.loc 1 3036 0
 2722 000a 0368     		ldr	r3, [r0]
 2723 000c 0F22     		movs	r2, #15
 2724 000e 1A62     		str	r2, [r3, #32]
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2725              		.loc 1 3039 0
 2726 0010 0268     		ldr	r2, [r0]
 2727 0012 138B     		ldrh	r3, [r2, #24]
ARM GAS  /tmp/ccwgKUSV.s 			page 113


 2728 0014 9BB2     		uxth	r3, r3
 2729 0016 43F00803 		orr	r3, r3, #8
 2730 001a 1383     		strh	r3, [r2, #24]	@ movhi
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2731              		.loc 1 3042 0
 2732 001c 2023     		movs	r3, #32
 2733 001e 80F87230 		strb	r3, [r0, #114]
3045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2734              		.loc 1 3045 0
 2735 0022 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2736              	.LVL228:
 2737 0026 08BD     		pop	{r3, pc}
 2738              		.cfi_endproc
 2739              	.LFE179:
 2741              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2742              		.align	2
 2743              		.global	HAL_MultiProcessor_EnterMuteMode
 2744              		.thumb
 2745              		.thumb_func
 2747              	HAL_MultiProcessor_EnterMuteMode:
 2748              	.LFB158:
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2749              		.loc 1 2129 0
 2750              		.cfi_startproc
 2751              		@ args = 0, pretend = 0, frame = 0
 2752              		@ frame_needed = 0, uses_anonymous_args = 0
 2753              		@ link register save eliminated.
 2754              	.LVL229:
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2755              		.loc 1 2130 0
 2756 0000 0268     		ldr	r2, [r0]
 2757 0002 138B     		ldrh	r3, [r2, #24]
 2758 0004 9BB2     		uxth	r3, r3
 2759 0006 43F00403 		orr	r3, r3, #4
 2760 000a 1383     		strh	r3, [r2, #24]	@ movhi
 2761 000c 7047     		bx	lr
 2762              		.cfi_endproc
 2763              	.LFE158:
 2765 000e 00BF     		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2766              		.align	2
 2767              		.global	HAL_HalfDuplex_EnableTransmitter
 2768              		.thumb
 2769              		.thumb_func
 2771              	HAL_HalfDuplex_EnableTransmitter:
 2772              	.LFB159:
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 2773              		.loc 1 2139 0
 2774              		.cfi_startproc
 2775              		@ args = 0, pretend = 0, frame = 0
 2776              		@ frame_needed = 0, uses_anonymous_args = 0
 2777              		@ link register save eliminated.
 2778              	.LVL230:
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2779              		.loc 1 2141 0
 2780 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 2781 0004 012B     		cmp	r3, #1
 2782 0006 17D0     		beq	.L186
ARM GAS  /tmp/ccwgKUSV.s 			page 114


2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2783              		.loc 1 2141 0 is_stmt 0 discriminator 2
 2784 0008 0123     		movs	r3, #1
 2785 000a 80F87030 		strb	r3, [r0, #112]
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2786              		.loc 1 2142 0 is_stmt 1 discriminator 2
 2787 000e 2423     		movs	r3, #36
 2788 0010 80F87130 		strb	r3, [r0, #113]
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2789              		.loc 1 2145 0 discriminator 2
 2790 0014 0268     		ldr	r2, [r0]
 2791 0016 1368     		ldr	r3, [r2]
 2792 0018 23F00C03 		bic	r3, r3, #12
 2793 001c 1360     		str	r3, [r2]
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2794              		.loc 1 2148 0 discriminator 2
 2795 001e 0268     		ldr	r2, [r0]
 2796 0020 1368     		ldr	r3, [r2]
 2797 0022 43F00803 		orr	r3, r3, #8
 2798 0026 1360     		str	r3, [r2]
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2799              		.loc 1 2150 0 discriminator 2
 2800 0028 2023     		movs	r3, #32
 2801 002a 80F87130 		strb	r3, [r0, #113]
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2802              		.loc 1 2153 0 discriminator 2
 2803 002e 0023     		movs	r3, #0
 2804 0030 80F87030 		strb	r3, [r0, #112]
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2805              		.loc 1 2155 0 discriminator 2
 2806 0034 1846     		mov	r0, r3
 2807              	.LVL231:
 2808 0036 7047     		bx	lr
 2809              	.LVL232:
 2810              	.L186:
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2811              		.loc 1 2141 0
 2812 0038 0220     		movs	r0, #2
 2813              	.LVL233:
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2814              		.loc 1 2156 0
 2815 003a 7047     		bx	lr
 2816              		.cfi_endproc
 2817              	.LFE159:
 2819              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2820              		.align	2
 2821              		.global	HAL_HalfDuplex_EnableReceiver
 2822              		.thumb
 2823              		.thumb_func
 2825              	HAL_HalfDuplex_EnableReceiver:
 2826              	.LFB160:
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 2827              		.loc 1 2164 0
 2828              		.cfi_startproc
 2829              		@ args = 0, pretend = 0, frame = 0
 2830              		@ frame_needed = 0, uses_anonymous_args = 0
 2831              		@ link register save eliminated.
ARM GAS  /tmp/ccwgKUSV.s 			page 115


 2832              	.LVL234:
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2833              		.loc 1 2166 0
 2834 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 2835 0004 012B     		cmp	r3, #1
 2836 0006 17D0     		beq	.L189
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2837              		.loc 1 2166 0 is_stmt 0 discriminator 2
 2838 0008 0123     		movs	r3, #1
 2839 000a 80F87030 		strb	r3, [r0, #112]
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2840              		.loc 1 2167 0 is_stmt 1 discriminator 2
 2841 000e 2423     		movs	r3, #36
 2842 0010 80F87130 		strb	r3, [r0, #113]
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2843              		.loc 1 2170 0 discriminator 2
 2844 0014 0268     		ldr	r2, [r0]
 2845 0016 1368     		ldr	r3, [r2]
 2846 0018 23F00C03 		bic	r3, r3, #12
 2847 001c 1360     		str	r3, [r2]
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2848              		.loc 1 2173 0 discriminator 2
 2849 001e 0268     		ldr	r2, [r0]
 2850 0020 1368     		ldr	r3, [r2]
 2851 0022 43F00403 		orr	r3, r3, #4
 2852 0026 1360     		str	r3, [r2]
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2853              		.loc 1 2175 0 discriminator 2
 2854 0028 2023     		movs	r3, #32
 2855 002a 80F87130 		strb	r3, [r0, #113]
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2856              		.loc 1 2178 0 discriminator 2
 2857 002e 0023     		movs	r3, #0
 2858 0030 80F87030 		strb	r3, [r0, #112]
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2859              		.loc 1 2180 0 discriminator 2
 2860 0034 1846     		mov	r0, r3
 2861              	.LVL235:
 2862 0036 7047     		bx	lr
 2863              	.LVL236:
 2864              	.L189:
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2865              		.loc 1 2166 0
 2866 0038 0220     		movs	r0, #2
 2867              	.LVL237:
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2868              		.loc 1 2181 0
 2869 003a 7047     		bx	lr
 2870              		.cfi_endproc
 2871              	.LFE160:
 2873              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2874              		.align	2
 2875              		.global	HAL_LIN_SendBreak
 2876              		.thumb
 2877              		.thumb_func
 2879              	HAL_LIN_SendBreak:
 2880              	.LFB161:
ARM GAS  /tmp/ccwgKUSV.s 			page 116


2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 2881              		.loc 1 2190 0
 2882              		.cfi_startproc
 2883              		@ args = 0, pretend = 0, frame = 0
 2884              		@ frame_needed = 0, uses_anonymous_args = 0
 2885              		@ link register save eliminated.
 2886              	.LVL238:
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2887              		.loc 1 2195 0
 2888 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 2889 0004 012B     		cmp	r3, #1
 2890 0006 13D0     		beq	.L192
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2891              		.loc 1 2195 0 is_stmt 0 discriminator 2
 2892 0008 0123     		movs	r3, #1
 2893 000a 80F87030 		strb	r3, [r0, #112]
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2894              		.loc 1 2197 0 is_stmt 1 discriminator 2
 2895 000e 2423     		movs	r3, #36
 2896 0010 80F87130 		strb	r3, [r0, #113]
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2897              		.loc 1 2200 0 discriminator 2
 2898 0014 0268     		ldr	r2, [r0]
 2899 0016 138B     		ldrh	r3, [r2, #24]
 2900 0018 9BB2     		uxth	r3, r3
 2901 001a 43F00203 		orr	r3, r3, #2
 2902 001e 1383     		strh	r3, [r2, #24]	@ movhi
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2903              		.loc 1 2202 0 discriminator 2
 2904 0020 2023     		movs	r3, #32
 2905 0022 80F87130 		strb	r3, [r0, #113]
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2906              		.loc 1 2205 0 discriminator 2
 2907 0026 0023     		movs	r3, #0
 2908 0028 80F87030 		strb	r3, [r0, #112]
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2909              		.loc 1 2207 0 discriminator 2
 2910 002c 1846     		mov	r0, r3
 2911              	.LVL239:
 2912 002e 7047     		bx	lr
 2913              	.LVL240:
 2914              	.L192:
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2915              		.loc 1 2195 0
 2916 0030 0220     		movs	r0, #2
 2917              	.LVL241:
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2918              		.loc 1 2208 0
 2919 0032 7047     		bx	lr
 2920              		.cfi_endproc
 2921              	.LFE161:
 2923              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2924              		.align	2
 2925              		.global	HAL_UART_GetState
 2926              		.thumb
 2927              		.thumb_func
 2929              	HAL_UART_GetState:
ARM GAS  /tmp/ccwgKUSV.s 			page 117


 2930              	.LFB162:
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2931              		.loc 1 2237 0
 2932              		.cfi_startproc
 2933              		@ args = 0, pretend = 0, frame = 0
 2934              		@ frame_needed = 0, uses_anonymous_args = 0
 2935              		@ link register save eliminated.
 2936              	.LVL242:
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 2937              		.loc 1 2239 0
 2938 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 2939              	.LVL243:
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 2940              		.loc 1 2240 0
 2941 0004 90F87200 		ldrb	r0, [r0, #114]	@ zero_extendqisi2
 2942              	.LVL244:
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2943              		.loc 1 2243 0
 2944 0008 1843     		orrs	r0, r0, r3
 2945              	.LVL245:
 2946 000a 7047     		bx	lr
 2947              		.cfi_endproc
 2948              	.LFE162:
 2950              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2951              		.align	2
 2952              		.global	HAL_UART_GetError
 2953              		.thumb
 2954              		.thumb_func
 2956              	HAL_UART_GetError:
 2957              	.LFB163:
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
 2958              		.loc 1 2252 0
 2959              		.cfi_startproc
 2960              		@ args = 0, pretend = 0, frame = 0
 2961              		@ frame_needed = 0, uses_anonymous_args = 0
 2962              		@ link register save eliminated.
 2963              	.LVL246:
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2964              		.loc 1 2253 0
 2965 0000 406F     		ldr	r0, [r0, #116]
 2966              	.LVL247:
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 2967              		.loc 1 2254 0
 2968 0002 7047     		bx	lr
 2969              		.cfi_endproc
 2970              	.LFE163:
 2972              		.global	__aeabi_uldivmod
 2973              		.section	.text.UART_SetConfig,"ax",%progbits
 2974              		.align	2
 2975              		.global	UART_SetConfig
 2976              		.thumb
 2977              		.thumb_func
 2979              	UART_SetConfig:
 2980              	.LFB164:
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 2981              		.loc 1 2273 0
 2982              		.cfi_startproc
ARM GAS  /tmp/ccwgKUSV.s 			page 118


 2983              		@ args = 0, pretend = 0, frame = 0
 2984              		@ frame_needed = 0, uses_anonymous_args = 0
 2985              	.LVL248:
 2986 0000 2DE9704F 		push	{r4, r5, r6, r8, r9, r10, fp, lr}
 2987              	.LCFI27:
 2988              		.cfi_def_cfa_offset 32
 2989              		.cfi_offset 4, -32
 2990              		.cfi_offset 5, -28
 2991              		.cfi_offset 6, -24
 2992              		.cfi_offset 8, -20
 2993              		.cfi_offset 9, -16
 2994              		.cfi_offset 10, -12
 2995              		.cfi_offset 11, -8
 2996              		.cfi_offset 14, -4
 2997 0004 0446     		mov	r4, r0
 2998              	.LVL249:
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 2999              		.loc 1 2309 0
 3000 0006 8268     		ldr	r2, [r0, #8]
 3001 0008 0369     		ldr	r3, [r0, #16]
 3002 000a 1A43     		orrs	r2, r2, r3
 3003 000c 4369     		ldr	r3, [r0, #20]
 3004 000e 1A43     		orrs	r2, r2, r3
 3005 0010 C369     		ldr	r3, [r0, #28]
 3006 0012 1343     		orrs	r3, r3, r2
 3007              	.LVL250:
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3008              		.loc 1 2310 0
 3009 0014 0168     		ldr	r1, [r0]
 3010 0016 0868     		ldr	r0, [r1]
 3011              	.LVL251:
 3012 0018 9B4A     		ldr	r2, .L258
 3013 001a 0240     		ands	r2, r2, r0
 3014 001c 1343     		orrs	r3, r3, r2
 3015              	.LVL252:
 3016 001e 0B60     		str	r3, [r1]
 3017              	.LVL253:
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3018              		.loc 1 2315 0
 3019 0020 2168     		ldr	r1, [r4]
 3020 0022 4B68     		ldr	r3, [r1, #4]
 3021 0024 23F44052 		bic	r2, r3, #12288
 3022 0028 E368     		ldr	r3, [r4, #12]
 3023 002a 1343     		orrs	r3, r3, r2
 3024 002c 4B60     		str	r3, [r1, #4]
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3025              		.loc 1 2325 0
 3026 002e A369     		ldr	r3, [r4, #24]
 3027              	.LVL254:
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3028              		.loc 1 2327 0
 3029 0030 2268     		ldr	r2, [r4]
 3030 0032 9649     		ldr	r1, .L258+4
 3031 0034 8A42     		cmp	r2, r1
 3032 0036 01D0     		beq	.L196
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3033              		.loc 1 2329 0
ARM GAS  /tmp/ccwgKUSV.s 			page 119


 3034 0038 216A     		ldr	r1, [r4, #32]
 3035 003a 0B43     		orrs	r3, r3, r1
 3036              	.LVL255:
 3037              	.L196:
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3038              		.loc 1 2331 0
 3039 003c 9168     		ldr	r1, [r2, #8]
 3040 003e 21F43061 		bic	r1, r1, #2816
 3041 0042 0B43     		orrs	r3, r3, r1
 3042              	.LVL256:
 3043 0044 9360     		str	r3, [r2, #8]
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3044              		.loc 1 2341 0
 3045 0046 2368     		ldr	r3, [r4]
 3046 0048 914A     		ldr	r2, .L258+8
 3047 004a 9342     		cmp	r3, r2
 3048 004c 13D1     		bne	.L197
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3049              		.loc 1 2341 0 is_stmt 0 discriminator 1
 3050 004e 02F55842 		add	r2, r2, #55296
 3051 0052 D2F88820 		ldr	r2, [r2, #136]
 3052 0056 02F00302 		and	r2, r2, #3
 3053 005a 032A     		cmp	r2, #3
 3054 005c 09D8     		bhi	.L198
 3055 005e DFE802F0 		tbb	[pc, r2]
 3056              	.L200:
 3057 0062 02       		.byte	(.L199-.L200)/2
 3058 0063 04       		.byte	(.L201-.L200)/2
 3059 0064 44       		.byte	(.L244-.L200)/2
 3060 0065 06       		.byte	(.L203-.L200)/2
 3061              		.p2align 1
 3062              	.L199:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3063              		.loc 1 2341 0
 3064 0066 0125     		movs	r5, #1
 3065 0068 46E0     		b	.L202
 3066              	.L201:
 3067              	.LVL257:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3068              		.loc 1 2341 0 discriminator 5
 3069 006a 0425     		movs	r5, #4
 3070 006c 44E0     		b	.L202
 3071              	.LVL258:
 3072              	.L203:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3073              		.loc 1 2341 0 discriminator 7
 3074 006e 0825     		movs	r5, #8
 3075 0070 42E0     		b	.L202
 3076              	.LVL259:
 3077              	.L198:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3078              		.loc 1 2341 0 discriminator 3
 3079 0072 1025     		movs	r5, #16
 3080 0074 40E0     		b	.L202
 3081              	.L197:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3082              		.loc 1 2341 0 discriminator 2
ARM GAS  /tmp/ccwgKUSV.s 			page 120


 3083 0076 874A     		ldr	r2, .L258+12
 3084 0078 9342     		cmp	r3, r2
 3085 007a 18D1     		bne	.L204
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3086              		.loc 1 2341 0 discriminator 8
 3087 007c 02F5E632 		add	r2, r2, #117760
 3088 0080 D2F88820 		ldr	r2, [r2, #136]
 3089 0084 02F00C02 		and	r2, r2, #12
 3090 0088 0C2A     		cmp	r2, #12
 3091 008a 0ED8     		bhi	.L205
 3092 008c DFE802F0 		tbb	[pc, r2]
 3093              	.L207:
 3094 0090 07       		.byte	(.L206-.L207)/2
 3095 0091 0D       		.byte	(.L205-.L207)/2
 3096 0092 0D       		.byte	(.L205-.L207)/2
 3097 0093 0D       		.byte	(.L205-.L207)/2
 3098 0094 09       		.byte	(.L208-.L207)/2
 3099 0095 0D       		.byte	(.L205-.L207)/2
 3100 0096 0D       		.byte	(.L205-.L207)/2
 3101 0097 0D       		.byte	(.L205-.L207)/2
 3102 0098 2F       		.byte	(.L245-.L207)/2
 3103 0099 0D       		.byte	(.L205-.L207)/2
 3104 009a 0D       		.byte	(.L205-.L207)/2
 3105 009b 0D       		.byte	(.L205-.L207)/2
 3106 009c 0B       		.byte	(.L209-.L207)/2
 3107 009d 00       		.p2align 1
 3108              	.L206:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3109              		.loc 1 2341 0
 3110 009e 0025     		movs	r5, #0
 3111 00a0 2AE0     		b	.L202
 3112              	.L208:
 3113              	.LVL260:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3114              		.loc 1 2341 0 discriminator 12
 3115 00a2 0425     		movs	r5, #4
 3116 00a4 28E0     		b	.L202
 3117              	.LVL261:
 3118              	.L209:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3119              		.loc 1 2341 0 discriminator 14
 3120 00a6 0825     		movs	r5, #8
 3121 00a8 26E0     		b	.L202
 3122              	.LVL262:
 3123              	.L205:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3124              		.loc 1 2341 0 discriminator 10
 3125 00aa 1025     		movs	r5, #16
 3126 00ac 24E0     		b	.L202
 3127              	.L204:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3128              		.loc 1 2341 0 discriminator 9
 3129 00ae 774A     		ldr	r2, .L258+4
 3130 00b0 9342     		cmp	r3, r2
 3131 00b2 1ED1     		bne	.L246
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3132              		.loc 1 2341 0 discriminator 15
ARM GAS  /tmp/ccwgKUSV.s 			page 121


 3133 00b4 02F5C832 		add	r2, r2, #102400
 3134 00b8 D2F88820 		ldr	r2, [r2, #136]
 3135 00bc 02F44062 		and	r2, r2, #3072
 3136 00c0 B2F5806F 		cmp	r2, #1024
 3137 00c4 0BD0     		beq	.L211
 3138 00c6 01D8     		bhi	.L212
 3139 00c8 3AB1     		cbz	r2, .L213
 3140 00ca 0CE0     		b	.L210
 3141              	.L212:
 3142 00cc B2F5006F 		cmp	r2, #2048
 3143 00d0 11D0     		beq	.L247
 3144 00d2 B2F5406F 		cmp	r2, #3072
 3145 00d6 04D0     		beq	.L214
 3146 00d8 05E0     		b	.L210
 3147              	.L213:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3148              		.loc 1 2341 0
 3149 00da 0025     		movs	r5, #0
 3150 00dc 0CE0     		b	.L202
 3151              	.L211:
 3152              	.LVL263:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3153              		.loc 1 2341 0 discriminator 18
 3154 00de 0425     		movs	r5, #4
 3155 00e0 0AE0     		b	.L202
 3156              	.LVL264:
 3157              	.L214:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3158              		.loc 1 2341 0 discriminator 20
 3159 00e2 0825     		movs	r5, #8
 3160 00e4 08E0     		b	.L202
 3161              	.LVL265:
 3162              	.L210:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3163              		.loc 1 2341 0 discriminator 16
 3164 00e6 1025     		movs	r5, #16
 3165 00e8 06E0     		b	.L202
 3166              	.L244:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3167              		.loc 1 2341 0
 3168 00ea 0225     		movs	r5, #2
 3169 00ec 04E0     		b	.L202
 3170              	.L245:
 3171 00ee 0225     		movs	r5, #2
 3172 00f0 02E0     		b	.L202
 3173              	.L246:
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3174              		.loc 1 2275 0 is_stmt 1
 3175 00f2 1025     		movs	r5, #16
 3176 00f4 00E0     		b	.L202
 3177              	.L247:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3178              		.loc 1 2341 0
 3179 00f6 0225     		movs	r5, #2
 3180              	.LVL266:
 3181              	.L202:
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccwgKUSV.s 			page 122


 3182              		.loc 1 2344 0
 3183 00f8 644A     		ldr	r2, .L258+4
 3184 00fa 9342     		cmp	r3, r2
 3185 00fc 72D1     		bne	.L215
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3186              		.loc 1 2347 0
 3187 00fe 082D     		cmp	r5, #8
 3188 0100 11D8     		bhi	.L216
 3189 0102 DFE805F0 		tbb	[pc, r5]
 3190              	.L218:
 3191 0106 08       		.byte	(.L217-.L218)/2
 3192 0107 10       		.byte	(.L216-.L218)/2
 3193 0108 05       		.byte	(.L219-.L218)/2
 3194 0109 10       		.byte	(.L216-.L218)/2
 3195 010a 0C       		.byte	(.L220-.L218)/2
 3196 010b 10       		.byte	(.L216-.L218)/2
 3197 010c 10       		.byte	(.L216-.L218)/2
 3198 010d 10       		.byte	(.L216-.L218)/2
 3199 010e 13       		.byte	(.L248-.L218)/2
 3200 010f 00       		.p2align 1
 3201              	.L219:
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3202              		.loc 1 2360 0
 3203 0110 6148     		ldr	r0, .L258+16
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3204              		.loc 1 2278 0
 3205 0112 0026     		movs	r6, #0
 3206 0114 0DE0     		b	.L221
 3207              	.L217:
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3208              		.loc 1 2353 0
 3209 0116 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3210              	.LVL267:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3211              		.loc 1 2278 0
 3212 011a 0026     		movs	r6, #0
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 3213              		.loc 1 2355 0
 3214 011c 09E0     		b	.L221
 3215              	.LVL268:
 3216              	.L220:
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3217              		.loc 1 2367 0
 3218 011e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3219              	.LVL269:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3220              		.loc 1 2278 0
 3221 0122 0026     		movs	r6, #0
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
 3222              		.loc 1 2369 0
 3223 0124 05E0     		b	.L221
 3224              	.LVL270:
 3225              	.L216:
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3226              		.loc 1 2279 0
 3227 0126 0020     		movs	r0, #0
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
ARM GAS  /tmp/ccwgKUSV.s 			page 123


 3228              		.loc 1 2379 0
 3229 0128 0126     		movs	r6, #1
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3230              		.loc 1 2380 0
 3231 012a 02E0     		b	.L221
 3232              	.LVL271:
 3233              	.L248:
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3234              		.loc 1 2374 0
 3235 012c 4FF40040 		mov	r0, #32768
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3236              		.loc 1 2278 0
 3237 0130 0026     		movs	r6, #0
 3238              	.LVL272:
 3239              	.L221:
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3240              		.loc 1 2384 0
 3241 0132 0028     		cmp	r0, #0
 3242 0134 00F00581 		beq	.L222
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) ))
 3243              		.loc 1 2387 0
 3244 0138 6268     		ldr	r2, [r4, #4]
 3245 013a 02EB4203 		add	r3, r2, r2, lsl #1
 3246 013e 8342     		cmp	r3, r0
 3247 0140 00F2F680 		bhi	.L249
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) ))
 3248              		.loc 1 2387 0 is_stmt 0 discriminator 1
 3249 0144 B0EB023F 		cmp	r0, r2, lsl #12
 3250 0148 00F2F480 		bhi	.L250
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3251              		.loc 1 2394 0 is_stmt 1
 3252 014c 082D     		cmp	r5, #8
 3253 014e 3ED8     		bhi	.L251
 3254 0150 DFE805F0 		tbb	[pc, r5]
 3255              	.L225:
 3256 0154 05       		.byte	(.L224-.L225)/2
 3257 0155 3D       		.byte	(.L251-.L225)/2
 3258 0156 17       		.byte	(.L226-.L225)/2
 3259 0157 3D       		.byte	(.L251-.L225)/2
 3260 0158 21       		.byte	(.L227-.L225)/2
 3261 0159 3D       		.byte	(.L251-.L225)/2
 3262 015a 3D       		.byte	(.L251-.L225)/2
 3263 015b 3D       		.byte	(.L251-.L225)/2
 3264 015c 33       		.byte	(.L228-.L225)/2
 3265 015d 00       		.p2align 1
 3266              	.L224:
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3267              		.loc 1 2400 0
 3268 015e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3269              	.LVL273:
 3270 0162 0023     		movs	r3, #0
 3271 0164 4FEA1069 		lsr	r9, r0, #24
 3272 0168 4FEA0028 		lsl	r8, r0, #8
 3273 016c 6268     		ldr	r2, [r4, #4]
 3274 016e 5008     		lsrs	r0, r2, #1
 3275 0170 18EB000A 		adds	r10, r8, r0
 3276 0174 49F1000B 		adc	fp, r9, #0
ARM GAS  /tmp/ccwgKUSV.s 			page 124


 3277 0178 5046     		mov	r0, r10
 3278 017a 5946     		mov	r1, fp
 3279 017c FFF7FEFF 		bl	__aeabi_uldivmod
 3280              	.LVL274:
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_HSI:
 3281              		.loc 1 2402 0
 3282 0180 27E0     		b	.L223
 3283              	.LVL275:
 3284              	.L226:
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3285              		.loc 1 2407 0
 3286 0182 5308     		lsrs	r3, r2, #1
 3287 0184 4548     		ldr	r0, .L258+20
 3288              	.LVL276:
 3289 0186 0021     		movs	r1, #0
 3290 0188 C018     		adds	r0, r0, r3
 3291 018a 41F10001 		adc	r1, r1, #0
 3292 018e 0023     		movs	r3, #0
 3293 0190 FFF7FEFF 		bl	__aeabi_uldivmod
 3294              	.LVL277:
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_SYSCLK:
 3295              		.loc 1 2409 0
 3296 0194 1DE0     		b	.L223
 3297              	.LVL278:
 3298              	.L227:
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3299              		.loc 1 2414 0
 3300 0196 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3301              	.LVL279:
 3302 019a 0023     		movs	r3, #0
 3303 019c 4FEA1069 		lsr	r9, r0, #24
 3304 01a0 4FEA0028 		lsl	r8, r0, #8
 3305 01a4 6268     		ldr	r2, [r4, #4]
 3306 01a6 5008     		lsrs	r0, r2, #1
 3307 01a8 18EB000A 		adds	r10, r8, r0
 3308 01ac 49F1000B 		adc	fp, r9, #0
 3309 01b0 5046     		mov	r0, r10
 3310 01b2 5946     		mov	r1, fp
 3311 01b4 FFF7FEFF 		bl	__aeabi_uldivmod
 3312              	.LVL280:
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_LSE:
 3313              		.loc 1 2416 0
 3314 01b8 0BE0     		b	.L223
 3315              	.LVL281:
 3316              	.L228:
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3317              		.loc 1 2421 0
 3318 01ba 5008     		lsrs	r0, r2, #1
 3319              	.LVL282:
 3320 01bc 0021     		movs	r1, #0
 3321 01be 10F50000 		adds	r0, r0, #8388608
 3322 01c2 41F10001 		adc	r1, r1, #0
 3323 01c6 0023     		movs	r3, #0
 3324 01c8 FFF7FEFF 		bl	__aeabi_uldivmod
 3325              	.LVL283:
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_UNDEFINED:
 3326              		.loc 1 2423 0
ARM GAS  /tmp/ccwgKUSV.s 			page 125


 3327 01cc 01E0     		b	.L223
 3328              	.LVL284:
 3329              	.L251:
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           break;
 3330              		.loc 1 2426 0
 3331 01ce 0126     		movs	r6, #1
 3332              	.LVL285:
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3333              		.loc 1 2277 0
 3334 01d0 0020     		movs	r0, #0
 3335              	.LVL286:
 3336              	.L223:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3337              		.loc 1 2431 0
 3338 01d2 A0F54072 		sub	r2, r0, #768
 3339 01d6 324B     		ldr	r3, .L258+24
 3340 01d8 9A42     		cmp	r2, r3
 3341 01da 00F2AD80 		bhi	.L252
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 3342              		.loc 1 2433 0
 3343 01de 2368     		ldr	r3, [r4]
 3344 01e0 D860     		str	r0, [r3, #12]
 3345 01e2 AEE0     		b	.L222
 3346              	.LVL287:
 3347              	.L215:
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3348              		.loc 1 2443 0
 3349 01e4 E369     		ldr	r3, [r4, #28]
 3350 01e6 B3F5004F 		cmp	r3, #32768
 3351 01ea 5BD1     		bne	.L229
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3352              		.loc 1 2445 0
 3353 01ec 082D     		cmp	r5, #8
 3354 01ee 3BD8     		bhi	.L253
 3355 01f0 DFE805F0 		tbb	[pc, r5]
 3356              	.L232:
 3357 01f4 05       		.byte	(.L231-.L232)/2
 3358 01f5 10       		.byte	(.L233-.L232)/2
 3359 01f6 1B       		.byte	(.L234-.L232)/2
 3360 01f7 3A       		.byte	(.L253-.L232)/2
 3361 01f8 26       		.byte	(.L235-.L232)/2
 3362 01f9 3A       		.byte	(.L253-.L232)/2
 3363 01fa 3A       		.byte	(.L253-.L232)/2
 3364 01fb 3A       		.byte	(.L253-.L232)/2
 3365 01fc 31       		.byte	(.L236-.L232)/2
 3366 01fd 00       		.p2align 1
 3367              	.L231:
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3368              		.loc 1 2451 0
 3369 01fe FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3370              	.LVL288:
 3371 0202 6368     		ldr	r3, [r4, #4]
 3372 0204 5A08     		lsrs	r2, r3, #1
 3373 0206 02EB4000 		add	r0, r2, r0, lsl #1
 3374 020a B0FBF3F3 		udiv	r3, r0, r3
 3375 020e 9BB2     		uxth	r3, r3
 3376              	.LVL289:
ARM GAS  /tmp/ccwgKUSV.s 			page 126


2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3377              		.loc 1 2278 0
 3378 0210 0026     		movs	r6, #0
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
 3379              		.loc 1 2453 0
 3380 0212 2BE0     		b	.L230
 3381              	.LVL290:
 3382              	.L233:
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3383              		.loc 1 2458 0
 3384 0214 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3385              	.LVL291:
 3386 0218 6368     		ldr	r3, [r4, #4]
 3387 021a 5A08     		lsrs	r2, r3, #1
 3388 021c 02EB4000 		add	r0, r2, r0, lsl #1
 3389 0220 B0FBF3F3 		udiv	r3, r0, r3
 3390 0224 9BB2     		uxth	r3, r3
 3391              	.LVL292:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3392              		.loc 1 2278 0
 3393 0226 0026     		movs	r6, #0
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 3394              		.loc 1 2460 0
 3395 0228 20E0     		b	.L230
 3396              	.LVL293:
 3397              	.L234:
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3398              		.loc 1 2465 0
 3399 022a 6168     		ldr	r1, [r4, #4]
 3400 022c 4A08     		lsrs	r2, r1, #1
 3401 022e 02F1F473 		add	r3, r2, #31981568
 3402 0232 03F59043 		add	r3, r3, #18432
 3403 0236 B3FBF1F3 		udiv	r3, r3, r1
 3404 023a 9BB2     		uxth	r3, r3
 3405              	.LVL294:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3406              		.loc 1 2278 0
 3407 023c 0026     		movs	r6, #0
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
 3408              		.loc 1 2467 0
 3409 023e 15E0     		b	.L230
 3410              	.LVL295:
 3411              	.L235:
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3412              		.loc 1 2472 0
 3413 0240 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3414              	.LVL296:
 3415 0244 6368     		ldr	r3, [r4, #4]
 3416 0246 5A08     		lsrs	r2, r3, #1
 3417 0248 02EB4000 		add	r0, r2, r0, lsl #1
 3418 024c B0FBF3F3 		udiv	r3, r0, r3
 3419 0250 9BB2     		uxth	r3, r3
 3420              	.LVL297:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3421              		.loc 1 2278 0
 3422 0252 0026     		movs	r6, #0
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
ARM GAS  /tmp/ccwgKUSV.s 			page 127


 3423              		.loc 1 2474 0
 3424 0254 0AE0     		b	.L230
 3425              	.LVL298:
 3426              	.L236:
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3427              		.loc 1 2479 0
 3428 0256 6268     		ldr	r2, [r4, #4]
 3429 0258 5308     		lsrs	r3, r2, #1
 3430 025a 03F58033 		add	r3, r3, #65536
 3431 025e B3FBF2F3 		udiv	r3, r3, r2
 3432 0262 9BB2     		uxth	r3, r3
 3433              	.LVL299:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3434              		.loc 1 2278 0
 3435 0264 0026     		movs	r6, #0
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
 3436              		.loc 1 2481 0
 3437 0266 01E0     		b	.L230
 3438              	.LVL300:
 3439              	.L253:
2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 3440              		.loc 1 2484 0
 3441 0268 0126     		movs	r6, #1
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3442              		.loc 1 2277 0
 3443 026a 0023     		movs	r3, #0
 3444              	.LVL301:
 3445              	.L230:
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3446              		.loc 1 2489 0
 3447 026c A3F11001 		sub	r1, r3, #16
 3448 0270 4FF6EF72 		movw	r2, #65519
 3449 0274 9142     		cmp	r1, r2
 3450 0276 61D8     		bhi	.L254
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 3451              		.loc 1 2491 0
 3452 0278 23F00F02 		bic	r2, r3, #15
 3453              	.LVL302:
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 3454              		.loc 1 2492 0
 3455 027c C3F34203 		ubfx	r3, r3, #1, #3
 3456              	.LVL303:
 3457 0280 1343     		orrs	r3, r3, r2
 3458              	.LVL304:
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3459              		.loc 1 2493 0
 3460 0282 2268     		ldr	r2, [r4]
 3461 0284 D360     		str	r3, [r2, #12]
 3462 0286 5CE0     		b	.L222
 3463              	.L259:
 3464              		.align	2
 3465              	.L258:
 3466 0288 F369FFEF 		.word	-268473869
 3467 028c 00800040 		.word	1073774592
 3468 0290 00380140 		.word	1073821696
 3469 0294 00440040 		.word	1073759232
 3470 0298 0024F400 		.word	16000000
ARM GAS  /tmp/ccwgKUSV.s 			page 128


 3471 029c 000024F4 		.word	-198967296
 3472 02a0 FFFC0F00 		.word	1047807
 3473              	.LVL305:
 3474              	.L229:
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3475              		.loc 1 2502 0
 3476 02a4 082D     		cmp	r5, #8
 3477 02a6 38D8     		bhi	.L255
 3478 02a8 DFE805F0 		tbb	[pc, r5]
 3479              	.L239:
 3480 02ac 05       		.byte	(.L238-.L239)/2
 3481 02ad 0F       		.byte	(.L240-.L239)/2
 3482 02ae 19       		.byte	(.L241-.L239)/2
 3483 02af 37       		.byte	(.L255-.L239)/2
 3484 02b0 24       		.byte	(.L242-.L239)/2
 3485 02b1 37       		.byte	(.L255-.L239)/2
 3486 02b2 37       		.byte	(.L255-.L239)/2
 3487 02b3 37       		.byte	(.L255-.L239)/2
 3488 02b4 2E       		.byte	(.L243-.L239)/2
 3489 02b5 00       		.p2align 1
 3490              	.L238:
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3491              		.loc 1 2508 0
 3492 02b6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3493              	.LVL306:
 3494 02ba 6368     		ldr	r3, [r4, #4]
 3495 02bc 00EB5300 		add	r0, r0, r3, lsr #1
 3496 02c0 B0FBF3F0 		udiv	r0, r0, r3
 3497 02c4 80B2     		uxth	r0, r0
 3498              	.LVL307:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3499              		.loc 1 2278 0
 3500 02c6 0026     		movs	r6, #0
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
 3501              		.loc 1 2510 0
 3502 02c8 29E0     		b	.L237
 3503              	.LVL308:
 3504              	.L240:
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3505              		.loc 1 2515 0
 3506 02ca FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3507              	.LVL309:
 3508 02ce 6368     		ldr	r3, [r4, #4]
 3509 02d0 00EB5300 		add	r0, r0, r3, lsr #1
 3510 02d4 B0FBF3F0 		udiv	r0, r0, r3
 3511 02d8 80B2     		uxth	r0, r0
 3512              	.LVL310:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3513              		.loc 1 2278 0
 3514 02da 0026     		movs	r6, #0
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 3515              		.loc 1 2517 0
 3516 02dc 1FE0     		b	.L237
 3517              	.LVL311:
 3518              	.L241:
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3519              		.loc 1 2522 0
ARM GAS  /tmp/ccwgKUSV.s 			page 129


 3520 02de 6068     		ldr	r0, [r4, #4]
 3521 02e0 4208     		lsrs	r2, r0, #1
 3522 02e2 02F57403 		add	r3, r2, #15990784
 3523 02e6 03F51053 		add	r3, r3, #9216
 3524 02ea B3FBF0F0 		udiv	r0, r3, r0
 3525 02ee 80B2     		uxth	r0, r0
 3526              	.LVL312:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3527              		.loc 1 2278 0
 3528 02f0 0026     		movs	r6, #0
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
 3529              		.loc 1 2524 0
 3530 02f2 14E0     		b	.L237
 3531              	.LVL313:
 3532              	.L242:
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3533              		.loc 1 2529 0
 3534 02f4 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3535              	.LVL314:
 3536 02f8 6368     		ldr	r3, [r4, #4]
 3537 02fa 00EB5300 		add	r0, r0, r3, lsr #1
 3538 02fe B0FBF3F0 		udiv	r0, r0, r3
 3539 0302 80B2     		uxth	r0, r0
 3540              	.LVL315:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3541              		.loc 1 2278 0
 3542 0304 0026     		movs	r6, #0
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
 3543              		.loc 1 2531 0
 3544 0306 0AE0     		b	.L237
 3545              	.LVL316:
 3546              	.L243:
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3547              		.loc 1 2536 0
 3548 0308 6068     		ldr	r0, [r4, #4]
 3549 030a 4308     		lsrs	r3, r0, #1
 3550 030c 03F50043 		add	r3, r3, #32768
 3551 0310 B3FBF0F0 		udiv	r0, r3, r0
 3552 0314 80B2     		uxth	r0, r0
 3553              	.LVL317:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3554              		.loc 1 2278 0
 3555 0316 0026     		movs	r6, #0
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
 3556              		.loc 1 2538 0
 3557 0318 01E0     		b	.L237
 3558              	.LVL318:
 3559              	.L255:
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 3560              		.loc 1 2541 0
 3561 031a 0126     		movs	r6, #1
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3562              		.loc 1 2277 0
 3563 031c 0020     		movs	r0, #0
 3564              	.LVL319:
 3565              	.L237:
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccwgKUSV.s 			page 130


 3566              		.loc 1 2546 0
 3567 031e A0F11002 		sub	r2, r0, #16
 3568 0322 4FF6EF73 		movw	r3, #65519
 3569 0326 9A42     		cmp	r2, r3
 3570 0328 0AD8     		bhi	.L256
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3571              		.loc 1 2548 0
 3572 032a 2368     		ldr	r3, [r4]
 3573 032c D860     		str	r0, [r3, #12]
 3574 032e 08E0     		b	.L222
 3575              	.LVL320:
 3576              	.L249:
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 3577              		.loc 1 2390 0
 3578 0330 0126     		movs	r6, #1
 3579              	.LVL321:
 3580 0332 06E0     		b	.L222
 3581              	.LVL322:
 3582              	.L250:
 3583 0334 0126     		movs	r6, #1
 3584              	.LVL323:
 3585 0336 04E0     		b	.L222
 3586              	.LVL324:
 3587              	.L252:
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 3588              		.loc 1 2437 0
 3589 0338 0126     		movs	r6, #1
 3590              	.LVL325:
 3591 033a 02E0     		b	.L222
 3592              	.LVL326:
 3593              	.L254:
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3594              		.loc 1 2497 0
 3595 033c 0126     		movs	r6, #1
 3596              	.LVL327:
 3597 033e 00E0     		b	.L222
 3598              	.LVL328:
 3599              	.L256:
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3600              		.loc 1 2552 0
 3601 0340 0126     		movs	r6, #1
 3602              	.LVL329:
 3603              	.L222:
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 3604              		.loc 1 2563 0
 3605 0342 0023     		movs	r3, #0
 3606 0344 2366     		str	r3, [r4, #96]
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 3607              		.loc 1 2564 0
 3608 0346 6366     		str	r3, [r4, #100]
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3609              		.loc 1 2567 0
 3610 0348 3046     		mov	r0, r6
 3611 034a BDE8708F 		pop	{r4, r5, r6, r8, r9, r10, fp, pc}
 3612              		.cfi_endproc
 3613              	.LFE164:
 3615 034e 00BF     		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
ARM GAS  /tmp/ccwgKUSV.s 			page 131


 3616              		.align	2
 3617              		.global	UART_AdvFeatureConfig
 3618              		.thumb
 3619              		.thumb_func
 3621              	UART_AdvFeatureConfig:
 3622              	.LFB165:
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3623              		.loc 1 2575 0
 3624              		.cfi_startproc
 3625              		@ args = 0, pretend = 0, frame = 0
 3626              		@ frame_needed = 0, uses_anonymous_args = 0
 3627              		@ link register save eliminated.
 3628              	.LVL330:
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3629              		.loc 1 2580 0
 3630 0000 436A     		ldr	r3, [r0, #36]
 3631 0002 13F0010F 		tst	r3, #1
 3632 0006 06D0     		beq	.L261
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3633              		.loc 1 2583 0
 3634 0008 0168     		ldr	r1, [r0]
 3635 000a 4B68     		ldr	r3, [r1, #4]
 3636 000c 23F40032 		bic	r2, r3, #131072
 3637 0010 836A     		ldr	r3, [r0, #40]
 3638 0012 1343     		orrs	r3, r3, r2
 3639 0014 4B60     		str	r3, [r1, #4]
 3640              	.L261:
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3641              		.loc 1 2587 0
 3642 0016 436A     		ldr	r3, [r0, #36]
 3643 0018 13F0020F 		tst	r3, #2
 3644 001c 06D0     		beq	.L262
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3645              		.loc 1 2590 0
 3646 001e 0168     		ldr	r1, [r0]
 3647 0020 4B68     		ldr	r3, [r1, #4]
 3648 0022 23F48032 		bic	r2, r3, #65536
 3649 0026 C36A     		ldr	r3, [r0, #44]
 3650 0028 1343     		orrs	r3, r3, r2
 3651 002a 4B60     		str	r3, [r1, #4]
 3652              	.L262:
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3653              		.loc 1 2594 0
 3654 002c 436A     		ldr	r3, [r0, #36]
 3655 002e 13F0040F 		tst	r3, #4
 3656 0032 06D0     		beq	.L263
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3657              		.loc 1 2597 0
 3658 0034 0168     		ldr	r1, [r0]
 3659 0036 4B68     		ldr	r3, [r1, #4]
 3660 0038 23F48022 		bic	r2, r3, #262144
 3661 003c 036B     		ldr	r3, [r0, #48]
 3662 003e 1343     		orrs	r3, r3, r2
 3663 0040 4B60     		str	r3, [r1, #4]
 3664              	.L263:
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3665              		.loc 1 2601 0
ARM GAS  /tmp/ccwgKUSV.s 			page 132


 3666 0042 436A     		ldr	r3, [r0, #36]
 3667 0044 13F0080F 		tst	r3, #8
 3668 0048 06D0     		beq	.L264
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3669              		.loc 1 2604 0
 3670 004a 0168     		ldr	r1, [r0]
 3671 004c 4B68     		ldr	r3, [r1, #4]
 3672 004e 23F40042 		bic	r2, r3, #32768
 3673 0052 436B     		ldr	r3, [r0, #52]
 3674 0054 1343     		orrs	r3, r3, r2
 3675 0056 4B60     		str	r3, [r1, #4]
 3676              	.L264:
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3677              		.loc 1 2608 0
 3678 0058 436A     		ldr	r3, [r0, #36]
 3679 005a 13F0100F 		tst	r3, #16
 3680 005e 06D0     		beq	.L265
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3681              		.loc 1 2611 0
 3682 0060 0168     		ldr	r1, [r0]
 3683 0062 8B68     		ldr	r3, [r1, #8]
 3684 0064 23F48052 		bic	r2, r3, #4096
 3685 0068 836B     		ldr	r3, [r0, #56]
 3686 006a 1343     		orrs	r3, r3, r2
 3687 006c 8B60     		str	r3, [r1, #8]
 3688              	.L265:
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3689              		.loc 1 2615 0
 3690 006e 436A     		ldr	r3, [r0, #36]
 3691 0070 13F0200F 		tst	r3, #32
 3692 0074 06D0     		beq	.L266
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3693              		.loc 1 2618 0
 3694 0076 0168     		ldr	r1, [r0]
 3695 0078 8B68     		ldr	r3, [r1, #8]
 3696 007a 23F40052 		bic	r2, r3, #8192
 3697 007e C36B     		ldr	r3, [r0, #60]
 3698 0080 1343     		orrs	r3, r3, r2
 3699 0082 8B60     		str	r3, [r1, #8]
 3700              	.L266:
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3701              		.loc 1 2622 0
 3702 0084 436A     		ldr	r3, [r0, #36]
 3703 0086 13F0400F 		tst	r3, #64
 3704 008a 11D0     		beq	.L267
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 3705              		.loc 1 2626 0
 3706 008c 0168     		ldr	r1, [r0]
 3707 008e 4B68     		ldr	r3, [r1, #4]
 3708 0090 23F48012 		bic	r2, r3, #1048576
 3709 0094 036C     		ldr	r3, [r0, #64]
 3710 0096 1343     		orrs	r3, r3, r2
 3711 0098 4B60     		str	r3, [r1, #4]
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3712              		.loc 1 2628 0
 3713 009a 036C     		ldr	r3, [r0, #64]
 3714 009c B3F5801F 		cmp	r3, #1048576
ARM GAS  /tmp/ccwgKUSV.s 			page 133


 3715 00a0 06D1     		bne	.L267
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3716              		.loc 1 2631 0
 3717 00a2 0168     		ldr	r1, [r0]
 3718 00a4 4B68     		ldr	r3, [r1, #4]
 3719 00a6 23F4C002 		bic	r2, r3, #6291456
 3720 00aa 436C     		ldr	r3, [r0, #68]
 3721 00ac 1343     		orrs	r3, r3, r2
 3722 00ae 4B60     		str	r3, [r1, #4]
 3723              	.L267:
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3724              		.loc 1 2636 0
 3725 00b0 436A     		ldr	r3, [r0, #36]
 3726 00b2 13F0800F 		tst	r3, #128
 3727 00b6 06D0     		beq	.L260
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3728              		.loc 1 2639 0
 3729 00b8 0168     		ldr	r1, [r0]
 3730 00ba 4B68     		ldr	r3, [r1, #4]
 3731 00bc 23F40022 		bic	r2, r3, #524288
 3732 00c0 836C     		ldr	r3, [r0, #72]
 3733 00c2 1343     		orrs	r3, r3, r2
 3734 00c4 4B60     		str	r3, [r1, #4]
 3735              	.L260:
 3736 00c6 7047     		bx	lr
 3737              		.cfi_endproc
 3738              	.LFE165:
 3740              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3741              		.align	2
 3742              		.global	UART_WaitOnFlagUntilTimeout
 3743              		.thumb
 3744              		.thumb_func
 3746              	UART_WaitOnFlagUntilTimeout:
 3747              	.LFB167:
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
 3748              		.loc 1 2699 0
 3749              		.cfi_startproc
 3750              		@ args = 4, pretend = 0, frame = 0
 3751              		@ frame_needed = 0, uses_anonymous_args = 0
 3752              	.LVL331:
 3753 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3754              	.LCFI28:
 3755              		.cfi_def_cfa_offset 24
 3756              		.cfi_offset 4, -24
 3757              		.cfi_offset 5, -20
 3758              		.cfi_offset 6, -16
 3759              		.cfi_offset 7, -12
 3760              		.cfi_offset 8, -8
 3761              		.cfi_offset 14, -4
 3762 0004 0646     		mov	r6, r0
 3763 0006 0C46     		mov	r4, r1
 3764 0008 1746     		mov	r7, r2
 3765 000a 9846     		mov	r8, r3
 3766 000c 069D     		ldr	r5, [sp, #24]
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3767              		.loc 1 2701 0
 3768 000e 1EE0     		b	.L271
ARM GAS  /tmp/ccwgKUSV.s 			page 134


 3769              	.LVL332:
 3770              	.L274:
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3771              		.loc 1 2704 0
 3772 0010 B5F1FF3F 		cmp	r5, #-1
 3773 0014 1BD0     		beq	.L271
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 3774              		.loc 1 2706 0
 3775 0016 2DB1     		cbz	r5, .L272
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 3776              		.loc 1 2706 0 is_stmt 0 discriminator 1
 3777 0018 FFF7FEFF 		bl	HAL_GetTick
 3778              	.LVL333:
 3779 001c C8EB0000 		rsb	r0, r8, r0
 3780 0020 A842     		cmp	r0, r5
 3781 0022 14D9     		bls	.L271
 3782              	.L272:
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3783              		.loc 1 2712 0 is_stmt 1
 3784 0024 3268     		ldr	r2, [r6]
 3785 0026 1368     		ldr	r3, [r2]
 3786 0028 23F4D073 		bic	r3, r3, #416
 3787 002c 1360     		str	r3, [r2]
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
 3788              		.loc 1 2714 0
 3789 002e 3268     		ldr	r2, [r6]
 3790 0030 9368     		ldr	r3, [r2, #8]
 3791 0032 23F00103 		bic	r3, r3, #1
 3792 0036 9360     		str	r3, [r2, #8]
2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 3793              		.loc 1 2716 0
 3794 0038 2023     		movs	r3, #32
 3795 003a 86F87130 		strb	r3, [r6, #113]
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
 3796              		.loc 1 2717 0
 3797 003e 86F87230 		strb	r3, [r6, #114]
2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         
 3798              		.loc 1 2720 0
 3799 0042 0023     		movs	r3, #0
 3800 0044 86F87030 		strb	r3, [r6, #112]
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 3801              		.loc 1 2722 0
 3802 0048 0320     		movs	r0, #3
 3803 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3804              	.LVL334:
 3805              	.L271:
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3806              		.loc 1 2701 0
 3807 004e 3368     		ldr	r3, [r6]
 3808 0050 DB69     		ldr	r3, [r3, #28]
 3809 0052 2340     		ands	r3, r3, r4
 3810 0054 A342     		cmp	r3, r4
 3811 0056 14BF     		ite	ne
 3812 0058 0023     		movne	r3, #0
 3813 005a 0123     		moveq	r3, #1
 3814 005c BB42     		cmp	r3, r7
 3815 005e D7D0     		beq	.L274
ARM GAS  /tmp/ccwgKUSV.s 			page 135


2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3816              		.loc 1 2726 0
 3817 0060 0020     		movs	r0, #0
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3818              		.loc 1 2727 0
 3819 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3820              		.cfi_endproc
 3821              	.LFE167:
 3823 0066 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 3824              		.align	2
 3825              		.global	HAL_UART_Transmit
 3826              		.thumb
 3827              		.thumb_func
 3829              	HAL_UART_Transmit:
 3830              	.LFB132:
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t* tmp;
 3831              		.loc 1 688 0
 3832              		.cfi_startproc
 3833              		@ args = 0, pretend = 0, frame = 0
 3834              		@ frame_needed = 0, uses_anonymous_args = 0
 3835              	.LVL335:
 3836 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3837              	.LCFI29:
 3838              		.cfi_def_cfa_offset 24
 3839              		.cfi_offset 4, -24
 3840              		.cfi_offset 5, -20
 3841              		.cfi_offset 6, -16
 3842              		.cfi_offset 7, -12
 3843              		.cfi_offset 8, -8
 3844              		.cfi_offset 14, -4
 3845 0004 82B0     		sub	sp, sp, #8
 3846              	.LCFI30:
 3847              		.cfi_def_cfa_offset 32
 3848 0006 0446     		mov	r4, r0
 3849 0008 1E46     		mov	r6, r3
 3850              	.LVL336:
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3851              		.loc 1 693 0
 3852 000a 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 3853              	.LVL337:
 3854 000e DBB2     		uxtb	r3, r3
 3855 0010 202B     		cmp	r3, #32
 3856 0012 4DD1     		bne	.L282
 3857 0014 0D46     		mov	r5, r1
 3858 0016 9046     		mov	r8, r2
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3859              		.loc 1 695 0
 3860 0018 0029     		cmp	r1, #0
 3861 001a 4BD0     		beq	.L283
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3862              		.loc 1 695 0 is_stmt 0 discriminator 1
 3863 001c 002A     		cmp	r2, #0
 3864 001e 4BD0     		beq	.L284
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 3865              		.loc 1 701 0 is_stmt 1
 3866 0020 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3867 0024 012B     		cmp	r3, #1
ARM GAS  /tmp/ccwgKUSV.s 			page 136


 3868 0026 49D0     		beq	.L285
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 3869              		.loc 1 701 0 is_stmt 0 discriminator 2
 3870 0028 0123     		movs	r3, #1
 3871 002a 80F87030 		strb	r3, [r0, #112]
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3872              		.loc 1 703 0 is_stmt 1 discriminator 2
 3873 002e 0023     		movs	r3, #0
 3874 0030 4367     		str	r3, [r0, #116]
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 3875              		.loc 1 704 0 discriminator 2
 3876 0032 2123     		movs	r3, #33
 3877 0034 80F87130 		strb	r3, [r0, #113]
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 3878              		.loc 1 707 0 discriminator 2
 3879 0038 FFF7FEFF 		bl	HAL_GetTick
 3880              	.LVL338:
 3881 003c 0746     		mov	r7, r0
 3882              	.LVL339:
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 3883              		.loc 1 709 0 discriminator 2
 3884 003e A4F85080 		strh	r8, [r4, #80]	@ movhi
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 3885              		.loc 1 710 0 discriminator 2
 3886 0042 A4F85280 		strh	r8, [r4, #82]	@ movhi
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3887              		.loc 1 712 0 discriminator 2
 3888 0046 1EE0     		b	.L278
 3889              	.LVL340:
 3890              	.L281:
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 3891              		.loc 1 714 0
 3892 0048 0096     		str	r6, [sp]
 3893 004a 2046     		mov	r0, r4
 3894 004c 8021     		movs	r1, #128
 3895 004e 0022     		movs	r2, #0
 3896 0050 3B46     		mov	r3, r7
 3897 0052 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3898              	.LVL341:
 3899 0056 98BB     		cbnz	r0, .L286
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 3900              		.loc 1 718 0
 3901 0058 A368     		ldr	r3, [r4, #8]
 3902 005a B3F5805F 		cmp	r3, #4096
 3903 005e 08D1     		bne	.L279
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 3904              		.loc 1 718 0 is_stmt 0 discriminator 1
 3905 0060 2369     		ldr	r3, [r4, #16]
 3906 0062 33B9     		cbnz	r3, .L279
 3907              	.LVL342:
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 3908              		.loc 1 721 0 is_stmt 1
 3909 0064 2268     		ldr	r2, [r4]
 3910 0066 35F8023B 		ldrh	r3, [r5], #2
 3911              	.LVL343:
 3912 006a C3F30803 		ubfx	r3, r3, #0, #9
 3913 006e 1385     		strh	r3, [r2, #40]	@ movhi
ARM GAS  /tmp/ccwgKUSV.s 			page 137


 3914              	.LVL344:
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 3915              		.loc 1 722 0
 3916 0070 03E0     		b	.L280
 3917              	.LVL345:
 3918              	.L279:
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 3919              		.loc 1 726 0
 3920 0072 2368     		ldr	r3, [r4]
 3921              	.LVL346:
 3922 0074 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 3923 0076 1A85     		strh	r2, [r3, #40]	@ movhi
 3924 0078 0135     		adds	r5, r5, #1
 3925              	.LVL347:
 3926              	.L280:
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3927              		.loc 1 728 0
 3928 007a B4F85230 		ldrh	r3, [r4, #82]
 3929 007e 013B     		subs	r3, r3, #1
 3930 0080 9BB2     		uxth	r3, r3
 3931 0082 A4F85230 		strh	r3, [r4, #82]	@ movhi
 3932              	.L278:
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3933              		.loc 1 712 0
 3934 0086 B4F85230 		ldrh	r3, [r4, #82]
 3935 008a 9BB2     		uxth	r3, r3
 3936 008c 002B     		cmp	r3, #0
 3937 008e DBD1     		bne	.L281
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3938              		.loc 1 731 0
 3939 0090 0096     		str	r6, [sp]
 3940 0092 2046     		mov	r0, r4
 3941 0094 4021     		movs	r1, #64
 3942 0096 0022     		movs	r2, #0
 3943 0098 3B46     		mov	r3, r7
 3944 009a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3945              	.LVL348:
 3946 009e 0346     		mov	r3, r0
 3947 00a0 80B9     		cbnz	r0, .L287
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 3948              		.loc 1 737 0
 3949 00a2 2022     		movs	r2, #32
 3950 00a4 84F87120 		strb	r2, [r4, #113]
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 3951              		.loc 1 740 0
 3952 00a8 0022     		movs	r2, #0
 3953 00aa 84F87020 		strb	r2, [r4, #112]
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3954              		.loc 1 742 0
 3955 00ae 0AE0     		b	.L277
 3956              	.LVL349:
 3957              	.L282:
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3958              		.loc 1 746 0
 3959 00b0 0223     		movs	r3, #2
 3960 00b2 08E0     		b	.L277
 3961              	.L283:
ARM GAS  /tmp/ccwgKUSV.s 			page 138


 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3962              		.loc 1 697 0
 3963 00b4 0123     		movs	r3, #1
 3964 00b6 06E0     		b	.L277
 3965              	.L284:
 3966 00b8 0123     		movs	r3, #1
 3967 00ba 04E0     		b	.L277
 3968              	.L285:
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 3969              		.loc 1 701 0
 3970 00bc 0223     		movs	r3, #2
 3971 00be 02E0     		b	.L277
 3972              	.LVL350:
 3973              	.L286:
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 3974              		.loc 1 716 0
 3975 00c0 0323     		movs	r3, #3
 3976 00c2 00E0     		b	.L277
 3977              	.L287:
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3978              		.loc 1 733 0
 3979 00c4 0323     		movs	r3, #3
 3980              	.LVL351:
 3981              	.L277:
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3982              		.loc 1 748 0
 3983 00c6 1846     		mov	r0, r3
 3984 00c8 02B0     		add	sp, sp, #8
 3985              	.LCFI31:
 3986              		.cfi_def_cfa_offset 24
 3987              		@ sp needed
 3988 00ca BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3989              		.cfi_endproc
 3990              	.LFE132:
 3992 00ce 00BF     		.section	.text.HAL_UART_Receive,"ax",%progbits
 3993              		.align	2
 3994              		.global	HAL_UART_Receive
 3995              		.thumb
 3996              		.thumb_func
 3998              	HAL_UART_Receive:
 3999              	.LFB133:
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t* tmp;
 4000              		.loc 1 763 0
 4001              		.cfi_startproc
 4002              		@ args = 0, pretend = 0, frame = 0
 4003              		@ frame_needed = 0, uses_anonymous_args = 0
 4004              	.LVL352:
 4005 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4006              	.LCFI32:
 4007              		.cfi_def_cfa_offset 24
 4008              		.cfi_offset 4, -24
 4009              		.cfi_offset 5, -20
 4010              		.cfi_offset 6, -16
 4011              		.cfi_offset 7, -12
 4012              		.cfi_offset 8, -8
 4013              		.cfi_offset 14, -4
 4014 0004 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccwgKUSV.s 			page 139


 4015              	.LCFI33:
 4016              		.cfi_def_cfa_offset 32
 4017 0006 0446     		mov	r4, r0
 4018 0008 1E46     		mov	r6, r3
 4019              	.LVL353:
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4020              		.loc 1 769 0
 4021 000a 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 4022              	.LVL354:
 4023 000e DBB2     		uxtb	r3, r3
 4024 0010 202B     		cmp	r3, #32
 4025 0012 6ED1     		bne	.L301
 4026 0014 0D46     		mov	r5, r1
 4027 0016 9046     		mov	r8, r2
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4028              		.loc 1 771 0
 4029 0018 0029     		cmp	r1, #0
 4030 001a 6CD0     		beq	.L302
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4031              		.loc 1 771 0 is_stmt 0 discriminator 1
 4032 001c 002A     		cmp	r2, #0
 4033 001e 6CD0     		beq	.L303
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4034              		.loc 1 777 0 is_stmt 1
 4035 0020 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4036 0024 012B     		cmp	r3, #1
 4037 0026 6AD0     		beq	.L304
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4038              		.loc 1 777 0 is_stmt 0 discriminator 2
 4039 0028 0123     		movs	r3, #1
 4040 002a 80F87030 		strb	r3, [r0, #112]
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4041              		.loc 1 779 0 is_stmt 1 discriminator 2
 4042 002e 0023     		movs	r3, #0
 4043 0030 4367     		str	r3, [r0, #116]
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4044              		.loc 1 780 0 discriminator 2
 4045 0032 2223     		movs	r3, #34
 4046 0034 80F87230 		strb	r3, [r0, #114]
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4047              		.loc 1 783 0 discriminator 2
 4048 0038 FFF7FEFF 		bl	HAL_GetTick
 4049              	.LVL355:
 4050 003c 0746     		mov	r7, r0
 4051              	.LVL356:
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 4052              		.loc 1 785 0 discriminator 2
 4053 003e A4F85880 		strh	r8, [r4, #88]	@ movhi
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4054              		.loc 1 786 0 discriminator 2
 4055 0042 A4F85A80 		strh	r8, [r4, #90]	@ movhi
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4056              		.loc 1 789 0 discriminator 2
 4057 0046 A368     		ldr	r3, [r4, #8]
 4058 0048 B3F5805F 		cmp	r3, #4096
 4059 004c 0AD1     		bne	.L291
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
ARM GAS  /tmp/ccwgKUSV.s 			page 140


 4060              		.loc 1 789 0 is_stmt 0 discriminator 1
 4061 004e 2369     		ldr	r3, [r4, #16]
 4062 0050 23B9     		cbnz	r3, .L292
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4063              		.loc 1 789 0 discriminator 3
 4064 0052 40F2FF13 		movw	r3, #511
 4065 0056 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4066 005a 1AE0     		b	.L293
 4067              	.L292:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4068              		.loc 1 789 0 discriminator 4
 4069 005c FF23     		movs	r3, #255
 4070 005e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4071 0062 16E0     		b	.L293
 4072              	.L291:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4073              		.loc 1 789 0 discriminator 2
 4074 0064 4BB9     		cbnz	r3, .L294
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4075              		.loc 1 789 0 discriminator 5
 4076 0066 2369     		ldr	r3, [r4, #16]
 4077 0068 1BB9     		cbnz	r3, .L295
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4078              		.loc 1 789 0 discriminator 7
 4079 006a FF23     		movs	r3, #255
 4080 006c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4081 0070 0FE0     		b	.L293
 4082              	.L295:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4083              		.loc 1 789 0 discriminator 8
 4084 0072 7F23     		movs	r3, #127
 4085 0074 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4086 0078 0BE0     		b	.L293
 4087              	.L294:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4088              		.loc 1 789 0 discriminator 6
 4089 007a B3F1805F 		cmp	r3, #268435456
 4090 007e 08D1     		bne	.L293
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4091              		.loc 1 789 0 discriminator 9
 4092 0080 2369     		ldr	r3, [r4, #16]
 4093 0082 1BB9     		cbnz	r3, .L296
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4094              		.loc 1 789 0 discriminator 10
 4095 0084 7F23     		movs	r3, #127
 4096 0086 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4097 008a 02E0     		b	.L293
 4098              	.L296:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4099              		.loc 1 789 0 discriminator 11
 4100 008c 3F23     		movs	r3, #63
 4101 008e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4102              	.L293:
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4103              		.loc 1 790 0 is_stmt 1
 4104 0092 B4F85C80 		ldrh	r8, [r4, #92]
 4105              	.LVL357:
ARM GAS  /tmp/ccwgKUSV.s 			page 141


 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4106              		.loc 1 793 0
 4107 0096 20E0     		b	.L297
 4108              	.LVL358:
 4109              	.L300:
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4110              		.loc 1 795 0
 4111 0098 0096     		str	r6, [sp]
 4112 009a 2046     		mov	r0, r4
 4113 009c 2021     		movs	r1, #32
 4114 009e 0022     		movs	r2, #0
 4115 00a0 3B46     		mov	r3, r7
 4116 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4117              	.LVL359:
 4118 00a6 60BB     		cbnz	r0, .L305
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4119              		.loc 1 799 0
 4120 00a8 A368     		ldr	r3, [r4, #8]
 4121 00aa B3F5805F 		cmp	r3, #4096
 4122 00ae 08D1     		bne	.L298
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4123              		.loc 1 799 0 is_stmt 0 discriminator 1
 4124 00b0 2369     		ldr	r3, [r4, #16]
 4125 00b2 33B9     		cbnz	r3, .L298
 4126              	.LVL360:
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData +=2U;
 4127              		.loc 1 802 0 is_stmt 1
 4128 00b4 2368     		ldr	r3, [r4]
 4129 00b6 9B8C     		ldrh	r3, [r3, #36]
 4130 00b8 08EA0303 		and	r3, r8, r3
 4131 00bc 25F8023B 		strh	r3, [r5], #2	@ movhi
 4132              	.LVL361:
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4133              		.loc 1 803 0
 4134 00c0 05E0     		b	.L299
 4135              	.LVL362:
 4136              	.L298:
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4137              		.loc 1 807 0
 4138 00c2 2368     		ldr	r3, [r4]
 4139 00c4 9B8C     		ldrh	r3, [r3, #36]
 4140 00c6 08EA0303 		and	r3, r8, r3
 4141 00ca 2B70     		strb	r3, [r5]
 4142 00cc 0135     		adds	r5, r5, #1
 4143              	.LVL363:
 4144              	.L299:
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4145              		.loc 1 809 0
 4146 00ce B4F85A30 		ldrh	r3, [r4, #90]
 4147 00d2 013B     		subs	r3, r3, #1
 4148 00d4 9BB2     		uxth	r3, r3
 4149 00d6 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 4150              	.L297:
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4151              		.loc 1 793 0
 4152 00da B4F85A30 		ldrh	r3, [r4, #90]
 4153 00de 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccwgKUSV.s 			page 142


 4154 00e0 002B     		cmp	r3, #0
 4155 00e2 D9D1     		bne	.L300
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4156              		.loc 1 813 0
 4157 00e4 2023     		movs	r3, #32
 4158 00e6 84F87230 		strb	r3, [r4, #114]
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4159              		.loc 1 816 0
 4160 00ea 0020     		movs	r0, #0
 4161 00ec 84F87000 		strb	r0, [r4, #112]
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4162              		.loc 1 818 0
 4163 00f0 08E0     		b	.L290
 4164              	.LVL364:
 4165              	.L301:
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4166              		.loc 1 822 0
 4167 00f2 0220     		movs	r0, #2
 4168              	.LVL365:
 4169 00f4 06E0     		b	.L290
 4170              	.LVL366:
 4171              	.L302:
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4172              		.loc 1 773 0
 4173 00f6 0120     		movs	r0, #1
 4174              	.LVL367:
 4175 00f8 04E0     		b	.L290
 4176              	.LVL368:
 4177              	.L303:
 4178 00fa 0120     		movs	r0, #1
 4179              	.LVL369:
 4180 00fc 02E0     		b	.L290
 4181              	.LVL370:
 4182              	.L304:
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4183              		.loc 1 777 0
 4184 00fe 0220     		movs	r0, #2
 4185              	.LVL371:
 4186 0100 00E0     		b	.L290
 4187              	.LVL372:
 4188              	.L305:
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4189              		.loc 1 797 0
 4190 0102 0320     		movs	r0, #3
 4191              	.LVL373:
 4192              	.L290:
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4193              		.loc 1 824 0
 4194 0104 02B0     		add	sp, sp, #8
 4195              	.LCFI34:
 4196              		.cfi_def_cfa_offset 24
 4197              		@ sp needed
 4198 0106 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4199              		.cfi_endproc
 4200              	.LFE133:
 4202 010a 00BF     		.section	.text.UART_CheckIdleState,"ax",%progbits
 4203              		.align	2
ARM GAS  /tmp/ccwgKUSV.s 			page 143


 4204              		.global	UART_CheckIdleState
 4205              		.thumb
 4206              		.thumb_func
 4208              	UART_CheckIdleState:
 4209              	.LFB166:
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 4210              		.loc 1 2649 0
 4211              		.cfi_startproc
 4212              		@ args = 0, pretend = 0, frame = 0
 4213              		@ frame_needed = 0, uses_anonymous_args = 0
 4214              	.LVL374:
 4215 0000 30B5     		push	{r4, r5, lr}
 4216              	.LCFI35:
 4217              		.cfi_def_cfa_offset 12
 4218              		.cfi_offset 4, -12
 4219              		.cfi_offset 5, -8
 4220              		.cfi_offset 14, -4
 4221 0002 83B0     		sub	sp, sp, #12
 4222              	.LCFI36:
 4223              		.cfi_def_cfa_offset 24
 4224 0004 0446     		mov	r4, r0
 4225              	.LVL375:
2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4226              		.loc 1 2653 0
 4227 0006 0023     		movs	r3, #0
 4228 0008 4367     		str	r3, [r0, #116]
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4229              		.loc 1 2656 0
 4230 000a FFF7FEFF 		bl	HAL_GetTick
 4231              	.LVL376:
 4232 000e 0546     		mov	r5, r0
 4233              	.LVL377:
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4234              		.loc 1 2659 0
 4235 0010 2368     		ldr	r3, [r4]
 4236 0012 1B68     		ldr	r3, [r3]
 4237 0014 13F0080F 		tst	r3, #8
 4238 0018 0AD0     		beq	.L308
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4239              		.loc 1 2662 0
 4240 001a 6FF07E43 		mvn	r3, #-33554432
 4241 001e 0093     		str	r3, [sp]
 4242 0020 2046     		mov	r0, r4
 4243              	.LVL378:
 4244 0022 4FF40011 		mov	r1, #2097152
 4245 0026 0022     		movs	r2, #0
 4246 0028 2B46     		mov	r3, r5
 4247 002a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4248              	.LVL379:
 4249 002e C0B9     		cbnz	r0, .L311
 4250              	.L308:
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4251              		.loc 1 2669 0
 4252 0030 2368     		ldr	r3, [r4]
 4253 0032 1B68     		ldr	r3, [r3]
 4254 0034 13F0040F 		tst	r3, #4
 4255 0038 0AD0     		beq	.L310
ARM GAS  /tmp/ccwgKUSV.s 			page 144


2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4256              		.loc 1 2672 0
 4257 003a 6FF07E43 		mvn	r3, #-33554432
 4258 003e 0093     		str	r3, [sp]
 4259 0040 2046     		mov	r0, r4
 4260 0042 4FF48001 		mov	r1, #4194304
 4261 0046 0022     		movs	r2, #0
 4262 0048 2B46     		mov	r3, r5
 4263 004a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4264              	.LVL380:
 4265 004e 50B9     		cbnz	r0, .L312
 4266              	.L310:
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 4267              		.loc 1 2680 0
 4268 0050 2023     		movs	r3, #32
 4269 0052 84F87130 		strb	r3, [r4, #113]
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4270              		.loc 1 2681 0
 4271 0056 84F87230 		strb	r3, [r4, #114]
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4272              		.loc 1 2684 0
 4273 005a 0020     		movs	r0, #0
 4274 005c 84F87000 		strb	r0, [r4, #112]
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4275              		.loc 1 2686 0
 4276 0060 02E0     		b	.L309
 4277              	.L311:
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4278              		.loc 1 2665 0
 4279 0062 0320     		movs	r0, #3
 4280 0064 00E0     		b	.L309
 4281              	.L312:
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4282              		.loc 1 2675 0
 4283 0066 0320     		movs	r0, #3
 4284              	.L309:
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4285              		.loc 1 2687 0
 4286 0068 03B0     		add	sp, sp, #12
 4287              	.LCFI37:
 4288              		.cfi_def_cfa_offset 12
 4289              		@ sp needed
 4290 006a 30BD     		pop	{r4, r5, pc}
 4291              		.cfi_endproc
 4292              	.LFE166:
 4294              		.section	.text.HAL_UART_Init,"ax",%progbits
 4295              		.align	2
 4296              		.global	HAL_UART_Init
 4297              		.thumb
 4298              		.thumb_func
 4300              	HAL_UART_Init:
 4301              	.LFB125:
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4302              		.loc 1 255 0
 4303              		.cfi_startproc
 4304              		@ args = 0, pretend = 0, frame = 0
 4305              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwgKUSV.s 			page 145


 4306              	.LVL381:
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4307              		.loc 1 257 0
 4308 0000 80B3     		cbz	r0, .L318
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4309              		.loc 1 255 0
 4310 0002 10B5     		push	{r4, lr}
 4311              	.LCFI38:
 4312              		.cfi_def_cfa_offset 8
 4313              		.cfi_offset 4, -8
 4314              		.cfi_offset 14, -4
 4315 0004 0446     		mov	r4, r0
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4316              		.loc 1 273 0
 4317 0006 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4318 000a 13F0FF0F 		tst	r3, #255
 4319 000e 04D1     		bne	.L316
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4320              		.loc 1 276 0
 4321 0010 0023     		movs	r3, #0
 4322 0012 80F87030 		strb	r3, [r0, #112]
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4323              		.loc 1 279 0
 4324 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 4325              	.LVL382:
 4326              	.L316:
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4327              		.loc 1 282 0
 4328 001a 2423     		movs	r3, #36
 4329 001c 84F87130 		strb	r3, [r4, #113]
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4330              		.loc 1 285 0
 4331 0020 2268     		ldr	r2, [r4]
 4332 0022 1368     		ldr	r3, [r2]
 4333 0024 23F00103 		bic	r3, r3, #1
 4334 0028 1360     		str	r3, [r2]
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4335              		.loc 1 288 0
 4336 002a 2046     		mov	r0, r4
 4337 002c FFF7FEFF 		bl	UART_SetConfig
 4338              	.LVL383:
 4339 0030 0128     		cmp	r0, #1
 4340 0032 19D0     		beq	.L315
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4341              		.loc 1 293 0
 4342 0034 636A     		ldr	r3, [r4, #36]
 4343 0036 13B1     		cbz	r3, .L317
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4344              		.loc 1 295 0
 4345 0038 2046     		mov	r0, r4
 4346 003a FFF7FEFF 		bl	UART_AdvFeatureConfig
 4347              	.LVL384:
 4348              	.L317:
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4349              		.loc 1 301 0
 4350 003e 2268     		ldr	r2, [r4]
 4351 0040 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccwgKUSV.s 			page 146


 4352 0042 23F49043 		bic	r3, r3, #18432
 4353 0046 5360     		str	r3, [r2, #4]
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4354              		.loc 1 302 0
 4355 0048 2268     		ldr	r2, [r4]
 4356 004a 9368     		ldr	r3, [r2, #8]
 4357 004c 23F02A03 		bic	r3, r3, #42
 4358 0050 9360     		str	r3, [r2, #8]
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4359              		.loc 1 305 0
 4360 0052 2268     		ldr	r2, [r4]
 4361 0054 1368     		ldr	r3, [r2]
 4362 0056 43F00103 		orr	r3, r3, #1
 4363 005a 1360     		str	r3, [r2]
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4364              		.loc 1 308 0
 4365 005c 2046     		mov	r0, r4
 4366 005e FFF7FEFF 		bl	UART_CheckIdleState
 4367              	.LVL385:
 4368 0062 10BD     		pop	{r4, pc}
 4369              	.LVL386:
 4370              	.L318:
 4371              	.LCFI39:
 4372              		.cfi_def_cfa_offset 0
 4373              		.cfi_restore 4
 4374              		.cfi_restore 14
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4375              		.loc 1 259 0
 4376 0064 0120     		movs	r0, #1
 4377              	.LVL387:
 4378 0066 7047     		bx	lr
 4379              	.LVL388:
 4380              	.L315:
 4381              	.LCFI40:
 4382              		.cfi_def_cfa_offset 8
 4383              		.cfi_offset 4, -8
 4384              		.cfi_offset 14, -4
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4385              		.loc 1 309 0
 4386 0068 10BD     		pop	{r4, pc}
 4387              		.cfi_endproc
 4388              	.LFE125:
 4390 006a 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 4391              		.align	2
 4392              		.global	HAL_HalfDuplex_Init
 4393              		.thumb
 4394              		.thumb_func
 4396              	HAL_HalfDuplex_Init:
 4397              	.LFB126:
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4398              		.loc 1 318 0
 4399              		.cfi_startproc
 4400              		@ args = 0, pretend = 0, frame = 0
 4401              		@ frame_needed = 0, uses_anonymous_args = 0
 4402              	.LVL389:
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4403              		.loc 1 320 0
ARM GAS  /tmp/ccwgKUSV.s 			page 147


 4404 0000 0028     		cmp	r0, #0
 4405 0002 35D0     		beq	.L325
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4406              		.loc 1 318 0
 4407 0004 10B5     		push	{r4, lr}
 4408              	.LCFI41:
 4409              		.cfi_def_cfa_offset 8
 4410              		.cfi_offset 4, -8
 4411              		.cfi_offset 14, -4
 4412 0006 0446     		mov	r4, r0
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4413              		.loc 1 328 0
 4414 0008 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4415 000c 13F0FF0F 		tst	r3, #255
 4416 0010 04D1     		bne	.L323
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4417              		.loc 1 331 0
 4418 0012 0023     		movs	r3, #0
 4419 0014 80F87030 		strb	r3, [r0, #112]
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4420              		.loc 1 334 0
 4421 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 4422              	.LVL390:
 4423              	.L323:
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4424              		.loc 1 337 0
 4425 001c 2423     		movs	r3, #36
 4426 001e 84F87130 		strb	r3, [r4, #113]
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4427              		.loc 1 340 0
 4428 0022 2268     		ldr	r2, [r4]
 4429 0024 1368     		ldr	r3, [r2]
 4430 0026 23F00103 		bic	r3, r3, #1
 4431 002a 1360     		str	r3, [r2]
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4432              		.loc 1 343 0
 4433 002c 2046     		mov	r0, r4
 4434 002e FFF7FEFF 		bl	UART_SetConfig
 4435              	.LVL391:
 4436 0032 0128     		cmp	r0, #1
 4437 0034 1ED0     		beq	.L322
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4438              		.loc 1 348 0
 4439 0036 636A     		ldr	r3, [r4, #36]
 4440 0038 13B1     		cbz	r3, .L324
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4441              		.loc 1 350 0
 4442 003a 2046     		mov	r0, r4
 4443 003c FFF7FEFF 		bl	UART_AdvFeatureConfig
 4444              	.LVL392:
 4445              	.L324:
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 4446              		.loc 1 356 0
 4447 0040 2268     		ldr	r2, [r4]
 4448 0042 5368     		ldr	r3, [r2, #4]
 4449 0044 23F49043 		bic	r3, r3, #18432
 4450 0048 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccwgKUSV.s 			page 148


 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4451              		.loc 1 357 0
 4452 004a 2268     		ldr	r2, [r4]
 4453 004c 9368     		ldr	r3, [r2, #8]
 4454 004e 23F02203 		bic	r3, r3, #34
 4455 0052 9360     		str	r3, [r2, #8]
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4456              		.loc 1 360 0
 4457 0054 2268     		ldr	r2, [r4]
 4458 0056 9368     		ldr	r3, [r2, #8]
 4459 0058 43F00803 		orr	r3, r3, #8
 4460 005c 9360     		str	r3, [r2, #8]
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4461              		.loc 1 363 0
 4462 005e 2268     		ldr	r2, [r4]
 4463 0060 1368     		ldr	r3, [r2]
 4464 0062 43F00103 		orr	r3, r3, #1
 4465 0066 1360     		str	r3, [r2]
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4466              		.loc 1 366 0
 4467 0068 2046     		mov	r0, r4
 4468 006a FFF7FEFF 		bl	UART_CheckIdleState
 4469              	.LVL393:
 4470 006e 10BD     		pop	{r4, pc}
 4471              	.LVL394:
 4472              	.L325:
 4473              	.LCFI42:
 4474              		.cfi_def_cfa_offset 0
 4475              		.cfi_restore 4
 4476              		.cfi_restore 14
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4477              		.loc 1 322 0
 4478 0070 0120     		movs	r0, #1
 4479              	.LVL395:
 4480 0072 7047     		bx	lr
 4481              	.LVL396:
 4482              	.L322:
 4483              	.LCFI43:
 4484              		.cfi_def_cfa_offset 8
 4485              		.cfi_offset 4, -8
 4486              		.cfi_offset 14, -4
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4487              		.loc 1 367 0
 4488 0074 10BD     		pop	{r4, pc}
 4489              		.cfi_endproc
 4490              	.LFE126:
 4492 0076 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 4493              		.align	2
 4494              		.global	HAL_LIN_Init
 4495              		.thumb
 4496              		.thumb_func
 4498              	HAL_LIN_Init:
 4499              	.LFB127:
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4500              		.loc 1 381 0
 4501              		.cfi_startproc
 4502              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwgKUSV.s 			page 149


 4503              		@ frame_needed = 0, uses_anonymous_args = 0
 4504              	.LVL397:
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4505              		.loc 1 383 0
 4506 0000 0028     		cmp	r0, #0
 4507 0002 43D0     		beq	.L332
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4508              		.loc 1 381 0
 4509 0004 38B5     		push	{r3, r4, r5, lr}
 4510              	.LCFI44:
 4511              		.cfi_def_cfa_offset 16
 4512              		.cfi_offset 3, -16
 4513              		.cfi_offset 4, -12
 4514              		.cfi_offset 5, -8
 4515              		.cfi_offset 14, -4
 4516 0006 0446     		mov	r4, r0
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4517              		.loc 1 394 0
 4518 0008 C369     		ldr	r3, [r0, #28]
 4519 000a B3F5004F 		cmp	r3, #32768
 4520 000e 3FD0     		beq	.L333
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4521              		.loc 1 399 0
 4522 0010 8368     		ldr	r3, [r0, #8]
 4523 0012 002B     		cmp	r3, #0
 4524 0014 3ED1     		bne	.L334
 4525 0016 0D46     		mov	r5, r1
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4526              		.loc 1 404 0
 4527 0018 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4528 001c 13F0FF0F 		tst	r3, #255
 4529 0020 04D1     		bne	.L330
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4530              		.loc 1 407 0
 4531 0022 0023     		movs	r3, #0
 4532 0024 80F87030 		strb	r3, [r0, #112]
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4533              		.loc 1 410 0
 4534 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 4535              	.LVL398:
 4536              	.L330:
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4537              		.loc 1 413 0
 4538 002c 2423     		movs	r3, #36
 4539 002e 84F87130 		strb	r3, [r4, #113]
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4540              		.loc 1 416 0
 4541 0032 2268     		ldr	r2, [r4]
 4542 0034 1368     		ldr	r3, [r2]
 4543 0036 23F00103 		bic	r3, r3, #1
 4544 003a 1360     		str	r3, [r2]
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4545              		.loc 1 419 0
 4546 003c 2046     		mov	r0, r4
 4547 003e FFF7FEFF 		bl	UART_SetConfig
 4548              	.LVL399:
 4549 0042 0128     		cmp	r0, #1
ARM GAS  /tmp/ccwgKUSV.s 			page 150


 4550 0044 27D0     		beq	.L329
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4551              		.loc 1 424 0
 4552 0046 636A     		ldr	r3, [r4, #36]
 4553 0048 13B1     		cbz	r3, .L331
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4554              		.loc 1 426 0
 4555 004a 2046     		mov	r0, r4
 4556 004c FFF7FEFF 		bl	UART_AdvFeatureConfig
 4557              	.LVL400:
 4558              	.L331:
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 4559              		.loc 1 432 0
 4560 0050 2268     		ldr	r2, [r4]
 4561 0052 5368     		ldr	r3, [r2, #4]
 4562 0054 23F40063 		bic	r3, r3, #2048
 4563 0058 5360     		str	r3, [r2, #4]
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4564              		.loc 1 433 0
 4565 005a 2268     		ldr	r2, [r4]
 4566 005c 9368     		ldr	r3, [r2, #8]
 4567 005e 23F02A03 		bic	r3, r3, #42
 4568 0062 9360     		str	r3, [r2, #8]
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4569              		.loc 1 436 0
 4570 0064 2268     		ldr	r2, [r4]
 4571 0066 5368     		ldr	r3, [r2, #4]
 4572 0068 43F48043 		orr	r3, r3, #16384
 4573 006c 5360     		str	r3, [r2, #4]
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4574              		.loc 1 439 0
 4575 006e 2368     		ldr	r3, [r4]
 4576 0070 5968     		ldr	r1, [r3, #4]
 4577 0072 21F02001 		bic	r1, r1, #32
 4578 0076 2943     		orrs	r1, r1, r5
 4579 0078 5960     		str	r1, [r3, #4]
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4580              		.loc 1 442 0
 4581 007a 2268     		ldr	r2, [r4]
 4582 007c 1368     		ldr	r3, [r2]
 4583 007e 43F00103 		orr	r3, r3, #1
 4584 0082 1360     		str	r3, [r2]
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4585              		.loc 1 445 0
 4586 0084 2046     		mov	r0, r4
 4587 0086 FFF7FEFF 		bl	UART_CheckIdleState
 4588              	.LVL401:
 4589 008a 38BD     		pop	{r3, r4, r5, pc}
 4590              	.LVL402:
 4591              	.L332:
 4592              	.LCFI45:
 4593              		.cfi_def_cfa_offset 0
 4594              		.cfi_restore 3
 4595              		.cfi_restore 4
 4596              		.cfi_restore 5
 4597              		.cfi_restore 14
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccwgKUSV.s 			page 151


 4598              		.loc 1 385 0
 4599 008c 0120     		movs	r0, #1
 4600              	.LVL403:
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4601              		.loc 1 446 0
 4602 008e 7047     		bx	lr
 4603              	.LVL404:
 4604              	.L333:
 4605              	.LCFI46:
 4606              		.cfi_def_cfa_offset 16
 4607              		.cfi_offset 3, -16
 4608              		.cfi_offset 4, -12
 4609              		.cfi_offset 5, -8
 4610              		.cfi_offset 14, -4
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4611              		.loc 1 396 0
 4612 0090 0120     		movs	r0, #1
 4613              	.LVL405:
 4614 0092 38BD     		pop	{r3, r4, r5, pc}
 4615              	.LVL406:
 4616              	.L334:
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4617              		.loc 1 401 0
 4618 0094 0120     		movs	r0, #1
 4619              	.LVL407:
 4620              	.L329:
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4621              		.loc 1 446 0
 4622 0096 38BD     		pop	{r3, r4, r5, pc}
 4623              		.cfi_endproc
 4624              	.LFE127:
 4626              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 4627              		.align	2
 4628              		.global	HAL_MultiProcessor_Init
 4629              		.thumb
 4630              		.thumb_func
 4632              	HAL_MultiProcessor_Init:
 4633              	.LFB128:
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4634              		.loc 1 468 0
 4635              		.cfi_startproc
 4636              		@ args = 0, pretend = 0, frame = 0
 4637              		@ frame_needed = 0, uses_anonymous_args = 0
 4638              	.LVL408:
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4639              		.loc 1 470 0
 4640 0000 0028     		cmp	r0, #0
 4641 0002 42D0     		beq	.L341
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4642              		.loc 1 468 0
 4643 0004 70B5     		push	{r4, r5, r6, lr}
 4644              	.LCFI47:
 4645              		.cfi_def_cfa_offset 16
 4646              		.cfi_offset 4, -16
 4647              		.cfi_offset 5, -12
 4648              		.cfi_offset 6, -8
 4649              		.cfi_offset 14, -4
ARM GAS  /tmp/ccwgKUSV.s 			page 152


 4650 0006 0446     		mov	r4, r0
 4651 0008 1546     		mov	r5, r2
 4652 000a 0E46     		mov	r6, r1
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4653              		.loc 1 478 0
 4654 000c 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4655 0010 13F0FF0F 		tst	r3, #255
 4656 0014 04D1     		bne	.L338
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
 4657              		.loc 1 481 0
 4658 0016 0023     		movs	r3, #0
 4659 0018 80F87030 		strb	r3, [r0, #112]
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4660              		.loc 1 484 0
 4661 001c FFF7FEFF 		bl	HAL_UART_MspInit
 4662              	.LVL409:
 4663              	.L338:
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4664              		.loc 1 487 0
 4665 0020 2423     		movs	r3, #36
 4666 0022 84F87130 		strb	r3, [r4, #113]
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4667              		.loc 1 490 0
 4668 0026 2268     		ldr	r2, [r4]
 4669 0028 1368     		ldr	r3, [r2]
 4670 002a 23F00103 		bic	r3, r3, #1
 4671 002e 1360     		str	r3, [r2]
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4672              		.loc 1 493 0
 4673 0030 2046     		mov	r0, r4
 4674 0032 FFF7FEFF 		bl	UART_SetConfig
 4675              	.LVL410:
 4676 0036 0128     		cmp	r0, #1
 4677 0038 29D0     		beq	.L337
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4678              		.loc 1 498 0
 4679 003a 636A     		ldr	r3, [r4, #36]
 4680 003c 13B1     		cbz	r3, .L339
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4681              		.loc 1 500 0
 4682 003e 2046     		mov	r0, r4
 4683 0040 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4684              	.LVL411:
 4685              	.L339:
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4686              		.loc 1 506 0
 4687 0044 2268     		ldr	r2, [r4]
 4688 0046 5368     		ldr	r3, [r2, #4]
 4689 0048 23F49043 		bic	r3, r3, #18432
 4690 004c 5360     		str	r3, [r2, #4]
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4691              		.loc 1 507 0
 4692 004e 2268     		ldr	r2, [r4]
 4693 0050 9368     		ldr	r3, [r2, #8]
 4694 0052 23F02A03 		bic	r3, r3, #42
 4695 0056 9360     		str	r3, [r2, #8]
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccwgKUSV.s 			page 153


 4696              		.loc 1 509 0
 4697 0058 B5F5006F 		cmp	r5, #2048
 4698 005c 06D1     		bne	.L340
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4699              		.loc 1 512 0
 4700 005e 2368     		ldr	r3, [r4]
 4701 0060 5968     		ldr	r1, [r3, #4]
 4702 0062 21F07F41 		bic	r1, r1, #-16777216
 4703 0066 41EA0666 		orr	r6, r1, r6, lsl #24
 4704 006a 5E60     		str	r6, [r3, #4]
 4705              	.L340:
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4706              		.loc 1 516 0
 4707 006c 2368     		ldr	r3, [r4]
 4708 006e 1A68     		ldr	r2, [r3]
 4709 0070 22F40062 		bic	r2, r2, #2048
 4710 0074 1543     		orrs	r5, r5, r2
 4711              	.LVL412:
 4712 0076 1D60     		str	r5, [r3]
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4713              		.loc 1 519 0
 4714 0078 2268     		ldr	r2, [r4]
 4715 007a 1368     		ldr	r3, [r2]
 4716 007c 43F00103 		orr	r3, r3, #1
 4717 0080 1360     		str	r3, [r2]
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4718              		.loc 1 522 0
 4719 0082 2046     		mov	r0, r4
 4720 0084 FFF7FEFF 		bl	UART_CheckIdleState
 4721              	.LVL413:
 4722 0088 70BD     		pop	{r4, r5, r6, pc}
 4723              	.LVL414:
 4724              	.L341:
 4725              	.LCFI48:
 4726              		.cfi_def_cfa_offset 0
 4727              		.cfi_restore 4
 4728              		.cfi_restore 5
 4729              		.cfi_restore 6
 4730              		.cfi_restore 14
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4731              		.loc 1 472 0
 4732 008a 0120     		movs	r0, #1
 4733              	.LVL415:
 4734 008c 7047     		bx	lr
 4735              	.LVL416:
 4736              	.L337:
 4737              	.LCFI49:
 4738              		.cfi_def_cfa_offset 16
 4739              		.cfi_offset 4, -16
 4740              		.cfi_offset 5, -12
 4741              		.cfi_offset 6, -8
 4742              		.cfi_offset 14, -4
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4743              		.loc 1 523 0
 4744 008e 70BD     		pop	{r4, r5, r6, pc}
 4745              		.cfi_endproc
 4746              	.LFE128:
ARM GAS  /tmp/ccwgKUSV.s 			page 154


 4748              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 4749              		.align	2
 4750              		.global	HAL_MultiProcessor_EnableMuteMode
 4751              		.thumb
 4752              		.thumb_func
 4754              	HAL_MultiProcessor_EnableMuteMode:
 4755              	.LFB156:
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 4756              		.loc 1 2087 0
 4757              		.cfi_startproc
 4758              		@ args = 0, pretend = 0, frame = 0
 4759              		@ frame_needed = 0, uses_anonymous_args = 0
 4760              	.LVL417:
 4761 0000 08B5     		push	{r3, lr}
 4762              	.LCFI50:
 4763              		.cfi_def_cfa_offset 8
 4764              		.cfi_offset 3, -8
 4765              		.cfi_offset 14, -4
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4766              		.loc 1 2089 0
 4767 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4768 0006 012B     		cmp	r3, #1
 4769 0008 10D0     		beq	.L346
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4770              		.loc 1 2089 0 is_stmt 0 discriminator 2
 4771 000a 0123     		movs	r3, #1
 4772 000c 80F87030 		strb	r3, [r0, #112]
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4773              		.loc 1 2091 0 is_stmt 1 discriminator 2
 4774 0010 2423     		movs	r3, #36
 4775 0012 80F87130 		strb	r3, [r0, #113]
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4776              		.loc 1 2094 0 discriminator 2
 4777 0016 0268     		ldr	r2, [r0]
 4778 0018 1368     		ldr	r3, [r2]
 4779 001a 43F40053 		orr	r3, r3, #8192
 4780 001e 1360     		str	r3, [r2]
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4781              		.loc 1 2096 0 discriminator 2
 4782 0020 2023     		movs	r3, #32
 4783 0022 80F87130 		strb	r3, [r0, #113]
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4784              		.loc 1 2098 0 discriminator 2
 4785 0026 FFF7FEFF 		bl	UART_CheckIdleState
 4786              	.LVL418:
 4787 002a 08BD     		pop	{r3, pc}
 4788              	.LVL419:
 4789              	.L346:
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4790              		.loc 1 2089 0
 4791 002c 0220     		movs	r0, #2
 4792              	.LVL420:
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4793              		.loc 1 2099 0
 4794 002e 08BD     		pop	{r3, pc}
 4795              		.cfi_endproc
 4796              	.LFE156:
ARM GAS  /tmp/ccwgKUSV.s 			page 155


 4798              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4799              		.align	2
 4800              		.global	HAL_MultiProcessor_DisableMuteMode
 4801              		.thumb
 4802              		.thumb_func
 4804              	HAL_MultiProcessor_DisableMuteMode:
 4805              	.LFB157:
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 4806              		.loc 1 2108 0
 4807              		.cfi_startproc
 4808              		@ args = 0, pretend = 0, frame = 0
 4809              		@ frame_needed = 0, uses_anonymous_args = 0
 4810              	.LVL421:
 4811 0000 08B5     		push	{r3, lr}
 4812              	.LCFI51:
 4813              		.cfi_def_cfa_offset 8
 4814              		.cfi_offset 3, -8
 4815              		.cfi_offset 14, -4
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4816              		.loc 1 2110 0
 4817 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4818 0006 012B     		cmp	r3, #1
 4819 0008 10D0     		beq	.L350
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4820              		.loc 1 2110 0 is_stmt 0 discriminator 2
 4821 000a 0123     		movs	r3, #1
 4822 000c 80F87030 		strb	r3, [r0, #112]
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4823              		.loc 1 2112 0 is_stmt 1 discriminator 2
 4824 0010 2423     		movs	r3, #36
 4825 0012 80F87130 		strb	r3, [r0, #113]
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4826              		.loc 1 2115 0 discriminator 2
 4827 0016 0268     		ldr	r2, [r0]
 4828 0018 1368     		ldr	r3, [r2]
 4829 001a 23F40053 		bic	r3, r3, #8192
 4830 001e 1360     		str	r3, [r2]
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4831              		.loc 1 2117 0 discriminator 2
 4832 0020 2023     		movs	r3, #32
 4833 0022 80F87130 		strb	r3, [r0, #113]
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4834              		.loc 1 2119 0 discriminator 2
 4835 0026 FFF7FEFF 		bl	UART_CheckIdleState
 4836              	.LVL422:
 4837 002a 08BD     		pop	{r3, pc}
 4838              	.LVL423:
 4839              	.L350:
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 4840              		.loc 1 2110 0
 4841 002c 0220     		movs	r0, #2
 4842              	.LVL424:
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4843              		.loc 1 2120 0
 4844 002e 08BD     		pop	{r3, pc}
 4845              		.cfi_endproc
 4846              	.LFE157:
ARM GAS  /tmp/ccwgKUSV.s 			page 156


 4848              		.text
 4849              	.Letext0:
 4850              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4851              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 4852              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 4853              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 4854              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 4855              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 4856              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 4857              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 4858              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 4859              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 4860              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart_ex.h"
ARM GAS  /tmp/ccwgKUSV.s 			page 157


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_uart.c
     /tmp/ccwgKUSV.s:21     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccwgKUSV.s:25     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccwgKUSV.s:47     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccwgKUSV.s:51     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccwgKUSV.s:80     .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccwgKUSV.s:84     .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccwgKUSV.s:131    .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccwgKUSV.s:135    .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccwgKUSV.s:189    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccwgKUSV.s:194    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccwgKUSV.s:207    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccwgKUSV.s:212    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccwgKUSV.s:225    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccwgKUSV.s:230    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccwgKUSV.s:296    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccwgKUSV.s:301    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccwgKUSV.s:397    .text.HAL_UART_Transmit_IT:000000000000006c $d
     /tmp/ccwgKUSV.s:403    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccwgKUSV.s:408    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccwgKUSV.s:559    .text.HAL_UART_Receive_IT:00000000000000c8 $d
     /tmp/ccwgKUSV.s:1541   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccwgKUSV.s:1452   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccwgKUSV.s:565    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccwgKUSV.s:570    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccwgKUSV.s:684    .text.HAL_UART_Transmit_DMA:0000000000000084 $d
     /tmp/ccwgKUSV.s:1301   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccwgKUSV.s:1406   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccwgKUSV.s:1744   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccwgKUSV.s:691    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccwgKUSV.s:696    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccwgKUSV.s:814    .text.HAL_UART_Receive_DMA:0000000000000090 $d
     /tmp/ccwgKUSV.s:1624   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccwgKUSV.s:1698   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccwgKUSV.s:821    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccwgKUSV.s:826    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccwgKUSV.s:901    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccwgKUSV.s:906    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccwgKUSV.s:975    .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccwgKUSV.s:980    .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccwgKUSV.s:1055   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccwgKUSV.s:1060   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccwgKUSV.s:1152   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccwgKUSV.s:1157   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccwgKUSV.s:1208   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccwgKUSV.s:1213   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccwgKUSV.s:1279   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccwgKUSV.s:1284   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccwgKUSV.s:1297   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccwgKUSV.s:1349   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccwgKUSV.s:1353   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccwgKUSV.s:1384   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccwgKUSV.s:1389   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccwgKUSV.s:1402   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccwgKUSV.s:1430   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccwgKUSV.s:1435   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
ARM GAS  /tmp/ccwgKUSV.s 			page 158


     /tmp/ccwgKUSV.s:1448   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccwgKUSV.s:1537   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/ccwgKUSV.s:1620   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccwgKUSV.s:1676   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccwgKUSV.s:1681   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccwgKUSV.s:1694   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccwgKUSV.s:1722   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccwgKUSV.s:1727   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccwgKUSV.s:1740   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccwgKUSV.s:1810   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccwgKUSV.s:1815   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccwgKUSV.s:2081   .text.HAL_UART_IRQHandler:0000000000000160 $d
     /tmp/ccwgKUSV.s:2090   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccwgKUSV.s:2086   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccwgKUSV.s:2118   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccwgKUSV.s:2123   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccwgKUSV.s:2136   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccwgKUSV.s:2141   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccwgKUSV.s:2308   .text.HAL_UART_Abort_IT:00000000000000d8 $d
     /tmp/ccwgKUSV.s:2379   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccwgKUSV.s:2318   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccwgKUSV.s:2314   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccwgKUSV.s:2375   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccwgKUSV.s:2430   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccwgKUSV.s:2435   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccwgKUSV.s:2448   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccwgKUSV.s:2453   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccwgKUSV.s:2534   .text.HAL_UART_AbortTransmit_IT:0000000000000064 $d
     /tmp/ccwgKUSV.s:2543   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccwgKUSV.s:2539   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccwgKUSV.s:2572   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccwgKUSV.s:2577   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccwgKUSV.s:2590   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccwgKUSV.s:2595   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccwgKUSV.s:2694   .text.HAL_UART_AbortReceive_IT:0000000000000084 $d
     /tmp/ccwgKUSV.s:2703   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccwgKUSV.s:2699   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccwgKUSV.s:2742   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccwgKUSV.s:2747   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccwgKUSV.s:2766   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccwgKUSV.s:2771   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccwgKUSV.s:2820   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccwgKUSV.s:2825   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccwgKUSV.s:2874   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccwgKUSV.s:2879   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccwgKUSV.s:2924   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccwgKUSV.s:2929   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccwgKUSV.s:2951   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccwgKUSV.s:2956   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccwgKUSV.s:2974   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccwgKUSV.s:2979   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccwgKUSV.s:3057   .text.UART_SetConfig:0000000000000062 $d
     /tmp/ccwgKUSV.s:3061   .text.UART_SetConfig:0000000000000066 $t
     /tmp/ccwgKUSV.s:3094   .text.UART_SetConfig:0000000000000090 $d
     /tmp/ccwgKUSV.s:3191   .text.UART_SetConfig:0000000000000106 $d
     /tmp/ccwgKUSV.s:3256   .text.UART_SetConfig:0000000000000154 $d
     /tmp/ccwgKUSV.s:3357   .text.UART_SetConfig:00000000000001f4 $d
ARM GAS  /tmp/ccwgKUSV.s 			page 159


     /tmp/ccwgKUSV.s:3466   .text.UART_SetConfig:0000000000000288 $d
     /tmp/ccwgKUSV.s:3476   .text.UART_SetConfig:00000000000002a4 $t
     /tmp/ccwgKUSV.s:3480   .text.UART_SetConfig:00000000000002ac $d
     /tmp/ccwgKUSV.s:3616   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccwgKUSV.s:3621   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccwgKUSV.s:3741   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccwgKUSV.s:3746   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccwgKUSV.s:3824   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccwgKUSV.s:3829   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccwgKUSV.s:3993   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccwgKUSV.s:3998   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccwgKUSV.s:4203   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccwgKUSV.s:4208   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccwgKUSV.s:4295   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccwgKUSV.s:4300   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccwgKUSV.s:4391   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccwgKUSV.s:4396   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccwgKUSV.s:4493   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccwgKUSV.s:4498   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccwgKUSV.s:4627   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccwgKUSV.s:4632   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccwgKUSV.s:4749   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccwgKUSV.s:4754   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccwgKUSV.s:4799   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccwgKUSV.s:4804   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
                     .debug_frame:0000000000000010 $d
     /tmp/ccwgKUSV.s:3107   .text.UART_SetConfig:000000000000009d $d
     /tmp/ccwgKUSV.s:3107   .text.UART_SetConfig:000000000000009e $t
     /tmp/ccwgKUSV.s:3200   .text.UART_SetConfig:000000000000010f $d
     /tmp/ccwgKUSV.s:3200   .text.UART_SetConfig:0000000000000110 $t
     /tmp/ccwgKUSV.s:3265   .text.UART_SetConfig:000000000000015d $d
     /tmp/ccwgKUSV.s:3265   .text.UART_SetConfig:000000000000015e $t
     /tmp/ccwgKUSV.s:3366   .text.UART_SetConfig:00000000000001fd $d
     /tmp/ccwgKUSV.s:3366   .text.UART_SetConfig:00000000000001fe $t
     /tmp/ccwgKUSV.s:3489   .text.UART_SetConfig:00000000000002b5 $d
     /tmp/ccwgKUSV.s:3489   .text.UART_SetConfig:00000000000002b6 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
